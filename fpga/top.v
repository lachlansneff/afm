/* Generated by Yosys 0.9 (git sha1 UNKNOWN, clang 12.0.0 -fPIC -Os) */

(* \nmigen.hierarchy  = "top.U$$0" *)
(* generator = "nMigen" *)
module \U$$0 (rst, clk, waveform);
  (* src = "/Users/lachlansneff/dev/afm/fpga/sigma_delta_dac.py:14" *)
  wire [12:0] \$1 ;
  (* init = 13'h0000 *)
  (* src = "/Users/lachlansneff/dev/afm/fpga/sigma_delta_dac.py:12" *)
  reg [12:0] acc = 13'h0000;
  (* src = "/Users/lachlansneff/dev/afm/fpga/sigma_delta_dac.py:12" *)
  reg [12:0] \acc$next ;
  (* src = "/Users/lachlansneff/Library/Python/3.9/lib/python/site-packages/nmigen/hdl/ir.py:526" *)
  input clk;
  (* src = "/Users/lachlansneff/dev/afm/fpga/sigma_delta_dac.py:6" *)
  reg out;
  (* src = "/Users/lachlansneff/Library/Python/3.9/lib/python/site-packages/nmigen/hdl/ir.py:526" *)
  input rst;
  (* src = "/Users/lachlansneff/dev/afm/fpga/sigma_delta_dac.py:7" *)
  input [11:0] waveform;
  assign \$1  = acc[11:0] + (* src = "/Users/lachlansneff/dev/afm/fpga/sigma_delta_dac.py:14" *) waveform;
  always @(posedge clk)
      acc <= \acc$next ;
  always @* begin
    \acc$next  = acc;
    \acc$next  = \$1 ;
    (* src = "/Users/lachlansneff/Library/Python/3.9/lib/python/site-packages/nmigen/hdl/xfrm.py:519" *)
    casez (rst)
      1'h1:
          \acc$next  = 13'h0000;
    endcase
  end
  always @* begin
    out = 1'h0;
    out = acc[12];
  end
endmodule

(* \nmigen.hierarchy  = "top.U$$1" *)
(* generator = "nMigen" *)
module \U$$1 (rst, clk, waveform);
  (* src = "/Users/lachlansneff/dev/afm/fpga/sigma_delta_dac.py:14" *)
  wire [12:0] \$1 ;
  (* init = 13'h0000 *)
  (* src = "/Users/lachlansneff/dev/afm/fpga/sigma_delta_dac.py:12" *)
  reg [12:0] acc = 13'h0000;
  (* src = "/Users/lachlansneff/dev/afm/fpga/sigma_delta_dac.py:12" *)
  reg [12:0] \acc$next ;
  (* src = "/Users/lachlansneff/Library/Python/3.9/lib/python/site-packages/nmigen/hdl/ir.py:526" *)
  input clk;
  (* src = "/Users/lachlansneff/dev/afm/fpga/sigma_delta_dac.py:6" *)
  reg out;
  (* src = "/Users/lachlansneff/Library/Python/3.9/lib/python/site-packages/nmigen/hdl/ir.py:526" *)
  input rst;
  (* src = "/Users/lachlansneff/dev/afm/fpga/sigma_delta_dac.py:7" *)
  input [11:0] waveform;
  assign \$1  = acc[11:0] + (* src = "/Users/lachlansneff/dev/afm/fpga/sigma_delta_dac.py:14" *) waveform;
  always @(posedge clk)
      acc <= \acc$next ;
  always @* begin
    \acc$next  = acc;
    \acc$next  = \$1 ;
    (* src = "/Users/lachlansneff/Library/Python/3.9/lib/python/site-packages/nmigen/hdl/xfrm.py:519" *)
    casez (rst)
      1'h1:
          \acc$next  = 13'h0000;
    endcase
  end
  always @* begin
    out = 1'h0;
    out = acc[12];
  end
endmodule

(* \nmigen.hierarchy  = "top.U$$2" *)
(* generator = "nMigen" *)
module \U$$2 (cos, rst, clk, phase_step, sin);
  (* src = "/Users/lachlansneff/dev/afm/fpga/nco.py:65" *)
  wire [32:0] \$1 ;
  (* src = "/Users/lachlansneff/dev/afm/fpga/nco.py:65" *)
  wire [32:0] \$2 ;
  (* src = "/Users/lachlansneff/Library/Python/3.9/lib/python/site-packages/nmigen/hdl/ir.py:526" *)
  input clk;
  (* src = "/Users/lachlansneff/dev/afm/fpga/nco.py:48" *)
  output [11:0] cos;
  reg [11:0] cos;
  (* init = 32'd0 *)
  (* src = "/Users/lachlansneff/dev/afm/fpga/nco.py:56" *)
  reg [31:0] phase_acc = 32'd0;
  (* src = "/Users/lachlansneff/dev/afm/fpga/nco.py:56" *)
  reg [31:0] \phase_acc$next ;
  (* src = "/Users/lachlansneff/dev/afm/fpga/nco.py:49" *)
  input [31:0] phase_step;
  (* src = "/Users/lachlansneff/Library/Python/3.9/lib/python/site-packages/nmigen/hdl/ir.py:526" *)
  input rst;
  (* src = "/Users/lachlansneff/dev/afm/fpga/nco.py:47" *)
  output [11:0] sin;
  reg [11:0] sin;
  (* src = "/Users/lachlansneff/dev/afm/fpga/nco.py:19" *)
  reg [11:0] sincos_lookup_addr;
  (* src = "/Users/lachlansneff/dev/afm/fpga/nco.py:21" *)
  wire [11:0] sincos_lookup_cos;
  (* src = "/Users/lachlansneff/dev/afm/fpga/nco.py:20" *)
  wire [11:0] sincos_lookup_sin;
  assign \$2  = phase_acc + (* src = "/Users/lachlansneff/dev/afm/fpga/nco.py:65" *) phase_step;
  always @(posedge clk)
      phase_acc <= \phase_acc$next ;
  sincos_lookup sincos_lookup (
    .addr(sincos_lookup_addr),
    .clk(clk),
    .cos(sincos_lookup_cos),
    .sin(sincos_lookup_sin)
  );
  always @* begin
    sincos_lookup_addr = 12'h000;
    sincos_lookup_addr = phase_acc[31:20];
  end
  always @* begin
    sin = 12'h000;
    sin = sincos_lookup_sin;
  end
  always @* begin
    cos = 12'h000;
    cos = sincos_lookup_cos;
  end
  always @* begin
    \phase_acc$next  = phase_acc;
    \phase_acc$next  = \$1 [31:0];
    (* src = "/Users/lachlansneff/Library/Python/3.9/lib/python/site-packages/nmigen/hdl/xfrm.py:519" *)
    casez (rst)
      1'h1:
          \phase_acc$next  = 32'd0;
    endcase
  end
  assign \$1  = \$2 ;
endmodule

(* \nmigen.hierarchy  = "top.U$$3" *)
(* generator = "nMigen" *)
module \U$$3 (rst, clk, phase_step, led, nco_ctrl__enable);
  (* src = "/Users/lachlansneff/dev/afm/fpga/picorv32.py:93" *)
  wire [31:0] \$10 ;
  (* src = "/Users/lachlansneff/dev/afm/fpga/picorv32.py:98" *)
  wire \$100 ;
  (* src = "/Users/lachlansneff/dev/afm/fpga/picorv32.py:98" *)
  wire \$102 ;
  (* src = "/Users/lachlansneff/dev/afm/fpga/picorv32.py:98" *)
  wire \$104 ;
  (* src = "/Users/lachlansneff/dev/afm/fpga/picorv32.py:92" *)
  wire \$106 ;
  (* src = "/Users/lachlansneff/dev/afm/fpga/picorv32.py:92" *)
  wire \$108 ;
  (* src = "/Users/lachlansneff/dev/afm/fpga/picorv32.py:92" *)
  wire \$110 ;
  (* src = "/Users/lachlansneff/dev/afm/fpga/picorv32.py:98" *)
  wire \$112 ;
  (* src = "/Users/lachlansneff/dev/afm/fpga/picorv32.py:98" *)
  wire \$114 ;
  (* src = "/Users/lachlansneff/dev/afm/fpga/picorv32.py:98" *)
  wire \$116 ;
  (* src = "/Users/lachlansneff/dev/afm/fpga/picorv32.py:93" *)
  wire \$12 ;
  (* src = "/Users/lachlansneff/dev/afm/fpga/picorv32.py:98" *)
  wire \$14 ;
  (* src = "/Users/lachlansneff/dev/afm/fpga/picorv32.py:98" *)
  wire \$16 ;
  (* src = "/Users/lachlansneff/dev/afm/fpga/picorv32.py:98" *)
  wire \$18 ;
  (* src = "/Users/lachlansneff/dev/afm/fpga/picorv32.py:54" *)
  wire \$2 ;
  (* src = "/Users/lachlansneff/dev/afm/fpga/picorv32.py:98" *)
  wire \$20 ;
  (* src = "/Users/lachlansneff/dev/afm/fpga/picorv32.py:98" *)
  wire \$22 ;
  (* src = "/Users/lachlansneff/dev/afm/fpga/picorv32.py:98" *)
  wire \$24 ;
  (* src = "/Users/lachlansneff/dev/afm/fpga/picorv32.py:104" *)
  wire \$26 ;
  (* src = "/Users/lachlansneff/dev/afm/fpga/picorv32.py:104" *)
  wire [3:0] \$27 ;
  (* src = "/Users/lachlansneff/dev/afm/fpga/picorv32.py:104" *)
  wire \$30 ;
  (* src = "/Users/lachlansneff/dev/afm/fpga/picorv32.py:104" *)
  wire \$32 ;
  (* src = "/Users/lachlansneff/dev/afm/fpga/picorv32.py:98" *)
  wire \$34 ;
  (* src = "/Users/lachlansneff/dev/afm/fpga/picorv32.py:98" *)
  wire \$36 ;
  (* src = "/Users/lachlansneff/dev/afm/fpga/picorv32.py:98" *)
  wire \$38 ;
  (* src = "/Users/lachlansneff/dev/afm/fpga/picorv32.py:92" *)
  wire \$4 ;
  (* src = "/Users/lachlansneff/dev/afm/fpga/picorv32.py:104" *)
  wire \$40 ;
  (* src = "/Users/lachlansneff/dev/afm/fpga/picorv32.py:104" *)
  wire [3:0] \$41 ;
  (* src = "/Users/lachlansneff/dev/afm/fpga/picorv32.py:104" *)
  wire \$44 ;
  (* src = "/Users/lachlansneff/dev/afm/fpga/picorv32.py:104" *)
  wire \$46 ;
  (* src = "/Users/lachlansneff/dev/afm/fpga/picorv32.py:83" *)
  wire [31:0] \$48 ;
  (* src = "/Users/lachlansneff/dev/afm/fpga/picorv32.py:83" *)
  wire [31:0] \$49 ;
  (* src = "/Users/lachlansneff/dev/afm/fpga/picorv32.py:92" *)
  wire \$51 ;
  (* src = "/Users/lachlansneff/dev/afm/fpga/picorv32.py:92" *)
  wire \$53 ;
  (* src = "/Users/lachlansneff/dev/afm/fpga/picorv32.py:92" *)
  wire \$55 ;
  (* src = "/Users/lachlansneff/dev/afm/fpga/picorv32.py:104" *)
  wire \$57 ;
  (* src = "/Users/lachlansneff/dev/afm/fpga/picorv32.py:104" *)
  wire [3:0] \$58 ;
  (* src = "/Users/lachlansneff/dev/afm/fpga/picorv32.py:92" *)
  wire \$6 ;
  (* src = "/Users/lachlansneff/dev/afm/fpga/picorv32.py:104" *)
  wire \$61 ;
  (* src = "/Users/lachlansneff/dev/afm/fpga/picorv32.py:104" *)
  wire \$63 ;
  (* src = "/Users/lachlansneff/dev/afm/fpga/top.py:28" *)
  wire [31:0] \$65 ;
  (* src = "/Users/lachlansneff/dev/afm/fpga/picorv32.py:104" *)
  wire \$67 ;
  (* src = "/Users/lachlansneff/dev/afm/fpga/picorv32.py:104" *)
  wire [3:0] \$68 ;
  (* src = "/Users/lachlansneff/dev/afm/fpga/picorv32.py:104" *)
  wire \$71 ;
  (* src = "/Users/lachlansneff/dev/afm/fpga/picorv32.py:104" *)
  wire \$73 ;
  (* src = "/Users/lachlansneff/dev/afm/fpga/picorv32.py:85" *)
  wire \$75 ;
  (* src = "/Users/lachlansneff/dev/afm/fpga/picorv32.py:85" *)
  wire [3:0] \$76 ;
  (* src = "/Users/lachlansneff/dev/afm/fpga/picorv32.py:87" *)
  wire [31:0] \$79 ;
  (* src = "/Users/lachlansneff/dev/afm/fpga/picorv32.py:92" *)
  wire \$8 ;
  (* src = "/Users/lachlansneff/dev/afm/fpga/picorv32.py:87" *)
  wire [31:0] \$80 ;
  (* src = "/Users/lachlansneff/dev/afm/fpga/picorv32.py:92" *)
  wire \$82 ;
  (* src = "/Users/lachlansneff/dev/afm/fpga/picorv32.py:92" *)
  wire \$84 ;
  (* src = "/Users/lachlansneff/dev/afm/fpga/picorv32.py:92" *)
  wire \$86 ;
  (* src = "/Users/lachlansneff/dev/afm/fpga/picorv32.py:98" *)
  wire \$88 ;
  (* src = "/Users/lachlansneff/dev/afm/fpga/picorv32.py:98" *)
  wire \$90 ;
  (* src = "/Users/lachlansneff/dev/afm/fpga/picorv32.py:98" *)
  wire \$92 ;
  (* src = "/Users/lachlansneff/dev/afm/fpga/picorv32.py:92" *)
  wire \$94 ;
  (* src = "/Users/lachlansneff/dev/afm/fpga/picorv32.py:92" *)
  wire \$96 ;
  (* src = "/Users/lachlansneff/dev/afm/fpga/picorv32.py:92" *)
  wire \$98 ;
  (* src = "/Users/lachlansneff/Library/Python/3.9/lib/python/site-packages/nmigen/hdl/ir.py:526" *)
  input clk;
  (* init = 1'h0 *)
  (* src = "/Users/lachlansneff/dev/afm/fpga/top.py:32" *)
  output led;
  reg led = 1'h0;
  (* src = "/Users/lachlansneff/dev/afm/fpga/top.py:32" *)
  reg \led$next ;
  (* src = "/Users/lachlansneff/dev/afm/fpga/picorv32.py:47" *)
  wire [31:0] mem_addr;
  (* src = "/Users/lachlansneff/dev/afm/fpga/picorv32.py:77" *)
  reg [10:0] mem_r_addr;
  (* src = "/Users/lachlansneff/dev/afm/fpga/picorv32.py:77" *)
  wire [31:0] mem_r_data;
  (* src = "/Users/lachlansneff/dev/afm/fpga/picorv32.py:77" *)
  reg mem_r_en;
  (* src = "/Users/lachlansneff/dev/afm/fpga/picorv32.py:50" *)
  reg [31:0] mem_rdata;
  (* init = 1'h0 *)
  (* src = "/Users/lachlansneff/dev/afm/fpga/picorv32.py:46" *)
  reg mem_ready = 1'h0;
  (* src = "/Users/lachlansneff/dev/afm/fpga/picorv32.py:46" *)
  reg \mem_ready$next ;
  (* src = "/Users/lachlansneff/dev/afm/fpga/picorv32.py:45" *)
  wire mem_valid;
  (* src = "/Users/lachlansneff/dev/afm/fpga/picorv32.py:78" *)
  reg [10:0] mem_w_addr;
  (* src = "/Users/lachlansneff/dev/afm/fpga/picorv32.py:78" *)
  reg [31:0] mem_w_data;
  (* src = "/Users/lachlansneff/dev/afm/fpga/picorv32.py:78" *)
  reg [3:0] mem_w_en;
  (* src = "/Users/lachlansneff/dev/afm/fpga/picorv32.py:48" *)
  wire [31:0] mem_wdata;
  (* src = "/Users/lachlansneff/dev/afm/fpga/picorv32.py:49" *)
  wire [3:0] mem_wstrb;
  (* init = 1'h0 *)
  (* src = "/Users/lachlansneff/dev/afm/fpga/top.py:28" *)
  output nco_ctrl__enable;
  reg nco_ctrl__enable = 1'h0;
  (* src = "/Users/lachlansneff/dev/afm/fpga/top.py:28" *)
  reg \nco_ctrl__enable$next ;
  (* init = 32'd0 *)
  (* src = "/Users/lachlansneff/dev/afm/fpga/nco.py:49" *)
  output [31:0] phase_step;
  reg [31:0] phase_step = 32'd0;
  (* src = "/Users/lachlansneff/dev/afm/fpga/nco.py:49" *)
  reg [31:0] \phase_step$next ;
  (* src = "/Users/lachlansneff/dev/afm/fpga/picorv32.py:44" *)
  reg resetn;
  (* src = "/Users/lachlansneff/Library/Python/3.9/lib/python/site-packages/nmigen/hdl/ir.py:526" *)
  input rst;
  assign \$100  = | (* src = "/Users/lachlansneff/dev/afm/fpga/picorv32.py:98" *) mem_wstrb;
  assign \$102  = mem_addr == (* src = "/Users/lachlansneff/dev/afm/fpga/picorv32.py:98" *) 32'd4026531840;
  assign \$104  = \$100  & (* src = "/Users/lachlansneff/dev/afm/fpga/picorv32.py:98" *) \$102 ;
  assign \$106  = resetn & (* src = "/Users/lachlansneff/dev/afm/fpga/picorv32.py:92" *) mem_valid;
  assign \$108  = ~ (* src = "/Users/lachlansneff/dev/afm/fpga/picorv32.py:92" *) mem_ready;
  assign \$10  = mem_addr >>> (* src = "/Users/lachlansneff/dev/afm/fpga/picorv32.py:93" *) 2'h2;
  assign \$110  = \$106  & (* src = "/Users/lachlansneff/dev/afm/fpga/picorv32.py:92" *) \$108 ;
  assign \$112  = | (* src = "/Users/lachlansneff/dev/afm/fpga/picorv32.py:98" *) mem_wstrb;
  assign \$114  = mem_addr == (* src = "/Users/lachlansneff/dev/afm/fpga/picorv32.py:98" *) 32'd4026531844;
  assign \$116  = \$112  & (* src = "/Users/lachlansneff/dev/afm/fpga/picorv32.py:98" *) \$114 ;
  assign \$12  = \$10  < (* src = "/Users/lachlansneff/dev/afm/fpga/picorv32.py:93" *) 11'h4f7;
  assign \$14  = | (* src = "/Users/lachlansneff/dev/afm/fpga/picorv32.py:98" *) mem_wstrb;
  assign \$16  = mem_addr == (* src = "/Users/lachlansneff/dev/afm/fpga/picorv32.py:98" *) 32'd3405691568;
  assign \$18  = \$14  & (* src = "/Users/lachlansneff/dev/afm/fpga/picorv32.py:98" *) \$16 ;
  assign \$20  = | (* src = "/Users/lachlansneff/dev/afm/fpga/picorv32.py:98" *) mem_wstrb;
  assign \$22  = mem_addr == (* src = "/Users/lachlansneff/dev/afm/fpga/picorv32.py:98" *) 32'd4026531840;
  assign \$24  = \$20  & (* src = "/Users/lachlansneff/dev/afm/fpga/picorv32.py:98" *) \$22 ;
  assign \$27  = ~ (* src = "/Users/lachlansneff/dev/afm/fpga/picorv32.py:104" *) mem_wstrb;
  assign \$26  = | (* src = "/Users/lachlansneff/dev/afm/fpga/picorv32.py:104" *) \$27 ;
  assign \$2  = ~ (* src = "/Users/lachlansneff/dev/afm/fpga/picorv32.py:54" *) rst;
  assign \$30  = mem_addr == (* src = "/Users/lachlansneff/dev/afm/fpga/picorv32.py:104" *) 32'd4026531840;
  assign \$32  = \$26  & (* src = "/Users/lachlansneff/dev/afm/fpga/picorv32.py:104" *) \$30 ;
  assign \$34  = | (* src = "/Users/lachlansneff/dev/afm/fpga/picorv32.py:98" *) mem_wstrb;
  assign \$36  = mem_addr == (* src = "/Users/lachlansneff/dev/afm/fpga/picorv32.py:98" *) 32'd4026531844;
  assign \$38  = \$34  & (* src = "/Users/lachlansneff/dev/afm/fpga/picorv32.py:98" *) \$36 ;
  assign \$41  = ~ (* src = "/Users/lachlansneff/dev/afm/fpga/picorv32.py:104" *) mem_wstrb;
  assign \$40  = | (* src = "/Users/lachlansneff/dev/afm/fpga/picorv32.py:104" *) \$41 ;
  assign \$44  = mem_addr == (* src = "/Users/lachlansneff/dev/afm/fpga/picorv32.py:104" *) 32'd4026531844;
  assign \$46  = \$40  & (* src = "/Users/lachlansneff/dev/afm/fpga/picorv32.py:104" *) \$44 ;
  assign \$4  = resetn & (* src = "/Users/lachlansneff/dev/afm/fpga/picorv32.py:92" *) mem_valid;
  assign \$49  = mem_addr >>> (* src = "/Users/lachlansneff/dev/afm/fpga/picorv32.py:83" *) 2'h2;
  assign \$51  = resetn & (* src = "/Users/lachlansneff/dev/afm/fpga/picorv32.py:92" *) mem_valid;
  assign \$53  = ~ (* src = "/Users/lachlansneff/dev/afm/fpga/picorv32.py:92" *) mem_ready;
  assign \$55  = \$51  & (* src = "/Users/lachlansneff/dev/afm/fpga/picorv32.py:92" *) \$53 ;
  assign \$58  = ~ (* src = "/Users/lachlansneff/dev/afm/fpga/picorv32.py:104" *) mem_wstrb;
  assign \$57  = | (* src = "/Users/lachlansneff/dev/afm/fpga/picorv32.py:104" *) \$58 ;
  assign \$61  = mem_addr == (* src = "/Users/lachlansneff/dev/afm/fpga/picorv32.py:104" *) 32'd4026531840;
  assign \$63  = \$57  & (* src = "/Users/lachlansneff/dev/afm/fpga/picorv32.py:104" *) \$61 ;
  assign \$65  = + (* src = "/Users/lachlansneff/dev/afm/fpga/top.py:28" *) nco_ctrl__enable;
  assign \$68  = ~ (* src = "/Users/lachlansneff/dev/afm/fpga/picorv32.py:104" *) mem_wstrb;
  assign \$6  = ~ (* src = "/Users/lachlansneff/dev/afm/fpga/picorv32.py:92" *) mem_ready;
  assign \$67  = | (* src = "/Users/lachlansneff/dev/afm/fpga/picorv32.py:104" *) \$68 ;
  assign \$71  = mem_addr == (* src = "/Users/lachlansneff/dev/afm/fpga/picorv32.py:104" *) 32'd4026531844;
  assign \$73  = \$67  & (* src = "/Users/lachlansneff/dev/afm/fpga/picorv32.py:104" *) \$71 ;
  assign \$76  = ~ (* src = "/Users/lachlansneff/dev/afm/fpga/picorv32.py:85" *) mem_wstrb;
  assign \$75  = | (* src = "/Users/lachlansneff/dev/afm/fpga/picorv32.py:85" *) \$76 ;
  assign \$80  = mem_addr >>> (* src = "/Users/lachlansneff/dev/afm/fpga/picorv32.py:87" *) 2'h2;
  assign \$82  = resetn & (* src = "/Users/lachlansneff/dev/afm/fpga/picorv32.py:92" *) mem_valid;
  assign \$84  = ~ (* src = "/Users/lachlansneff/dev/afm/fpga/picorv32.py:92" *) mem_ready;
  assign \$86  = \$82  & (* src = "/Users/lachlansneff/dev/afm/fpga/picorv32.py:92" *) \$84 ;
  assign \$88  = | (* src = "/Users/lachlansneff/dev/afm/fpga/picorv32.py:98" *) mem_wstrb;
  assign \$8  = \$4  & (* src = "/Users/lachlansneff/dev/afm/fpga/picorv32.py:92" *) \$6 ;
  assign \$90  = mem_addr == (* src = "/Users/lachlansneff/dev/afm/fpga/picorv32.py:98" *) 32'd3405691568;
  assign \$92  = \$88  & (* src = "/Users/lachlansneff/dev/afm/fpga/picorv32.py:98" *) \$90 ;
  assign \$94  = resetn & (* src = "/Users/lachlansneff/dev/afm/fpga/picorv32.py:92" *) mem_valid;
  assign \$96  = ~ (* src = "/Users/lachlansneff/dev/afm/fpga/picorv32.py:92" *) mem_ready;
  assign \$98  = \$94  & (* src = "/Users/lachlansneff/dev/afm/fpga/picorv32.py:92" *) \$96 ;
  always @(posedge clk)
      phase_step <= \phase_step$next ;
  always @(posedge clk)
      nco_ctrl__enable <= \nco_ctrl__enable$next ;
  always @(posedge clk)
      led <= \led$next ;
  always @(posedge clk)
      mem_ready <= \mem_ready$next ;
  reg [31:0] mem [1270:0];
  initial begin
    mem[0] = 32'd0;
    mem[1] = 32'd0;
    mem[2] = 32'd0;
    mem[3] = 32'd0;
    mem[4] = 32'd0;
    mem[5] = 32'd0;
    mem[6] = 32'd0;
    mem[7] = 32'd0;
    mem[8] = 32'd0;
    mem[9] = 32'd0;
    mem[10] = 32'd0;
    mem[11] = 32'd0;
    mem[12] = 32'd0;
    mem[13] = 32'd0;
    mem[14] = 32'd0;
    mem[15] = 32'd0;
    mem[16] = 32'd0;
    mem[17] = 32'd0;
    mem[18] = 32'd0;
    mem[19] = 32'd0;
    mem[20] = 32'd0;
    mem[21] = 32'd0;
    mem[22] = 32'd0;
    mem[23] = 32'd0;
    mem[24] = 32'd0;
    mem[25] = 32'd0;
    mem[26] = 32'd0;
    mem[27] = 32'd0;
    mem[28] = 32'd0;
    mem[29] = 32'd0;
    mem[30] = 32'd0;
    mem[31] = 32'd0;
    mem[32] = 32'd0;
    mem[33] = 32'd0;
    mem[34] = 32'd0;
    mem[35] = 32'd0;
    mem[36] = 32'd0;
    mem[37] = 32'd0;
    mem[38] = 32'd0;
    mem[39] = 32'd0;
    mem[40] = 32'd0;
    mem[41] = 32'd0;
    mem[42] = 32'd0;
    mem[43] = 32'd0;
    mem[44] = 32'd0;
    mem[45] = 32'd0;
    mem[46] = 32'd0;
    mem[47] = 32'd0;
    mem[48] = 32'd0;
    mem[49] = 32'd0;
    mem[50] = 32'd0;
    mem[51] = 32'd0;
    mem[52] = 32'd0;
    mem[53] = 32'd0;
    mem[54] = 32'd0;
    mem[55] = 32'd0;
    mem[56] = 32'd0;
    mem[57] = 32'd0;
    mem[58] = 32'd0;
    mem[59] = 32'd0;
    mem[60] = 32'd0;
    mem[61] = 32'd0;
    mem[62] = 32'd0;
    mem[63] = 32'd0;
    mem[64] = 32'd0;
    mem[65] = 32'd0;
    mem[66] = 32'd0;
    mem[67] = 32'd0;
    mem[68] = 32'd0;
    mem[69] = 32'd0;
    mem[70] = 32'd0;
    mem[71] = 32'd0;
    mem[72] = 32'd0;
    mem[73] = 32'd0;
    mem[74] = 32'd0;
    mem[75] = 32'd0;
    mem[76] = 32'd0;
    mem[77] = 32'd0;
    mem[78] = 32'd0;
    mem[79] = 32'd0;
    mem[80] = 32'd0;
    mem[81] = 32'd0;
    mem[82] = 32'd0;
    mem[83] = 32'd0;
    mem[84] = 32'd0;
    mem[85] = 32'd0;
    mem[86] = 32'd0;
    mem[87] = 32'd0;
    mem[88] = 32'd0;
    mem[89] = 32'd0;
    mem[90] = 32'd0;
    mem[91] = 32'd0;
    mem[92] = 32'd0;
    mem[93] = 32'd0;
    mem[94] = 32'd0;
    mem[95] = 32'd0;
    mem[96] = 32'd0;
    mem[97] = 32'd0;
    mem[98] = 32'd0;
    mem[99] = 32'd0;
    mem[100] = 32'd0;
    mem[101] = 32'd0;
    mem[102] = 32'd0;
    mem[103] = 32'd0;
    mem[104] = 32'd0;
    mem[105] = 32'd0;
    mem[106] = 32'd0;
    mem[107] = 32'd0;
    mem[108] = 32'd0;
    mem[109] = 32'd0;
    mem[110] = 32'd0;
    mem[111] = 32'd0;
    mem[112] = 32'd0;
    mem[113] = 32'd0;
    mem[114] = 32'd0;
    mem[115] = 32'd0;
    mem[116] = 32'd0;
    mem[117] = 32'd0;
    mem[118] = 32'd0;
    mem[119] = 32'd0;
    mem[120] = 32'd0;
    mem[121] = 32'd0;
    mem[122] = 32'd0;
    mem[123] = 32'd0;
    mem[124] = 32'd0;
    mem[125] = 32'd0;
    mem[126] = 32'd0;
    mem[127] = 32'd0;
    mem[128] = 32'd0;
    mem[129] = 32'd0;
    mem[130] = 32'd0;
    mem[131] = 32'd0;
    mem[132] = 32'd0;
    mem[133] = 32'd0;
    mem[134] = 32'd0;
    mem[135] = 32'd0;
    mem[136] = 32'd0;
    mem[137] = 32'd0;
    mem[138] = 32'd0;
    mem[139] = 32'd0;
    mem[140] = 32'd0;
    mem[141] = 32'd0;
    mem[142] = 32'd0;
    mem[143] = 32'd0;
    mem[144] = 32'd0;
    mem[145] = 32'd0;
    mem[146] = 32'd0;
    mem[147] = 32'd0;
    mem[148] = 32'd0;
    mem[149] = 32'd0;
    mem[150] = 32'd0;
    mem[151] = 32'd0;
    mem[152] = 32'd0;
    mem[153] = 32'd0;
    mem[154] = 32'd0;
    mem[155] = 32'd0;
    mem[156] = 32'd0;
    mem[157] = 32'd0;
    mem[158] = 32'd0;
    mem[159] = 32'd0;
    mem[160] = 32'd0;
    mem[161] = 32'd0;
    mem[162] = 32'd0;
    mem[163] = 32'd0;
    mem[164] = 32'd0;
    mem[165] = 32'd0;
    mem[166] = 32'd0;
    mem[167] = 32'd0;
    mem[168] = 32'd0;
    mem[169] = 32'd0;
    mem[170] = 32'd0;
    mem[171] = 32'd0;
    mem[172] = 32'd0;
    mem[173] = 32'd0;
    mem[174] = 32'd0;
    mem[175] = 32'd0;
    mem[176] = 32'd0;
    mem[177] = 32'd0;
    mem[178] = 32'd0;
    mem[179] = 32'd0;
    mem[180] = 32'd0;
    mem[181] = 32'd0;
    mem[182] = 32'd0;
    mem[183] = 32'd0;
    mem[184] = 32'd0;
    mem[185] = 32'd0;
    mem[186] = 32'd0;
    mem[187] = 32'd0;
    mem[188] = 32'd0;
    mem[189] = 32'd0;
    mem[190] = 32'd0;
    mem[191] = 32'd0;
    mem[192] = 32'd0;
    mem[193] = 32'd0;
    mem[194] = 32'd0;
    mem[195] = 32'd0;
    mem[196] = 32'd0;
    mem[197] = 32'd0;
    mem[198] = 32'd0;
    mem[199] = 32'd0;
    mem[200] = 32'd0;
    mem[201] = 32'd0;
    mem[202] = 32'd0;
    mem[203] = 32'd0;
    mem[204] = 32'd0;
    mem[205] = 32'd0;
    mem[206] = 32'd0;
    mem[207] = 32'd0;
    mem[208] = 32'd0;
    mem[209] = 32'd0;
    mem[210] = 32'd0;
    mem[211] = 32'd0;
    mem[212] = 32'd0;
    mem[213] = 32'd0;
    mem[214] = 32'd0;
    mem[215] = 32'd0;
    mem[216] = 32'd0;
    mem[217] = 32'd0;
    mem[218] = 32'd0;
    mem[219] = 32'd0;
    mem[220] = 32'd0;
    mem[221] = 32'd0;
    mem[222] = 32'd0;
    mem[223] = 32'd0;
    mem[224] = 32'd0;
    mem[225] = 32'd0;
    mem[226] = 32'd0;
    mem[227] = 32'd0;
    mem[228] = 32'd0;
    mem[229] = 32'd0;
    mem[230] = 32'd0;
    mem[231] = 32'd0;
    mem[232] = 32'd0;
    mem[233] = 32'd0;
    mem[234] = 32'd0;
    mem[235] = 32'd0;
    mem[236] = 32'd0;
    mem[237] = 32'd0;
    mem[238] = 32'd0;
    mem[239] = 32'd0;
    mem[240] = 32'd0;
    mem[241] = 32'd0;
    mem[242] = 32'd0;
    mem[243] = 32'd0;
    mem[244] = 32'd0;
    mem[245] = 32'd0;
    mem[246] = 32'd0;
    mem[247] = 32'd0;
    mem[248] = 32'd0;
    mem[249] = 32'd0;
    mem[250] = 32'd0;
    mem[251] = 32'd0;
    mem[252] = 32'd0;
    mem[253] = 32'd0;
    mem[254] = 32'd0;
    mem[255] = 32'd0;
    mem[256] = 32'd20971631;
    mem[257] = 32'd0;
    mem[258] = 32'd0;
    mem[259] = 32'd0;
    mem[260] = 32'd4194415;
    mem[261] = 32'd407;
    mem[262] = 32'd1052869011;
    mem[263] = 32'd98835;
    mem[264] = 32'd279;
    mem[265] = 32'd4261478675;
    mem[266] = 32'd66611;
    mem[267] = 32'd8388719;
    mem[268] = 32'd4267700335;
    mem[269] = 32'd3322286401;
    mem[270] = 32'd4247;
    mem[271] = 32'd4188045543;
    mem[272] = 32'd1335;
    mem[273] = 32'd328979;
    mem[274] = 32'd1463;
    mem[275] = 32'd361875;
    mem[276] = 32'd10876771;
    mem[277] = 32'd368675;
    mem[278] = 32'd3991078289;
    mem[279] = 32'd87555749;
    mem[280] = 32'd85131264;
    mem[281] = 32'd95879173;
    mem[282] = 32'd2241003520;
    mem[283] = 32'd4234346501;
    mem[284] = 32'd372703397;
    mem[285] = 32'd101908480;
    mem[286] = 32'd1108622726;
    mem[287] = 32'd93438356;
    mem[288] = 32'd3974301201;
    mem[289] = 32'd9961125;
    mem[290] = 32'd2162622464;
    mem[291] = 32'd288;
    mem[292] = 32'd4887;
    mem[293] = 32'd4093837415;
    mem[294] = 32'd3322286401;
    mem[295] = 32'd3257320482;
    mem[296] = 32'd4114071626;
    mem[297] = 32'd85172405;
    mem[298] = 32'd3317160149;
    mem[299] = 32'd2241020256;
    mem[300] = 32'd9924469;
    mem[301] = 32'd2162622464;
    mem[302] = 32'd2217346784;
    mem[303] = 32'd87524526;
    mem[304] = 32'd110313968;
    mem[305] = 32'd104333301;
    mem[306] = 32'd2233663456;
    mem[307] = 32'd151;
    mem[308] = 32'd402686183;
    mem[309] = 32'd2233633066;
    mem[310] = 32'd1174504870;
    mem[311] = 32'd9913985;
    mem[312] = 32'd2162622464;
    mem[313] = 32'd1147344608;
    mem[314] = 32'd1140916384;
    mem[315] = 32'd2233615489;
    mem[316] = 32'd9930150;
    mem[317] = 32'd2162622464;
    mem[318] = 32'd1442651872;
    mem[319] = 32'd18891619;
    mem[320] = 32'd355960234;
    mem[321] = 32'd620953600;
    mem[322] = 32'd3242999109;
    mem[323] = 32'd3851632908;
    mem[324] = 32'd3238789141;
    mem[325] = 32'd3405694263;
    mem[326] = 32'd673400197;
    mem[327] = 32'd2684463797;
    mem[328] = 32'd3590746489;
    mem[329] = 32'd3525760034;
    mem[330] = 32'd3461271626;
    mem[331] = 32'd3394686034;
    mem[332] = 32'd2177991726;
    mem[333] = 32'd2146825619;
    mem[334] = 32'd1126172179;
    mem[335] = 32'd1701020842;
    mem[336] = 32'd85135030;
    mem[337] = 32'd4184031200;
    mem[338] = 32'd112657061;
    mem[339] = 32'd2233877296;
    mem[340] = 32'd1174504866;
    mem[341] = 32'd151;
    mem[342] = 32'd1858109671;
    mem[343] = 32'd3324953642;
    mem[344] = 32'd1160922402;
    mem[345] = 32'd2242020646;
    mem[346] = 32'd1182877185;
    mem[347] = 32'd4247;
    mem[348] = 32'd3512762599;
    mem[349] = 32'd2823128234;
    mem[350] = 32'd279651;
    mem[351] = 32'd2687076642;
    mem[352] = 32'd2147484983;
    mem[353] = 32'd10766643;
    mem[354] = 32'd1127220919;
    mem[355] = 32'd2244642086;
    mem[356] = 32'd9913857;
    mem[357] = 32'd2162622464;
    mem[358] = 32'd112683744;
    mem[359] = 32'd1174520624;
    mem[360] = 32'd151;
    mem[361] = 32'd1778417895;
    mem[362] = 32'd2261419558;
    mem[363] = 32'd151;
    mem[364] = 32'd153125095;
    mem[365] = 32'd2309917226;
    mem[366] = 32'd1071646391;
    mem[367] = 32'd9913857;
    mem[368] = 32'd2162622464;
    mem[369] = 32'd1566771424;
    mem[370] = 32'd2233860256;
    mem[371] = 32'd2253555146;
    mem[372] = 32'd9930446;
    mem[373] = 32'd2162622464;
    mem[374] = 32'd112682720;
    mem[375] = 32'd2819473392;
    mem[376] = 32'd3219130039;
    mem[377] = 32'd2244904274;
    mem[378] = 32'd278349313;
    mem[379] = 32'd2162622464;
    mem[380] = 32'd2326448640;
    mem[381] = 32'd2244642086;
    mem[382] = 32'd2261681746;
    mem[383] = 32'd151;
    mem[384] = 32'd1681948903;
    mem[385] = 32'd1264813226;
    mem[386] = 32'd112656720;
    mem[387] = 32'd2233876464;
    mem[388] = 32'd9913857;
    mem[389] = 32'd2162622464;
    mem[390] = 32'd2225758944;
    mem[391] = 32'd284003;
    mem[392] = 32'd2147484983;
    mem[393] = 32'd2217643433;
    mem[394] = 32'd2242020646;
    mem[395] = 32'd1247955666;
    mem[396] = 32'd1493322226;
    mem[397] = 32'd1411536018;
    mem[398] = 32'd1631932594;
    mem[399] = 32'd121077890;
    mem[400] = 32'd2394521600;
    mem[401] = 32'd791;
    mem[402] = 32'd1615003751;
    mem[403] = 32'd2147485495;
    mem[404] = 32'd4172486525;
    mem[405] = 32'd129433829;
    mem[406] = 32'd2288222192;
    mem[407] = 32'd3081961720;
    mem[408] = 32'd1484587287;
    mem[409] = 32'd2235746201;
    mem[410] = 32'd934510722;
    mem[411] = 32'd1484587168;
    mem[412] = 32'd2406874109;
    mem[413] = 32'd2146437047;
    mem[414] = 32'd16189027;
    mem[415] = 32'd15185843;
    mem[416] = 32'd3084240777;
    mem[417] = 32'd12597171;
    mem[418] = 32'd1739849721;
    mem[419] = 32'd1731395750;
    mem[420] = 32'd2405237015;
    mem[421] = 32'd4147367689;
    mem[422] = 32'd1476198582;
    mem[423] = 32'd15194979;
    mem[424] = 32'd47546467;
    mem[425] = 32'd14001971;
    mem[426] = 32'd4283783293;
    mem[427] = 32'd1157734429;
    mem[428] = 32'd2355331202;
    mem[429] = 32'd2805137621;
    mem[430] = 32'd1484587190;
    mem[431] = 32'd2819749709;
    mem[432] = 32'd12924723;
    mem[433] = 32'd4081408125;
    mem[434] = 32'd926130217;
    mem[435] = 32'd1484587174;
    mem[436] = 32'd2368863065;
    mem[437] = 32'd2370670005;
    mem[438] = 32'd10500147;
    mem[439] = 32'd2156037442;
    mem[440] = 32'd1157727786;
    mem[441] = 32'd101040739;
    mem[442] = 32'd21354131;
    mem[443] = 32'd2146891539;
    mem[444] = 32'd1072695187;
    mem[445] = 32'd83323491;
    mem[446] = 32'd3222734099;
    mem[447] = 32'd33556243;
    mem[448] = 32'd15034211;
    mem[449] = 32'd32888083;
    mem[450] = 32'd4294264083;
    mem[451] = 32'd87523458;
    mem[452] = 32'd127074320;
    mem[453] = 32'd4113825781;
    mem[454] = 32'd93520117;
    mem[455] = 32'd3056861174;
    mem[456] = 32'd2519335109;
    mem[457] = 32'd1410323;
    mem[458] = 32'd11875763;
    mem[459] = 32'd101946802;
    mem[460] = 32'd112395056;
    mem[461] = 32'd4128456918;
    mem[462] = 32'd118686710;
    mem[463] = 32'd2512322054;
    mem[464] = 32'd476515;
    mem[465] = 32'd15062323;
    mem[466] = 32'd1429438594;
    mem[467] = 32'd1190985941;
    mem[468] = 32'd1086752307;
    mem[469] = 32'd2511537542;
    mem[470] = 32'd2370633925;
    mem[471] = 32'd1897758850;
    mem[472] = 32'd3433221766;
    mem[473] = 32'd3368733350;
    mem[474] = 32'd3302147790;
    mem[475] = 32'd3235562198;
    mem[476] = 32'd137879134;
    mem[477] = 32'd121077760;
    mem[478] = 32'd185794576;
    mem[479] = 32'd3608412151;
    mem[480] = 32'd2073231685;
    mem[481] = 32'd3608379383;
    mem[482] = 32'd2224226630;
    mem[483] = 32'd3350462459;
    mem[484] = 32'd3882025142;
    mem[485] = 32'd3031630196;
    mem[486] = 32'd3297968500;
    mem[487] = 32'd2687041556;
    mem[488] = 32'd2144338963;
    mem[489] = 32'd9712819;
    mem[490] = 32'd2146924947;
    mem[491] = 32'd17299763;
    mem[492] = 32'd23461427;
    mem[493] = 32'd23524019;
    mem[494] = 32'd2266228873;
    mem[495] = 32'd934543353;
    mem[496] = 32'd402456887;
    mem[497] = 32'd1191300001;
    mem[498] = 32'd118745897;
    mem[499] = 32'd4155768824;
    mem[500] = 32'd79102181;
    mem[501] = 32'd2372108272;
    mem[502] = 32'd3031632535;
    mem[503] = 32'd3972333812;
    mem[504] = 32'd15136947;
    mem[505] = 32'd2146436919;
    mem[506] = 32'd317227363;
    mem[507] = 32'd18298675;
    mem[508] = 32'd302453091;
    mem[509] = 32'd2146436919;
    mem[510] = 32'd15189171;
    mem[511] = 32'd2539883721;
    mem[512] = 32'd1714622980;
    mem[513] = 32'd258146582;
    mem[514] = 32'd4130543622;
    mem[515] = 32'd1228079366;
    mem[516] = 32'd2893086902;
    mem[517] = 32'd2145859347;
    mem[518] = 32'd1241635661;
    mem[519] = 32'd2215860989;
    mem[520] = 32'd900923418;
    mem[521] = 32'd78840148;
    mem[522] = 32'd1706229947;
    mem[523] = 32'd2369847454;
    mem[524] = 32'd22435475;
    mem[525] = 32'd11704083;
    mem[526] = 32'd103714521;
    mem[527] = 32'd17229491;
    mem[528] = 32'd3355625986;
    mem[529] = 32'd3489845762;
    mem[530] = 32'd3291139122;
    mem[531] = 32'd271107630;
    mem[532] = 32'd3147820;
    mem[533] = 32'd278384182;
    mem[534] = 32'd2162622464;
    mem[535] = 32'd1437772928;
    mem[536] = 32'd1430410962;
    mem[537] = 32'd2268288546;
    mem[538] = 32'd4155703673;
    mem[539] = 32'd1957888150;
    mem[540] = 32'd2412052613;
    mem[541] = 32'd3347945298;
    mem[542] = 32'd3223783315;
    mem[543] = 32'd2145388307;
    mem[544] = 32'd83317603;
    mem[545] = 32'd95896833;
    mem[546] = 32'd1764982768;
    mem[547] = 32'd2751791289;
    mem[548] = 32'd10499251;
    mem[549] = 32'd104322225;
    mem[550] = 32'd3912433672;
    mem[551] = 32'd2885746885;
    mem[552] = 32'd3222734739;
    mem[553] = 32'd32855827;
    mem[554] = 32'd2396587654;
    mem[555] = 32'd3608347910;
    mem[556] = 32'd2371420661;
    mem[557] = 32'd32921363;
    mem[558] = 32'd2379810182;
    mem[559] = 32'd118687238;
    mem[560] = 32'd1105428448;
    mem[561] = 32'd1191574775;
    mem[562] = 32'd82299747;
    mem[563] = 32'd22377779;
    mem[564] = 32'd23525043;
    mem[565] = 32'd21468947;
    mem[566] = 32'd112693077;
    mem[567] = 32'd2355331072;
    mem[568] = 32'd1459428053;
    mem[569] = 32'd11970227;
    mem[570] = 32'd19360051;
    mem[571] = 32'd436636515;
    mem[572] = 32'd2147485367;
    mem[573] = 32'd2379320757;
    mem[574] = 32'd436575075;
    mem[575] = 32'd1406355;
    mem[576] = 32'd900961582;
    mem[577] = 32'd2569928885;
    mem[578] = 32'd926130781;
    mem[579] = 32'd65208512;
    mem[580] = 32'd87551495;
    mem[581] = 32'd3912433672;
    mem[582] = 32'd2234646694;
    mem[583] = 32'd2401086025;
    mem[584] = 32'd66061459;
    mem[585] = 32'd48549987;
    mem[586] = 32'd2723235073;
    mem[587] = 32'd15255347;
    mem[588] = 32'd4012740433;
    mem[589] = 32'd3309145437;
    mem[590] = 32'd17167667;
    mem[591] = 32'd13977907;
    mem[592] = 32'd2729805106;
    mem[593] = 32'd4294411411;
    mem[594] = 32'd66385811;
    mem[595] = 32'd4261905427;
    mem[596] = 32'd1080248573;
    mem[597] = 32'd1124142596;
    mem[598] = 32'd330516481;
    mem[599] = 32'd313720966;
    mem[600] = 32'd2006122629;
    mem[601] = 32'd2224227319;
    mem[602] = 32'd2217999879;
    mem[603] = 32'd3496165624;
    mem[604] = 32'd1446187012;
    mem[605] = 32'd2542993638;
    mem[606] = 32'd2545090581;
    mem[607] = 32'd2388459655;
    mem[608] = 32'd15062963;
    mem[609] = 32'd12805683;
    mem[610] = 32'd15984051;
    mem[611] = 32'd235199075;
    mem[612] = 32'd15029555;
    mem[613] = 32'd1480595;
    mem[614] = 32'd8886195;
    mem[615] = 32'd3610479965;
    mem[616] = 32'd2698313958;
    mem[617] = 32'd154617089;
    mem[618] = 32'd2719055864;
    mem[619] = 32'd16082355;
    mem[620] = 32'd1706286501;
    mem[621] = 32'd3651993878;
    mem[622] = 32'd21484947;
    mem[623] = 32'd268801379;
    mem[624] = 32'd1397523;
    mem[625] = 32'd1431655863;
    mem[626] = 32'd1431668371;
    mem[627] = 32'd858994103;
    mem[628] = 32'd859145619;
    mem[629] = 32'd252647223;
    mem[630] = 32'd4042720147;
    mem[631] = 32'd16844599;
    mem[632] = 32'd269944723;
    mem[633] = 32'd235803491;
    mem[634] = 32'd6645555;
    mem[635] = 32'd2577555;
    mem[636] = 32'd1418956613;
    mem[637] = 32'd2403663943;
    mem[638] = 32'd8869011;
    mem[639] = 32'd1418956613;
    mem[640] = 32'd2403664135;
    mem[641] = 32'd4294395667;
    mem[642] = 32'd1528979;
    mem[643] = 32'd112430821;
    mem[644] = 32'd4147331287;
    mem[645] = 32'd2190016694;
    mem[646] = 32'd2512031221;
    mem[647] = 32'd4576915;
    mem[648] = 32'd4122187190;
    mem[649] = 32'd2243100789;
    mem[650] = 32'd2179007221;
    mem[651] = 32'd33916307;
    mem[652] = 32'd2553520333;
    mem[653] = 32'd2276655253;
    mem[654] = 32'd1410547960;
    mem[655] = 32'd1412628502;
    mem[656] = 32'd1672675572;
    mem[657] = 32'd322109576;
    mem[658] = 32'd2553479318;
    mem[659] = 32'd1410531478;
    mem[660] = 32'd1471348757;
    mem[661] = 32'd1655898356;
    mem[662] = 32'd405995768;
    mem[663] = 32'd2006122645;
    mem[664] = 32'd2224227319;
    mem[665] = 32'd2217999879;
    mem[666] = 32'd3303227640;
    mem[667] = 32'd1199697924;
    mem[668] = 32'd9819699;
    mem[669] = 32'd12805683;
    mem[670] = 32'd15984051;
    mem[671] = 32'd4026845923;
    mem[672] = 32'd3576907521;
    mem[673] = 32'd3853713558;
    mem[674] = 32'd1714618453;
    mem[675] = 32'd112656646;
    mem[676] = 32'd2565046272;
    mem[677] = 32'd915662037;
    mem[678] = 32'd1764950038;
    mem[679] = 32'd2581791015;
    mem[680] = 32'd93578246;
    mem[681] = 32'd3040018453;
    mem[682] = 32'd2569666725;
    mem[683] = 32'd2244642094;
    mem[684] = 32'd1258707954;
    mem[685] = 32'd1244023446;
    mem[686] = 32'd1229343158;
    mem[687] = 32'd1147552982;
    mem[688] = 32'd1629831414;
    mem[689] = 32'd1241612418;
    mem[690] = 32'd1460906173;
    mem[691] = 32'd1731395614;
    mem[692] = 32'd1418920174;
    mem[693] = 32'd2403663911;
    mem[694] = 32'd4674707;
    mem[695] = 32'd1418956613;
    mem[696] = 32'd2403664007;
    mem[697] = 32'd17257619;
    mem[698] = 32'd1192464197;
    mem[699] = 32'd1418985463;
    mem[700] = 32'd2397372439;
    mem[701] = 32'd1087833779;
    mem[702] = 32'd11990835;
    mem[703] = 32'd2381677193;
    mem[704] = 32'd3599996346;
    mem[705] = 32'd2511732805;
    mem[706] = 32'd7730611;
    mem[707] = 32'd49644979;
    mem[708] = 32'd2266202593;
    mem[709] = 32'd2006123349;
    mem[710] = 32'd2224227319;
    mem[711] = 32'd1186070023;
    mem[712] = 32'd312931;
    mem[713] = 32'd9772595;
    mem[714] = 32'd2820752641;
    mem[715] = 32'd15602867;
    mem[716] = 32'd129188989;
    mem[717] = 32'd1471365364;
    mem[718] = 32'd3996319987;
    mem[719] = 32'd355664116;
    mem[720] = 32'd2318598373;
    mem[721] = 32'd3583197366;
    mem[722] = 32'd2581791048;
    mem[723] = 32'd1486081029;
    mem[724] = 32'd1438056470;
    mem[725] = 32'd2257802581;
    mem[726] = 32'd901207381;
    mem[727] = 32'd2241016627;
    mem[728] = 32'd389493557;
    mem[729] = 32'd51580687;
    mem[730] = 32'd121106679;
    mem[731] = 32'd127074561;
    mem[732] = 32'd2539851799;
    mem[733] = 32'd1731396610;
    mem[734] = 32'd1418920214;
    mem[735] = 32'd2403663911;
    mem[736] = 32'd4674707;
    mem[737] = 32'd1418956613;
    mem[738] = 32'd2403664007;
    mem[739] = 32'd17257619;
    mem[740] = 32'd1192464197;
    mem[741] = 32'd1418985463;
    mem[742] = 32'd2397372439;
    mem[743] = 32'd1087833779;
    mem[744] = 32'd11990835;
    mem[745] = 32'd2381677193;
    mem[746] = 32'd3599996346;
    mem[747] = 32'd2511732805;
    mem[748] = 32'd6682035;
    mem[749] = 32'd49644979;
    mem[750] = 32'd2241036769;
    mem[751] = 32'd2695430661;
    mem[752] = 32'd1234707;
    mem[753] = 32'd14870323;
    mem[754] = 32'd2577555;
    mem[755] = 32'd1418956613;
    mem[756] = 32'd2403663943;
    mem[757] = 32'd8869011;
    mem[758] = 32'd1418956613;
    mem[759] = 32'd2403664135;
    mem[760] = 32'd4294395667;
    mem[761] = 32'd1528979;
    mem[762] = 32'd112430821;
    mem[763] = 32'd4147331287;
    mem[764] = 32'd2190016694;
    mem[765] = 32'd2512031221;
    mem[766] = 32'd4576915;
    mem[767] = 32'd4122187190;
    mem[768] = 32'd2243100773;
    mem[769] = 32'd2179007221;
    mem[770] = 32'd55936659;
    mem[771] = 32'd66516755;
    mem[772] = 32'd4261873555;
    mem[773] = 32'd509539;
    mem[774] = 32'd16126643;
    mem[775] = 32'd2820752897;
    mem[776] = 32'd13801395;
    mem[777] = 32'd2268284157;
    mem[778] = 32'd3610460388;
    mem[779] = 32'd3803381992;
    mem[780] = 32'd372441319;
    mem[781] = 32'd95617238;
    mem[782] = 32'd2316517562;
    mem[783] = 32'd3203989701;
    mem[784] = 32'd791;
    mem[785] = 32'd8585319;
    mem[786] = 32'd3324121409;
    mem[787] = 32'd121095206;
    mem[788] = 32'd135495680;
    mem[789] = 32'd4147380215;
    mem[790] = 32'd127074565;
    mem[791] = 32'd3031695349;
    mem[792] = 32'd2495217831;
    mem[793] = 32'd70718717;
    mem[794] = 32'd343769072;
    mem[795] = 32'd8686691;
    mem[796] = 32'd21288851;
    mem[797] = 32'd2145387667;
    mem[798] = 32'd16037811;
    mem[799] = 32'd17232691;
    mem[800] = 32'd2827602825;
    mem[801] = 32'd4294428563;
    mem[802] = 32'd1554323;
    mem[803] = 32'd17232691;
    mem[804] = 32'd127132593;
    mem[805] = 32'd3031695350;
    mem[806] = 32'd2493120711;
    mem[807] = 32'd70718717;
    mem[808] = 32'd343769072;
    mem[809] = 32'd8685155;
    mem[810] = 32'd8697779;
    mem[811] = 32'd2686314393;
    mem[812] = 32'd4294428563;
    mem[813] = 32'd15742899;
    mem[814] = 32'd146263953;
    mem[815] = 32'd40042512;
    mem[816] = 32'd926090979;
    mem[817] = 32'd419233895;
    mem[818] = 32'd2385167149;
    mem[819] = 32'd2234680494;
    mem[820] = 32'd2830206390;
    mem[821] = 32'd2146437047;
    mem[822] = 32'd116854115;
    mem[823] = 32'd15185843;
    mem[824] = 32'd129494949;
    mem[825] = 32'd123961328;
    mem[826] = 32'd3081965299;
    mem[827] = 32'd3891593319;
    mem[828] = 32'd2146437303;
    mem[829] = 32'd18302899;
    mem[830] = 32'd2455998409;
    mem[831] = 32'd1191264263;
    mem[832] = 32'd2393738793;
    mem[833] = 32'd2147485623;
    mem[834] = 32'd2396098237;
    mem[835] = 32'd2146960951;
    mem[836] = 32'd2251211417;
    mem[837] = 32'd2235205418;
    mem[838] = 32'd1151501746;
    mem[839] = 32'd21054514;
    mem[840] = 32'd926122114;
    mem[841] = 32'd419233989;
    mem[842] = 32'd2385703757;
    mem[843] = 32'd3591603382;
    mem[844] = 32'd1939013957;
    mem[845] = 32'd3591602166;
    mem[846] = 32'd1989345604;
    mem[847] = 32'd4080238582;
    mem[848] = 32'd2153971989;
    mem[849] = 32'd2192179715;
    mem[850] = 32'd18150963;
    mem[851] = 32'd537303139;
    mem[852] = 32'd934519317;
    mem[853] = 32'd3620798624;
    mem[854] = 32'd525751;
    mem[855] = 32'd12019891;
    mem[856] = 32'd1385407233;
    mem[857] = 32'd1446445077;
    mem[858] = 32'd118707541;
    mem[859] = 32'd909595990;
    mem[860] = 32'd101921587;
    mem[861] = 32'd397882166;
    mem[862] = 32'd2392002319;
    mem[863] = 32'd129495287;
    mem[864] = 32'd2207449345;
    mem[865] = 32'd274927639;
    mem[866] = 32'd1739785731;
    mem[867] = 32'd3558015061;
    mem[868] = 32'd2411790375;
    mem[869] = 32'd4707347;
    mem[870] = 32'd3558051777;
    mem[871] = 32'd2411790471;
    mem[872] = 32'd17290259;
    mem[873] = 32'd3348336577;
    mem[874] = 32'd3558080503;
    mem[875] = 32'd2405498903;
    mem[876] = 32'd1088915251;
    mem[877] = 32'd13072307;
    mem[878] = 32'd2390328073;
    mem[879] = 32'd1460901438;
    mem[880] = 32'd2520383558;
    mem[881] = 32'd30832179;
    mem[882] = 32'd41289267;
    mem[883] = 32'd101941857;
    mem[884] = 32'd2830172678;
    mem[885] = 32'd12597171;
    mem[886] = 32'd87547777;
    mem[887] = 32'd1756561416;
    mem[888] = 32'd2192703651;
    mem[889] = 32'd1469295037;
    mem[890] = 32'd1739784211;
    mem[891] = 32'd3558015219;
    mem[892] = 32'd2411790375;
    mem[893] = 32'd4707347;
    mem[894] = 32'd3558051777;
    mem[895] = 32'd2411790471;
    mem[896] = 32'd17290259;
    mem[897] = 32'd3348336577;
    mem[898] = 32'd3558080503;
    mem[899] = 32'd2405498903;
    mem[900] = 32'd1088915251;
    mem[901] = 32'd13072307;
    mem[902] = 32'd2390328073;
    mem[903] = 32'd1460901438;
    mem[904] = 32'd2520383558;
    mem[905] = 32'd30832179;
    mem[906] = 32'd41289267;
    mem[907] = 32'd118719073;
    mem[908] = 32'd2006123350;
    mem[909] = 32'd2215838711;
    mem[910] = 32'd1135738375;
    mem[911] = 32'd281699;
    mem[912] = 32'd322126465;
    mem[913] = 32'd2209546373;
    mem[914] = 32'd4130554051;
    mem[915] = 32'd2539847956;
    mem[916] = 32'd2685210630;
    mem[917] = 32'd14881587;
    mem[918] = 32'd129188989;
    mem[919] = 32'd3618849012;
    mem[920] = 32'd1664286962;
    mem[921] = 32'd313721075;
    mem[922] = 32'd2209546469;
    mem[923] = 32'd4130554051;
    mem[924] = 32'd3874291988;
    mem[925] = 32'd1990291;
    mem[926] = 32'd1431656119;
    mem[927] = 32'd1431734035;
    mem[928] = 32'd858994359;
    mem[929] = 32'd859211411;
    mem[930] = 32'd252647351;
    mem[931] = 32'd4042755987;
    mem[932] = 32'd16844727;
    mem[933] = 32'd269979411;
    mem[934] = 32'd1739843121;
    mem[935] = 32'd3558015454;
    mem[936] = 32'd2411790375;
    mem[937] = 32'd4707347;
    mem[938] = 32'd3558051777;
    mem[939] = 32'd2411790471;
    mem[940] = 32'd17290259;
    mem[941] = 32'd3348336577;
    mem[942] = 32'd3558080503;
    mem[943] = 32'd2405498903;
    mem[944] = 32'd1088915251;
    mem[945] = 32'd14120883;
    mem[946] = 32'd2398716681;
    mem[947] = 32'd3608385214;
    mem[948] = 32'd2528772166;
    mem[949] = 32'd32962227;
    mem[950] = 32'd65439411;
    mem[951] = 32'd2257814241;
    mem[952] = 32'd2694906374;
    mem[953] = 32'd1464211;
    mem[954] = 32'd3558051793;
    mem[955] = 32'd2411790375;
    mem[956] = 32'd4707347;
    mem[957] = 32'd3558051777;
    mem[958] = 32'd2411790471;
    mem[959] = 32'd17290259;
    mem[960] = 32'd3348336577;
    mem[961] = 32'd3558080503;
    mem[962] = 32'd2405498903;
    mem[963] = 32'd1088915251;
    mem[964] = 32'd14120883;
    mem[965] = 32'd2398716681;
    mem[966] = 32'd3608385214;
    mem[967] = 32'd2528772166;
    mem[968] = 32'd32962227;
    mem[969] = 32'd65439411;
    mem[970] = 32'd2266202849;
    mem[971] = 32'd2006123350;
    mem[972] = 32'd2215838711;
    mem[973] = 32'd1328676359;
    mem[974] = 32'd280163;
    mem[975] = 32'd9311795;
    mem[976] = 32'd2820230657;
    mem[977] = 32'd15078963;
    mem[978] = 32'd129188989;
    mem[979] = 32'd3618849012;
    mem[980] = 32'd2388459774;
    mem[981] = 32'd15605299;
    mem[982] = 32'd1088358067;
    mem[983] = 32'd11849395;
    mem[984] = 32'd30594835;
    mem[985] = 32'd3348371;
    mem[986] = 32'd15200179;
    mem[987] = 32'd8389431;
    mem[988] = 32'd31348499;
    mem[989] = 32'd2388198926;
    mem[990] = 32'd4069139;
    mem[991] = 32'd1087604403;
    mem[992] = 32'd6710835;
    mem[993] = 32'd127125177;
    mem[994] = 32'd3798139888;
    mem[995] = 32'd129172695;
    mem[996] = 32'd4094902480;
    mem[997] = 32'd76743671;
    mem[998] = 32'd1316879876;
    mem[999] = 32'd100976739;
    mem[1000] = 32'd523454337;
    mem[1001] = 32'd3836936343;
    mem[1002] = 32'd2274558439;
    mem[1003] = 32'd1060371974;
    mem[1004] = 32'd3512926352;
    mem[1005] = 32'd1462962183;
    mem[1006] = 32'd129171671;
    mem[1007] = 32'd345194718;
    mem[1008] = 32'd2545090582;
    mem[1009] = 32'd2405236980;
    mem[1010] = 32'd14046771;
    mem[1011] = 32'd1174511805;
    mem[1012] = 32'd2543011589;
    mem[1013] = 32'd3870490674;
    mem[1014] = 32'd3361931375;
    mem[1015] = 32'd2545550862;
    mem[1016] = 32'd15185715;
    mem[1017] = 32'd112432694;
    mem[1018] = 32'd104268006;
    mem[1019] = 32'd2390032640;
    mem[1020] = 32'd403048547;
    mem[1021] = 32'd1570323;
    mem[1022] = 32'd1562387;
    mem[1023] = 32'd32937875;
    mem[1024] = 32'd2189791069;
    mem[1025] = 32'd15099827;
    mem[1026] = 32'd2862416773;
    mem[1027] = 32'd16129843;
    mem[1028] = 32'd1083049011;
    mem[1029] = 32'd1528979;
    mem[1030] = 32'd8705075;
    mem[1031] = 32'd9400115;
    mem[1032] = 32'd16193459;
    mem[1033] = 32'd31974579;
    mem[1034] = 32'd4261840787;
    mem[1035] = 32'd9453363;
    mem[1036] = 32'd4161258467;
    mem[1037] = 32'd16144179;
    mem[1038] = 32'd1731413505;
    mem[1039] = 32'd2542993895;
    mem[1040] = 32'd3870490674;
    mem[1041] = 32'd3705864303;
    mem[1042] = 32'd3031693326;
    mem[1043] = 32'd2251489511;
    mem[1044] = 32'd112410822;
    mem[1045] = 32'd2409185430;
    mem[1046] = 32'd14149171;
    mem[1047] = 32'd3591622225;
    mem[1048] = 32'd526582134;
    mem[1049] = 32'd3532853254;
    mem[1050] = 32'd1446445079;
    mem[1051] = 32'd118707541;
    mem[1052] = 32'd909595990;
    mem[1053] = 32'd101921587;
    mem[1054] = 32'd347550518;
    mem[1055] = 32'd2383613711;
    mem[1056] = 32'd79163636;
    mem[1057] = 32'd2199060737;
    mem[1058] = 32'd4005629972;
    mem[1059] = 32'd5760179;
    mem[1060] = 32'd2413587;
    mem[1061] = 32'd3558051009;
    mem[1062] = 32'd2361458756;
    mem[1063] = 32'd8705043;
    mem[1064] = 32'd3558051009;
    mem[1065] = 32'd2361458948;
    mem[1066] = 32'd4294231187;
    mem[1067] = 32'd1365011;
    mem[1068] = 32'd2268303201;
    mem[1069] = 32'd1957904612;
    mem[1070] = 32'd2198405319;
    mem[1071] = 32'd2519109241;
    mem[1072] = 32'd4609811;
    mem[1073] = 32'd1983092282;
    mem[1074] = 32'd104006086;
    mem[1075] = 32'd2187395686;
    mem[1076] = 32'd33949203;
    mem[1077] = 32'd1997739617;
    mem[1078] = 32'd76743670;
    mem[1079] = 32'd3697540615;
    mem[1080] = 32'd2528315396;
    mem[1081] = 32'd1157431494;
    mem[1082] = 32'd1088718643;
    mem[1083] = 32'd14866227;
    mem[1084] = 32'd2545127129;
    mem[1085] = 32'd2690187463;
    mem[1086] = 32'd1216430721;
    mem[1087] = 32'd1202954909;
    mem[1088] = 32'd2412839187;
    mem[1089] = 32'd2192762753;
    mem[1090] = 32'd2862713014;
    mem[1091] = 32'd15034291;
    mem[1092] = 32'd336039779;
    mem[1093] = 32'd6711219;
    mem[1094] = 32'd2293138090;
    mem[1095] = 32'd3087507427;
    mem[1096] = 32'd3566445193;
    mem[1097] = 32'd2362769430;
    mem[1098] = 32'd2413587;
    mem[1099] = 32'd3558051009;
    mem[1100] = 32'd2361458756;
    mem[1101] = 32'd8705043;
    mem[1102] = 32'd3558051009;
    mem[1103] = 32'd2361458948;
    mem[1104] = 32'd4294231187;
    mem[1105] = 32'd1365011;
    mem[1106] = 32'd2268303201;
    mem[1107] = 32'd1957904612;
    mem[1108] = 32'd2198405319;
    mem[1109] = 32'd2519109241;
    mem[1110] = 32'd4609811;
    mem[1111] = 32'd1983092282;
    mem[1112] = 32'd104006086;
    mem[1113] = 32'd2187395686;
    mem[1114] = 32'd1997739617;
    mem[1115] = 32'd76743670;
    mem[1116] = 32'd3370384903;
    mem[1117] = 32'd2528376324;
    mem[1118] = 32'd1199636631;
    mem[1119] = 32'd1086555059;
    mem[1120] = 32'd118707837;
    mem[1121] = 32'd909312022;
    mem[1122] = 32'd2520907975;
    mem[1123] = 32'd15037107;
    mem[1124] = 32'd2145388307;
    mem[1125] = 32'd12973363;
    mem[1126] = 32'd7821155;
    mem[1127] = 32'd2146436535;
    mem[1128] = 32'd11888819;
    mem[1129] = 32'd1166387325;
    mem[1130] = 32'd3630388093;
    mem[1131] = 32'd2385708723;
    mem[1132] = 32'd2266185845;
    mem[1133] = 32'd1972633587;
    mem[1134] = 32'd2249393143;
    mem[1135] = 32'd1216216581;
    mem[1136] = 32'd411235;
    mem[1137] = 32'd2511554305;
    mem[1138] = 32'd2820735175;
    mem[1139] = 32'd15111731;
    mem[1140] = 32'd1085801907;
    mem[1141] = 32'd1561747;
    mem[1142] = 32'd11851187;
    mem[1143] = 32'd2536738257;
    mem[1144] = 32'd2404188391;
    mem[1145] = 32'd67007891;
    mem[1146] = 32'd4261774867;
    mem[1147] = 32'd14694195;
    mem[1148] = 32'd411235;
    mem[1149] = 32'd13030963;
    mem[1150] = 32'd2821277313;
    mem[1151] = 32'd1480211;
    mem[1152] = 32'd29808307;
    mem[1153] = 32'd29874099;
    mem[1154] = 32'd1085801907;
    mem[1155] = 32'd11933107;
    mem[1156] = 32'd12052019;
    mem[1157] = 32'd1739801473;
    mem[1158] = 32'd4128440550;
    mem[1159] = 32'd3583180919;
    mem[1160] = 32'd2534604855;
    mem[1161] = 32'd2404188630;
    mem[1162] = 32'd3593619;
    mem[1163] = 32'd18216371;
    mem[1164] = 32'd6780595;
    mem[1165] = 32'd21206931;
    mem[1166] = 32'd5694131;
    mem[1167] = 32'd1167428941;
    mem[1168] = 32'd16083123;
    mem[1169] = 32'd11953507;
    mem[1170] = 32'd1213715;
    mem[1171] = 32'd1158783033;
    mem[1172] = 32'd10885475;
    mem[1173] = 32'd1537299;
    mem[1174] = 32'd900961558;
    mem[1175] = 32'd2561540181;
    mem[1176] = 32'd2232844970;
    mem[1177] = 32'd1151501766;
    mem[1178] = 32'd21054514;
    mem[1179] = 32'd1731428482;
    mem[1180] = 32'd2192703590;
    mem[1181] = 32'd4151675062;
    mem[1182] = 32'd10908339;
    mem[1183] = 32'd11991219;
    mem[1184] = 32'd4078417869;
    mem[1185] = 32'd6815743;
    mem[1186] = 32'd121064899;
    mem[1187] = 32'd127107072;
    mem[1188] = 32'd4164157431;
    mem[1189] = 32'd121045237;
    mem[1190] = 32'd107184112;
    mem[1191] = 32'd926089448;
    mem[1192] = 32'd3339256071;
    mem[1193] = 32'd926132373;
    mem[1194] = 32'd3879534752;
    mem[1195] = 32'd121081845;
    mem[1196] = 32'd2254667760;
    mem[1197] = 32'd926089447;
    mem[1198] = 32'd3339256055;
    mem[1199] = 32'd926132401;
    mem[1200] = 32'd3946381504;
    mem[1201] = 32'd10905395;
    mem[1202] = 32'd17295283;
    mem[1203] = 32'd3473510237;
    mem[1204] = 32'd11990835;
    mem[1205] = 32'd3680720893;
    mem[1206] = 32'd2153971943;
    mem[1207] = 32'd2813526741;
    mem[1208] = 32'd1467810005;
    mem[1209] = 32'd2686840729;
    mem[1210] = 32'd2156020993;
    mem[1211] = 32'd13995363;
    mem[1212] = 32'd11970483;
    mem[1213] = 32'd3885062013;
    mem[1214] = 32'd934520857;
    mem[1215] = 32'd1467809989;
    mem[1216] = 32'd2235221913;
    mem[1217] = 32'd934510722;
    mem[1218] = 32'd1467809958;
    mem[1219] = 32'd2368863229;
    mem[1220] = 32'd2370670005;
    mem[1221] = 32'd3581232897;
    mem[1222] = 32'd2235188997;
    mem[1223] = 32'd289505410;
    mem[1224] = 32'd671335970;
    mem[1225] = 32'd679674054;
    mem[1226] = 32'd2743271558;
    mem[1227] = 32'd1100218501;
    mem[1228] = 32'd2726511128;
    mem[1229] = 32'd1103888581;
    mem[1230] = 32'd53690960;
    mem[1231] = 32'd1051919063;
    mem[1232] = 32'd1043530455;
    mem[1233] = 32'd129172151;
    mem[1234] = 32'd2402484919;
    mem[1235] = 32'd934478078;
    mem[1236] = 32'd2654863839;
    mem[1237] = 32'd47595187;
    mem[1238] = 32'd47581107;
    mem[1239] = 32'd16715699;
    mem[1240] = 32'd32487347;
    mem[1241] = 32'd1060347582;
    mem[1242] = 32'd129172150;
    mem[1243] = 32'd45286070;
    mem[1244] = 32'd875758167;
    mem[1245] = 32'd2484470391;
    mem[1246] = 32'd41289267;
    mem[1247] = 32'd120821282;
    mem[1248] = 32'd2243101303;
    mem[1249] = 32'd3023241912;
    mem[1250] = 32'd2510422744;
    mem[1251] = 32'd47711283;
    mem[1252] = 32'd2259916194;
    mem[1253] = 32'd2537423576;
    mem[1254] = 32'd16201651;
    mem[1255] = 32'd2520684154;
    mem[1256] = 32'd3073611450;
    mem[1257] = 32'd2511470822;
    mem[1258] = 32'd2251527610;
    mem[1259] = 32'd917701062;
    mem[1260] = 32'd2511732950;
    mem[1261] = 32'd30803635;
    mem[1262] = 32'd13022771;
    mem[1263] = 32'd539202994;
    mem[1264] = 32'd572719205;
    mem[1265] = 32'd3306422773;
    mem[1266] = 32'd1144177996;
    mem[1267] = 32'd2156003649;
    mem[1268] = 32'd2156036226;
    mem[1269] = 32'd4026531840;
    mem[1270] = 32'd0;
  end
  reg [31:0] _0_;
  always @(posedge clk) begin
    if (mem_r_en) _0_ <= mem[mem_r_addr];
    if (mem_w_en[0]) mem[mem_w_addr][7:0] <= mem_w_data[7:0];
    if (mem_w_en[1]) mem[mem_w_addr][15:8] <= mem_w_data[15:8];
    if (mem_w_en[2]) mem[mem_w_addr][23:16] <= mem_w_data[23:16];
    if (mem_w_en[3]) mem[mem_w_addr][31:24] <= mem_w_data[31:24];
  end
  assign mem_r_data = _0_;
  picorv32 #(
    .CATCH_ILLINSN(32'd0),
    .CATCH_MISALIGN(32'd0),
    .COMPRESSED_ISA(32'd1),
    .ENABLE_COUNTERS(32'd0),
    .ENABLE_MUL(32'd1),
    .LATCHED_MEM_RDATA(32'd1),
    .PROGADDR_IRQ(32'd1040),
    .PROGADDR_RESET(32'd1024),
    .TWO_CYCLE_ALU(32'd1),
    .TWO_STAGE_SHIFT(32'd0)
  ) picorv32 (
    .clk(clk),
    .mem_addr(mem_addr),
    .mem_rdata(mem_rdata),
    .mem_ready(mem_ready),
    .mem_valid(mem_valid),
    .mem_wdata(mem_wdata),
    .mem_wstrb(mem_wstrb),
    .resetn(resetn)
  );
  always @* begin
    resetn = 1'h0;
    resetn = \$2 ;
  end
  always @* begin
    \mem_ready$next  = mem_ready;
    \mem_ready$next  = 1'h0;
    (* src = "/Users/lachlansneff/dev/afm/fpga/picorv32.py:92" *)
    casez (\$8 )
      /* src = "/Users/lachlansneff/dev/afm/fpga/picorv32.py:92" */
      1'h1:
        begin
          (* src = "/Users/lachlansneff/dev/afm/fpga/picorv32.py:93" *)
          casez (\$12 )
            /* src = "/Users/lachlansneff/dev/afm/fpga/picorv32.py:93" */
            1'h1:
                \mem_ready$next  = 1'h1;
          endcase
          (* src = "/Users/lachlansneff/dev/afm/fpga/picorv32.py:98" *)
          casez (\$18 )
            /* src = "/Users/lachlansneff/dev/afm/fpga/picorv32.py:98" */
            1'h1:
                \mem_ready$next  = 1'h1;
          endcase
          (* src = "/Users/lachlansneff/dev/afm/fpga/picorv32.py:98" *)
          casez (\$24 )
            /* src = "/Users/lachlansneff/dev/afm/fpga/picorv32.py:98" */
            1'h1:
                \mem_ready$next  = 1'h1;
          endcase
          (* src = "/Users/lachlansneff/dev/afm/fpga/picorv32.py:104" *)
          casez (\$32 )
            /* src = "/Users/lachlansneff/dev/afm/fpga/picorv32.py:104" */
            1'h1:
                \mem_ready$next  = 1'h1;
          endcase
          (* src = "/Users/lachlansneff/dev/afm/fpga/picorv32.py:98" *)
          casez (\$38 )
            /* src = "/Users/lachlansneff/dev/afm/fpga/picorv32.py:98" */
            1'h1:
                \mem_ready$next  = 1'h1;
          endcase
          (* src = "/Users/lachlansneff/dev/afm/fpga/picorv32.py:104" *)
          casez (\$46 )
            /* src = "/Users/lachlansneff/dev/afm/fpga/picorv32.py:104" */
            1'h1:
                \mem_ready$next  = 1'h1;
          endcase
        end
    endcase
    (* src = "/Users/lachlansneff/Library/Python/3.9/lib/python/site-packages/nmigen/hdl/xfrm.py:519" *)
    casez (rst)
      1'h1:
          \mem_ready$next  = 1'h0;
    endcase
  end
  always @* begin
    \phase_step$next  = phase_step;
    (* src = "/Users/lachlansneff/dev/afm/fpga/picorv32.py:92" *)
    casez (\$110 )
      /* src = "/Users/lachlansneff/dev/afm/fpga/picorv32.py:92" */
      1'h1:
          (* src = "/Users/lachlansneff/dev/afm/fpga/picorv32.py:98" *)
          casez (\$116 )
            /* src = "/Users/lachlansneff/dev/afm/fpga/picorv32.py:98" */
            1'h1:
                \phase_step$next  = mem_wdata;
          endcase
    endcase
    (* src = "/Users/lachlansneff/Library/Python/3.9/lib/python/site-packages/nmigen/hdl/xfrm.py:519" *)
    casez (rst)
      1'h1:
          \phase_step$next  = 32'd0;
    endcase
  end
  always @* begin
    mem_r_addr = 11'h000;
    mem_r_addr = \$48 [10:0];
  end
  always @* begin
    mem_rdata = 32'd0;
    mem_rdata = mem_r_data;
    (* src = "/Users/lachlansneff/dev/afm/fpga/picorv32.py:92" *)
    casez (\$55 )
      /* src = "/Users/lachlansneff/dev/afm/fpga/picorv32.py:92" */
      1'h1:
        begin
          (* src = "/Users/lachlansneff/dev/afm/fpga/picorv32.py:104" *)
          casez (\$63 )
            /* src = "/Users/lachlansneff/dev/afm/fpga/picorv32.py:104" */
            1'h1:
                mem_rdata = \$65 ;
          endcase
          (* src = "/Users/lachlansneff/dev/afm/fpga/picorv32.py:104" *)
          casez (\$73 )
            /* src = "/Users/lachlansneff/dev/afm/fpga/picorv32.py:104" */
            1'h1:
                mem_rdata = phase_step;
          endcase
        end
    endcase
  end
  always @* begin
    mem_r_en = 1'h1;
    mem_r_en = \$75 ;
  end
  always @* begin
    mem_w_addr = 11'h000;
    mem_w_addr = \$79 [10:0];
  end
  always @* begin
    mem_w_data = 32'd0;
    mem_w_data = mem_wdata;
  end
  always @* begin
    mem_w_en = 4'h0;
    mem_w_en = mem_wstrb;
  end
  always @* begin
    \led$next  = led;
    (* src = "/Users/lachlansneff/dev/afm/fpga/picorv32.py:92" *)
    casez (\$86 )
      /* src = "/Users/lachlansneff/dev/afm/fpga/picorv32.py:92" */
      1'h1:
          (* src = "/Users/lachlansneff/dev/afm/fpga/picorv32.py:98" *)
          casez (\$92 )
            /* src = "/Users/lachlansneff/dev/afm/fpga/picorv32.py:98" */
            1'h1:
                \led$next  = mem_wdata[0];
          endcase
    endcase
    (* src = "/Users/lachlansneff/Library/Python/3.9/lib/python/site-packages/nmigen/hdl/xfrm.py:519" *)
    casez (rst)
      1'h1:
          \led$next  = 1'h0;
    endcase
  end
  always @* begin
    \nco_ctrl__enable$next  = nco_ctrl__enable;
    (* src = "/Users/lachlansneff/dev/afm/fpga/picorv32.py:92" *)
    casez (\$98 )
      /* src = "/Users/lachlansneff/dev/afm/fpga/picorv32.py:92" */
      1'h1:
          (* src = "/Users/lachlansneff/dev/afm/fpga/picorv32.py:98" *)
          casez (\$104 )
            /* src = "/Users/lachlansneff/dev/afm/fpga/picorv32.py:98" */
            1'h1:
                \nco_ctrl__enable$next  = mem_wdata[0];
          endcase
    endcase
    (* src = "/Users/lachlansneff/Library/Python/3.9/lib/python/site-packages/nmigen/hdl/xfrm.py:519" *)
    casez (rst)
      1'h1:
          \nco_ctrl__enable$next  = 1'h0;
    endcase
  end
  assign \$48  = \$49 ;
  assign \$79  = \$80 ;
endmodule

(* \nmigen.hierarchy  = "top.U$$2.sincos_lookup" *)
(* generator = "nMigen" *)
module sincos_lookup(addr, sin, cos, clk);
  (* src = "/Users/lachlansneff/dev/afm/fpga/nco.py:5" *)
  wire [12:0] \$10 ;
  (* src = "/Users/lachlansneff/dev/afm/fpga/nco.py:5" *)
  wire [12:0] \$13 ;
  (* src = "/Users/lachlansneff/dev/afm/fpga/nco.py:5" *)
  wire [12:0] \$14 ;
  (* src = "/Users/lachlansneff/dev/afm/fpga/nco.py:29" *)
  wire [9:0] \$16 ;
  (* src = "/Users/lachlansneff/dev/afm/fpga/nco.py:5" *)
  wire [12:0] \$17 ;
  (* src = "/Users/lachlansneff/dev/afm/fpga/nco.py:5" *)
  wire [12:0] \$18 ;
  (* src = "/Users/lachlansneff/dev/afm/fpga/nco.py:31" *)
  wire [10:0] \$21 ;
  (* src = "/Users/lachlansneff/dev/afm/fpga/nco.py:30" *)
  wire [11:0] \$23 ;
  (* src = "/Users/lachlansneff/dev/afm/fpga/nco.py:31" *)
  wire [10:0] \$25 ;
  (* src = "/Users/lachlansneff/dev/afm/fpga/nco.py:30" *)
  wire [11:0] \$27 ;
  (* src = "/Users/lachlansneff/dev/afm/fpga/nco.py:5" *)
  wire [12:0] \$28 ;
  (* src = "/Users/lachlansneff/dev/afm/fpga/nco.py:5" *)
  wire [12:0] \$29 ;
  (* src = "/Users/lachlansneff/dev/afm/fpga/nco.py:29" *)
  wire [9:0] \$4 ;
  (* src = "/Users/lachlansneff/dev/afm/fpga/nco.py:29" *)
  wire [9:0] \$6 ;
  (* src = "/Users/lachlansneff/dev/afm/fpga/nco.py:29" *)
  wire [9:0] \$8 ;
  (* src = "/Users/lachlansneff/dev/afm/fpga/nco.py:5" *)
  wire [12:0] \$9 ;
  (* src = "/Users/lachlansneff/dev/afm/fpga/nco.py:19" *)
  input [11:0] addr;
  (* src = "/Users/lachlansneff/Library/Python/3.9/lib/python/site-packages/nmigen/hdl/ir.py:526" *)
  input clk;
  (* src = "/Users/lachlansneff/dev/afm/fpga/nco.py:21" *)
  output [11:0] cos;
  reg [11:0] cos;
  (* src = "/Users/lachlansneff/dev/afm/fpga/nco.py:25" *)
  reg [9:0] quarter_sin_mem_r_addr;
  (* src = "/Users/lachlansneff/dev/afm/fpga/nco.py:26" *)
  reg [9:0] \quarter_sin_mem_r_addr$2 ;
  (* src = "/Users/lachlansneff/dev/afm/fpga/nco.py:25" *)
  wire [10:0] quarter_sin_mem_r_data;
  (* src = "/Users/lachlansneff/dev/afm/fpga/nco.py:26" *)
  wire [10:0] \quarter_sin_mem_r_data$3 ;
  (* src = "/Users/lachlansneff/dev/afm/fpga/nco.py:20" *)
  output [11:0] sin;
  reg [11:0] sin;
  assign \$10  = addr + (* src = "/Users/lachlansneff/dev/afm/fpga/nco.py:5" *) 11'h400;
  assign \$8  = ~ (* src = "/Users/lachlansneff/dev/afm/fpga/nco.py:29" *) \$9 [9:0];
  assign \$14  = addr + (* src = "/Users/lachlansneff/dev/afm/fpga/nco.py:5" *) 11'h400;
  assign \$18  = addr + (* src = "/Users/lachlansneff/dev/afm/fpga/nco.py:5" *) 11'h400;
  assign \$16  = \$17 [10] ? (* src = "/Users/lachlansneff/dev/afm/fpga/nco.py:29" *) \$8  : \$13 [9:0];
  assign \$21  = ~ (* src = "/Users/lachlansneff/dev/afm/fpga/nco.py:31" *) quarter_sin_mem_r_data;
  assign \$23  = addr[11] ? (* src = "/Users/lachlansneff/dev/afm/fpga/nco.py:30" *) { 1'h0, \$21  } : { 1'h1, quarter_sin_mem_r_data };
  assign \$25  = ~ (* src = "/Users/lachlansneff/dev/afm/fpga/nco.py:31" *) \quarter_sin_mem_r_data$3 ;
  assign \$29  = addr + (* src = "/Users/lachlansneff/dev/afm/fpga/nco.py:5" *) 11'h400;
  assign \$27  = \$28 [11] ? (* src = "/Users/lachlansneff/dev/afm/fpga/nco.py:30" *) { 1'h0, \$25  } : { 1'h1, \quarter_sin_mem_r_data$3  };
  assign \$4  = ~ (* src = "/Users/lachlansneff/dev/afm/fpga/nco.py:29" *) addr[9:0];
  assign \$6  = addr[10] ? (* src = "/Users/lachlansneff/dev/afm/fpga/nco.py:29" *) \$4  : addr[9:0];
  reg [10:0] quarter_sin_mem [1023:0];
  initial begin
    quarter_sin_mem[0] = 11'h000;
    quarter_sin_mem[1] = 11'h003;
    quarter_sin_mem[2] = 11'h006;
    quarter_sin_mem[3] = 11'h009;
    quarter_sin_mem[4] = 11'h00c;
    quarter_sin_mem[5] = 11'h00f;
    quarter_sin_mem[6] = 11'h012;
    quarter_sin_mem[7] = 11'h015;
    quarter_sin_mem[8] = 11'h019;
    quarter_sin_mem[9] = 11'h01c;
    quarter_sin_mem[10] = 11'h01f;
    quarter_sin_mem[11] = 11'h022;
    quarter_sin_mem[12] = 11'h025;
    quarter_sin_mem[13] = 11'h028;
    quarter_sin_mem[14] = 11'h02b;
    quarter_sin_mem[15] = 11'h02f;
    quarter_sin_mem[16] = 11'h032;
    quarter_sin_mem[17] = 11'h035;
    quarter_sin_mem[18] = 11'h038;
    quarter_sin_mem[19] = 11'h03b;
    quarter_sin_mem[20] = 11'h03e;
    quarter_sin_mem[21] = 11'h041;
    quarter_sin_mem[22] = 11'h045;
    quarter_sin_mem[23] = 11'h048;
    quarter_sin_mem[24] = 11'h04b;
    quarter_sin_mem[25] = 11'h04e;
    quarter_sin_mem[26] = 11'h051;
    quarter_sin_mem[27] = 11'h054;
    quarter_sin_mem[28] = 11'h057;
    quarter_sin_mem[29] = 11'h05b;
    quarter_sin_mem[30] = 11'h05e;
    quarter_sin_mem[31] = 11'h061;
    quarter_sin_mem[32] = 11'h064;
    quarter_sin_mem[33] = 11'h067;
    quarter_sin_mem[34] = 11'h06a;
    quarter_sin_mem[35] = 11'h06d;
    quarter_sin_mem[36] = 11'h071;
    quarter_sin_mem[37] = 11'h074;
    quarter_sin_mem[38] = 11'h077;
    quarter_sin_mem[39] = 11'h07a;
    quarter_sin_mem[40] = 11'h07d;
    quarter_sin_mem[41] = 11'h080;
    quarter_sin_mem[42] = 11'h083;
    quarter_sin_mem[43] = 11'h086;
    quarter_sin_mem[44] = 11'h08a;
    quarter_sin_mem[45] = 11'h08d;
    quarter_sin_mem[46] = 11'h090;
    quarter_sin_mem[47] = 11'h093;
    quarter_sin_mem[48] = 11'h096;
    quarter_sin_mem[49] = 11'h099;
    quarter_sin_mem[50] = 11'h09c;
    quarter_sin_mem[51] = 11'h0a0;
    quarter_sin_mem[52] = 11'h0a3;
    quarter_sin_mem[53] = 11'h0a6;
    quarter_sin_mem[54] = 11'h0a9;
    quarter_sin_mem[55] = 11'h0ac;
    quarter_sin_mem[56] = 11'h0af;
    quarter_sin_mem[57] = 11'h0b2;
    quarter_sin_mem[58] = 11'h0b5;
    quarter_sin_mem[59] = 11'h0b9;
    quarter_sin_mem[60] = 11'h0bc;
    quarter_sin_mem[61] = 11'h0bf;
    quarter_sin_mem[62] = 11'h0c2;
    quarter_sin_mem[63] = 11'h0c5;
    quarter_sin_mem[64] = 11'h0c8;
    quarter_sin_mem[65] = 11'h0cb;
    quarter_sin_mem[66] = 11'h0ce;
    quarter_sin_mem[67] = 11'h0d2;
    quarter_sin_mem[68] = 11'h0d5;
    quarter_sin_mem[69] = 11'h0d8;
    quarter_sin_mem[70] = 11'h0db;
    quarter_sin_mem[71] = 11'h0de;
    quarter_sin_mem[72] = 11'h0e1;
    quarter_sin_mem[73] = 11'h0e4;
    quarter_sin_mem[74] = 11'h0e7;
    quarter_sin_mem[75] = 11'h0eb;
    quarter_sin_mem[76] = 11'h0ee;
    quarter_sin_mem[77] = 11'h0f1;
    quarter_sin_mem[78] = 11'h0f4;
    quarter_sin_mem[79] = 11'h0f7;
    quarter_sin_mem[80] = 11'h0fa;
    quarter_sin_mem[81] = 11'h0fd;
    quarter_sin_mem[82] = 11'h100;
    quarter_sin_mem[83] = 11'h104;
    quarter_sin_mem[84] = 11'h107;
    quarter_sin_mem[85] = 11'h10a;
    quarter_sin_mem[86] = 11'h10d;
    quarter_sin_mem[87] = 11'h110;
    quarter_sin_mem[88] = 11'h113;
    quarter_sin_mem[89] = 11'h116;
    quarter_sin_mem[90] = 11'h119;
    quarter_sin_mem[91] = 11'h11c;
    quarter_sin_mem[92] = 11'h120;
    quarter_sin_mem[93] = 11'h123;
    quarter_sin_mem[94] = 11'h126;
    quarter_sin_mem[95] = 11'h129;
    quarter_sin_mem[96] = 11'h12c;
    quarter_sin_mem[97] = 11'h12f;
    quarter_sin_mem[98] = 11'h132;
    quarter_sin_mem[99] = 11'h135;
    quarter_sin_mem[100] = 11'h138;
    quarter_sin_mem[101] = 11'h13c;
    quarter_sin_mem[102] = 11'h13f;
    quarter_sin_mem[103] = 11'h142;
    quarter_sin_mem[104] = 11'h145;
    quarter_sin_mem[105] = 11'h148;
    quarter_sin_mem[106] = 11'h14b;
    quarter_sin_mem[107] = 11'h14e;
    quarter_sin_mem[108] = 11'h151;
    quarter_sin_mem[109] = 11'h154;
    quarter_sin_mem[110] = 11'h157;
    quarter_sin_mem[111] = 11'h15b;
    quarter_sin_mem[112] = 11'h15e;
    quarter_sin_mem[113] = 11'h161;
    quarter_sin_mem[114] = 11'h164;
    quarter_sin_mem[115] = 11'h167;
    quarter_sin_mem[116] = 11'h16a;
    quarter_sin_mem[117] = 11'h16d;
    quarter_sin_mem[118] = 11'h170;
    quarter_sin_mem[119] = 11'h173;
    quarter_sin_mem[120] = 11'h176;
    quarter_sin_mem[121] = 11'h179;
    quarter_sin_mem[122] = 11'h17d;
    quarter_sin_mem[123] = 11'h180;
    quarter_sin_mem[124] = 11'h183;
    quarter_sin_mem[125] = 11'h186;
    quarter_sin_mem[126] = 11'h189;
    quarter_sin_mem[127] = 11'h18c;
    quarter_sin_mem[128] = 11'h18f;
    quarter_sin_mem[129] = 11'h192;
    quarter_sin_mem[130] = 11'h195;
    quarter_sin_mem[131] = 11'h198;
    quarter_sin_mem[132] = 11'h19b;
    quarter_sin_mem[133] = 11'h19e;
    quarter_sin_mem[134] = 11'h1a2;
    quarter_sin_mem[135] = 11'h1a5;
    quarter_sin_mem[136] = 11'h1a8;
    quarter_sin_mem[137] = 11'h1ab;
    quarter_sin_mem[138] = 11'h1ae;
    quarter_sin_mem[139] = 11'h1b1;
    quarter_sin_mem[140] = 11'h1b4;
    quarter_sin_mem[141] = 11'h1b7;
    quarter_sin_mem[142] = 11'h1ba;
    quarter_sin_mem[143] = 11'h1bd;
    quarter_sin_mem[144] = 11'h1c0;
    quarter_sin_mem[145] = 11'h1c3;
    quarter_sin_mem[146] = 11'h1c6;
    quarter_sin_mem[147] = 11'h1c9;
    quarter_sin_mem[148] = 11'h1cc;
    quarter_sin_mem[149] = 11'h1d0;
    quarter_sin_mem[150] = 11'h1d3;
    quarter_sin_mem[151] = 11'h1d6;
    quarter_sin_mem[152] = 11'h1d9;
    quarter_sin_mem[153] = 11'h1dc;
    quarter_sin_mem[154] = 11'h1df;
    quarter_sin_mem[155] = 11'h1e2;
    quarter_sin_mem[156] = 11'h1e5;
    quarter_sin_mem[157] = 11'h1e8;
    quarter_sin_mem[158] = 11'h1eb;
    quarter_sin_mem[159] = 11'h1ee;
    quarter_sin_mem[160] = 11'h1f1;
    quarter_sin_mem[161] = 11'h1f4;
    quarter_sin_mem[162] = 11'h1f7;
    quarter_sin_mem[163] = 11'h1fa;
    quarter_sin_mem[164] = 11'h1fd;
    quarter_sin_mem[165] = 11'h200;
    quarter_sin_mem[166] = 11'h203;
    quarter_sin_mem[167] = 11'h206;
    quarter_sin_mem[168] = 11'h209;
    quarter_sin_mem[169] = 11'h20d;
    quarter_sin_mem[170] = 11'h210;
    quarter_sin_mem[171] = 11'h213;
    quarter_sin_mem[172] = 11'h216;
    quarter_sin_mem[173] = 11'h219;
    quarter_sin_mem[174] = 11'h21c;
    quarter_sin_mem[175] = 11'h21f;
    quarter_sin_mem[176] = 11'h222;
    quarter_sin_mem[177] = 11'h225;
    quarter_sin_mem[178] = 11'h228;
    quarter_sin_mem[179] = 11'h22b;
    quarter_sin_mem[180] = 11'h22e;
    quarter_sin_mem[181] = 11'h231;
    quarter_sin_mem[182] = 11'h234;
    quarter_sin_mem[183] = 11'h237;
    quarter_sin_mem[184] = 11'h23a;
    quarter_sin_mem[185] = 11'h23d;
    quarter_sin_mem[186] = 11'h240;
    quarter_sin_mem[187] = 11'h243;
    quarter_sin_mem[188] = 11'h246;
    quarter_sin_mem[189] = 11'h249;
    quarter_sin_mem[190] = 11'h24c;
    quarter_sin_mem[191] = 11'h24f;
    quarter_sin_mem[192] = 11'h252;
    quarter_sin_mem[193] = 11'h255;
    quarter_sin_mem[194] = 11'h258;
    quarter_sin_mem[195] = 11'h25b;
    quarter_sin_mem[196] = 11'h25e;
    quarter_sin_mem[197] = 11'h261;
    quarter_sin_mem[198] = 11'h264;
    quarter_sin_mem[199] = 11'h267;
    quarter_sin_mem[200] = 11'h26a;
    quarter_sin_mem[201] = 11'h26d;
    quarter_sin_mem[202] = 11'h270;
    quarter_sin_mem[203] = 11'h273;
    quarter_sin_mem[204] = 11'h276;
    quarter_sin_mem[205] = 11'h279;
    quarter_sin_mem[206] = 11'h27c;
    quarter_sin_mem[207] = 11'h27f;
    quarter_sin_mem[208] = 11'h282;
    quarter_sin_mem[209] = 11'h285;
    quarter_sin_mem[210] = 11'h288;
    quarter_sin_mem[211] = 11'h28b;
    quarter_sin_mem[212] = 11'h28e;
    quarter_sin_mem[213] = 11'h291;
    quarter_sin_mem[214] = 11'h294;
    quarter_sin_mem[215] = 11'h297;
    quarter_sin_mem[216] = 11'h29a;
    quarter_sin_mem[217] = 11'h29d;
    quarter_sin_mem[218] = 11'h2a0;
    quarter_sin_mem[219] = 11'h2a3;
    quarter_sin_mem[220] = 11'h2a6;
    quarter_sin_mem[221] = 11'h2a9;
    quarter_sin_mem[222] = 11'h2ac;
    quarter_sin_mem[223] = 11'h2ae;
    quarter_sin_mem[224] = 11'h2b1;
    quarter_sin_mem[225] = 11'h2b4;
    quarter_sin_mem[226] = 11'h2b7;
    quarter_sin_mem[227] = 11'h2ba;
    quarter_sin_mem[228] = 11'h2bd;
    quarter_sin_mem[229] = 11'h2c0;
    quarter_sin_mem[230] = 11'h2c3;
    quarter_sin_mem[231] = 11'h2c6;
    quarter_sin_mem[232] = 11'h2c9;
    quarter_sin_mem[233] = 11'h2cc;
    quarter_sin_mem[234] = 11'h2cf;
    quarter_sin_mem[235] = 11'h2d2;
    quarter_sin_mem[236] = 11'h2d5;
    quarter_sin_mem[237] = 11'h2d8;
    quarter_sin_mem[238] = 11'h2db;
    quarter_sin_mem[239] = 11'h2de;
    quarter_sin_mem[240] = 11'h2e1;
    quarter_sin_mem[241] = 11'h2e3;
    quarter_sin_mem[242] = 11'h2e6;
    quarter_sin_mem[243] = 11'h2e9;
    quarter_sin_mem[244] = 11'h2ec;
    quarter_sin_mem[245] = 11'h2ef;
    quarter_sin_mem[246] = 11'h2f2;
    quarter_sin_mem[247] = 11'h2f5;
    quarter_sin_mem[248] = 11'h2f8;
    quarter_sin_mem[249] = 11'h2fb;
    quarter_sin_mem[250] = 11'h2fe;
    quarter_sin_mem[251] = 11'h301;
    quarter_sin_mem[252] = 11'h304;
    quarter_sin_mem[253] = 11'h307;
    quarter_sin_mem[254] = 11'h309;
    quarter_sin_mem[255] = 11'h30c;
    quarter_sin_mem[256] = 11'h30f;
    quarter_sin_mem[257] = 11'h312;
    quarter_sin_mem[258] = 11'h315;
    quarter_sin_mem[259] = 11'h318;
    quarter_sin_mem[260] = 11'h31b;
    quarter_sin_mem[261] = 11'h31e;
    quarter_sin_mem[262] = 11'h321;
    quarter_sin_mem[263] = 11'h324;
    quarter_sin_mem[264] = 11'h326;
    quarter_sin_mem[265] = 11'h329;
    quarter_sin_mem[266] = 11'h32c;
    quarter_sin_mem[267] = 11'h32f;
    quarter_sin_mem[268] = 11'h332;
    quarter_sin_mem[269] = 11'h335;
    quarter_sin_mem[270] = 11'h338;
    quarter_sin_mem[271] = 11'h33b;
    quarter_sin_mem[272] = 11'h33d;
    quarter_sin_mem[273] = 11'h340;
    quarter_sin_mem[274] = 11'h343;
    quarter_sin_mem[275] = 11'h346;
    quarter_sin_mem[276] = 11'h349;
    quarter_sin_mem[277] = 11'h34c;
    quarter_sin_mem[278] = 11'h34f;
    quarter_sin_mem[279] = 11'h351;
    quarter_sin_mem[280] = 11'h354;
    quarter_sin_mem[281] = 11'h357;
    quarter_sin_mem[282] = 11'h35a;
    quarter_sin_mem[283] = 11'h35d;
    quarter_sin_mem[284] = 11'h360;
    quarter_sin_mem[285] = 11'h363;
    quarter_sin_mem[286] = 11'h365;
    quarter_sin_mem[287] = 11'h368;
    quarter_sin_mem[288] = 11'h36b;
    quarter_sin_mem[289] = 11'h36e;
    quarter_sin_mem[290] = 11'h371;
    quarter_sin_mem[291] = 11'h374;
    quarter_sin_mem[292] = 11'h376;
    quarter_sin_mem[293] = 11'h379;
    quarter_sin_mem[294] = 11'h37c;
    quarter_sin_mem[295] = 11'h37f;
    quarter_sin_mem[296] = 11'h382;
    quarter_sin_mem[297] = 11'h385;
    quarter_sin_mem[298] = 11'h387;
    quarter_sin_mem[299] = 11'h38a;
    quarter_sin_mem[300] = 11'h38d;
    quarter_sin_mem[301] = 11'h390;
    quarter_sin_mem[302] = 11'h393;
    quarter_sin_mem[303] = 11'h395;
    quarter_sin_mem[304] = 11'h398;
    quarter_sin_mem[305] = 11'h39b;
    quarter_sin_mem[306] = 11'h39e;
    quarter_sin_mem[307] = 11'h3a1;
    quarter_sin_mem[308] = 11'h3a4;
    quarter_sin_mem[309] = 11'h3a6;
    quarter_sin_mem[310] = 11'h3a9;
    quarter_sin_mem[311] = 11'h3ac;
    quarter_sin_mem[312] = 11'h3af;
    quarter_sin_mem[313] = 11'h3b1;
    quarter_sin_mem[314] = 11'h3b4;
    quarter_sin_mem[315] = 11'h3b7;
    quarter_sin_mem[316] = 11'h3ba;
    quarter_sin_mem[317] = 11'h3bd;
    quarter_sin_mem[318] = 11'h3bf;
    quarter_sin_mem[319] = 11'h3c2;
    quarter_sin_mem[320] = 11'h3c5;
    quarter_sin_mem[321] = 11'h3c8;
    quarter_sin_mem[322] = 11'h3ca;
    quarter_sin_mem[323] = 11'h3cd;
    quarter_sin_mem[324] = 11'h3d0;
    quarter_sin_mem[325] = 11'h3d3;
    quarter_sin_mem[326] = 11'h3d6;
    quarter_sin_mem[327] = 11'h3d8;
    quarter_sin_mem[328] = 11'h3db;
    quarter_sin_mem[329] = 11'h3de;
    quarter_sin_mem[330] = 11'h3e1;
    quarter_sin_mem[331] = 11'h3e3;
    quarter_sin_mem[332] = 11'h3e6;
    quarter_sin_mem[333] = 11'h3e9;
    quarter_sin_mem[334] = 11'h3eb;
    quarter_sin_mem[335] = 11'h3ee;
    quarter_sin_mem[336] = 11'h3f1;
    quarter_sin_mem[337] = 11'h3f4;
    quarter_sin_mem[338] = 11'h3f6;
    quarter_sin_mem[339] = 11'h3f9;
    quarter_sin_mem[340] = 11'h3fc;
    quarter_sin_mem[341] = 11'h3ff;
    quarter_sin_mem[342] = 11'h401;
    quarter_sin_mem[343] = 11'h404;
    quarter_sin_mem[344] = 11'h407;
    quarter_sin_mem[345] = 11'h409;
    quarter_sin_mem[346] = 11'h40c;
    quarter_sin_mem[347] = 11'h40f;
    quarter_sin_mem[348] = 11'h412;
    quarter_sin_mem[349] = 11'h414;
    quarter_sin_mem[350] = 11'h417;
    quarter_sin_mem[351] = 11'h41a;
    quarter_sin_mem[352] = 11'h41c;
    quarter_sin_mem[353] = 11'h41f;
    quarter_sin_mem[354] = 11'h422;
    quarter_sin_mem[355] = 11'h424;
    quarter_sin_mem[356] = 11'h427;
    quarter_sin_mem[357] = 11'h42a;
    quarter_sin_mem[358] = 11'h42d;
    quarter_sin_mem[359] = 11'h42f;
    quarter_sin_mem[360] = 11'h432;
    quarter_sin_mem[361] = 11'h435;
    quarter_sin_mem[362] = 11'h437;
    quarter_sin_mem[363] = 11'h43a;
    quarter_sin_mem[364] = 11'h43d;
    quarter_sin_mem[365] = 11'h43f;
    quarter_sin_mem[366] = 11'h442;
    quarter_sin_mem[367] = 11'h445;
    quarter_sin_mem[368] = 11'h447;
    quarter_sin_mem[369] = 11'h44a;
    quarter_sin_mem[370] = 11'h44c;
    quarter_sin_mem[371] = 11'h44f;
    quarter_sin_mem[372] = 11'h452;
    quarter_sin_mem[373] = 11'h454;
    quarter_sin_mem[374] = 11'h457;
    quarter_sin_mem[375] = 11'h45a;
    quarter_sin_mem[376] = 11'h45c;
    quarter_sin_mem[377] = 11'h45f;
    quarter_sin_mem[378] = 11'h462;
    quarter_sin_mem[379] = 11'h464;
    quarter_sin_mem[380] = 11'h467;
    quarter_sin_mem[381] = 11'h469;
    quarter_sin_mem[382] = 11'h46c;
    quarter_sin_mem[383] = 11'h46f;
    quarter_sin_mem[384] = 11'h471;
    quarter_sin_mem[385] = 11'h474;
    quarter_sin_mem[386] = 11'h477;
    quarter_sin_mem[387] = 11'h479;
    quarter_sin_mem[388] = 11'h47c;
    quarter_sin_mem[389] = 11'h47e;
    quarter_sin_mem[390] = 11'h481;
    quarter_sin_mem[391] = 11'h484;
    quarter_sin_mem[392] = 11'h486;
    quarter_sin_mem[393] = 11'h489;
    quarter_sin_mem[394] = 11'h48b;
    quarter_sin_mem[395] = 11'h48e;
    quarter_sin_mem[396] = 11'h490;
    quarter_sin_mem[397] = 11'h493;
    quarter_sin_mem[398] = 11'h496;
    quarter_sin_mem[399] = 11'h498;
    quarter_sin_mem[400] = 11'h49b;
    quarter_sin_mem[401] = 11'h49d;
    quarter_sin_mem[402] = 11'h4a0;
    quarter_sin_mem[403] = 11'h4a2;
    quarter_sin_mem[404] = 11'h4a5;
    quarter_sin_mem[405] = 11'h4a8;
    quarter_sin_mem[406] = 11'h4aa;
    quarter_sin_mem[407] = 11'h4ad;
    quarter_sin_mem[408] = 11'h4af;
    quarter_sin_mem[409] = 11'h4b2;
    quarter_sin_mem[410] = 11'h4b4;
    quarter_sin_mem[411] = 11'h4b7;
    quarter_sin_mem[412] = 11'h4b9;
    quarter_sin_mem[413] = 11'h4bc;
    quarter_sin_mem[414] = 11'h4be;
    quarter_sin_mem[415] = 11'h4c1;
    quarter_sin_mem[416] = 11'h4c3;
    quarter_sin_mem[417] = 11'h4c6;
    quarter_sin_mem[418] = 11'h4c9;
    quarter_sin_mem[419] = 11'h4cb;
    quarter_sin_mem[420] = 11'h4ce;
    quarter_sin_mem[421] = 11'h4d0;
    quarter_sin_mem[422] = 11'h4d3;
    quarter_sin_mem[423] = 11'h4d5;
    quarter_sin_mem[424] = 11'h4d8;
    quarter_sin_mem[425] = 11'h4da;
    quarter_sin_mem[426] = 11'h4dd;
    quarter_sin_mem[427] = 11'h4df;
    quarter_sin_mem[428] = 11'h4e2;
    quarter_sin_mem[429] = 11'h4e4;
    quarter_sin_mem[430] = 11'h4e7;
    quarter_sin_mem[431] = 11'h4e9;
    quarter_sin_mem[432] = 11'h4eb;
    quarter_sin_mem[433] = 11'h4ee;
    quarter_sin_mem[434] = 11'h4f0;
    quarter_sin_mem[435] = 11'h4f3;
    quarter_sin_mem[436] = 11'h4f5;
    quarter_sin_mem[437] = 11'h4f8;
    quarter_sin_mem[438] = 11'h4fa;
    quarter_sin_mem[439] = 11'h4fd;
    quarter_sin_mem[440] = 11'h4ff;
    quarter_sin_mem[441] = 11'h502;
    quarter_sin_mem[442] = 11'h504;
    quarter_sin_mem[443] = 11'h507;
    quarter_sin_mem[444] = 11'h509;
    quarter_sin_mem[445] = 11'h50b;
    quarter_sin_mem[446] = 11'h50e;
    quarter_sin_mem[447] = 11'h510;
    quarter_sin_mem[448] = 11'h513;
    quarter_sin_mem[449] = 11'h515;
    quarter_sin_mem[450] = 11'h518;
    quarter_sin_mem[451] = 11'h51a;
    quarter_sin_mem[452] = 11'h51c;
    quarter_sin_mem[453] = 11'h51f;
    quarter_sin_mem[454] = 11'h521;
    quarter_sin_mem[455] = 11'h524;
    quarter_sin_mem[456] = 11'h526;
    quarter_sin_mem[457] = 11'h528;
    quarter_sin_mem[458] = 11'h52b;
    quarter_sin_mem[459] = 11'h52d;
    quarter_sin_mem[460] = 11'h530;
    quarter_sin_mem[461] = 11'h532;
    quarter_sin_mem[462] = 11'h534;
    quarter_sin_mem[463] = 11'h537;
    quarter_sin_mem[464] = 11'h539;
    quarter_sin_mem[465] = 11'h53c;
    quarter_sin_mem[466] = 11'h53e;
    quarter_sin_mem[467] = 11'h540;
    quarter_sin_mem[468] = 11'h543;
    quarter_sin_mem[469] = 11'h545;
    quarter_sin_mem[470] = 11'h547;
    quarter_sin_mem[471] = 11'h54a;
    quarter_sin_mem[472] = 11'h54c;
    quarter_sin_mem[473] = 11'h54e;
    quarter_sin_mem[474] = 11'h551;
    quarter_sin_mem[475] = 11'h553;
    quarter_sin_mem[476] = 11'h556;
    quarter_sin_mem[477] = 11'h558;
    quarter_sin_mem[478] = 11'h55a;
    quarter_sin_mem[479] = 11'h55d;
    quarter_sin_mem[480] = 11'h55f;
    quarter_sin_mem[481] = 11'h561;
    quarter_sin_mem[482] = 11'h564;
    quarter_sin_mem[483] = 11'h566;
    quarter_sin_mem[484] = 11'h568;
    quarter_sin_mem[485] = 11'h56a;
    quarter_sin_mem[486] = 11'h56d;
    quarter_sin_mem[487] = 11'h56f;
    quarter_sin_mem[488] = 11'h571;
    quarter_sin_mem[489] = 11'h574;
    quarter_sin_mem[490] = 11'h576;
    quarter_sin_mem[491] = 11'h578;
    quarter_sin_mem[492] = 11'h57b;
    quarter_sin_mem[493] = 11'h57d;
    quarter_sin_mem[494] = 11'h57f;
    quarter_sin_mem[495] = 11'h581;
    quarter_sin_mem[496] = 11'h584;
    quarter_sin_mem[497] = 11'h586;
    quarter_sin_mem[498] = 11'h588;
    quarter_sin_mem[499] = 11'h58a;
    quarter_sin_mem[500] = 11'h58d;
    quarter_sin_mem[501] = 11'h58f;
    quarter_sin_mem[502] = 11'h591;
    quarter_sin_mem[503] = 11'h594;
    quarter_sin_mem[504] = 11'h596;
    quarter_sin_mem[505] = 11'h598;
    quarter_sin_mem[506] = 11'h59a;
    quarter_sin_mem[507] = 11'h59d;
    quarter_sin_mem[508] = 11'h59f;
    quarter_sin_mem[509] = 11'h5a1;
    quarter_sin_mem[510] = 11'h5a3;
    quarter_sin_mem[511] = 11'h5a5;
    quarter_sin_mem[512] = 11'h5a8;
    quarter_sin_mem[513] = 11'h5aa;
    quarter_sin_mem[514] = 11'h5ac;
    quarter_sin_mem[515] = 11'h5ae;
    quarter_sin_mem[516] = 11'h5b1;
    quarter_sin_mem[517] = 11'h5b3;
    quarter_sin_mem[518] = 11'h5b5;
    quarter_sin_mem[519] = 11'h5b7;
    quarter_sin_mem[520] = 11'h5b9;
    quarter_sin_mem[521] = 11'h5bc;
    quarter_sin_mem[522] = 11'h5be;
    quarter_sin_mem[523] = 11'h5c0;
    quarter_sin_mem[524] = 11'h5c2;
    quarter_sin_mem[525] = 11'h5c4;
    quarter_sin_mem[526] = 11'h5c6;
    quarter_sin_mem[527] = 11'h5c9;
    quarter_sin_mem[528] = 11'h5cb;
    quarter_sin_mem[529] = 11'h5cd;
    quarter_sin_mem[530] = 11'h5cf;
    quarter_sin_mem[531] = 11'h5d1;
    quarter_sin_mem[532] = 11'h5d3;
    quarter_sin_mem[533] = 11'h5d6;
    quarter_sin_mem[534] = 11'h5d8;
    quarter_sin_mem[535] = 11'h5da;
    quarter_sin_mem[536] = 11'h5dc;
    quarter_sin_mem[537] = 11'h5de;
    quarter_sin_mem[538] = 11'h5e0;
    quarter_sin_mem[539] = 11'h5e2;
    quarter_sin_mem[540] = 11'h5e5;
    quarter_sin_mem[541] = 11'h5e7;
    quarter_sin_mem[542] = 11'h5e9;
    quarter_sin_mem[543] = 11'h5eb;
    quarter_sin_mem[544] = 11'h5ed;
    quarter_sin_mem[545] = 11'h5ef;
    quarter_sin_mem[546] = 11'h5f1;
    quarter_sin_mem[547] = 11'h5f3;
    quarter_sin_mem[548] = 11'h5f5;
    quarter_sin_mem[549] = 11'h5f7;
    quarter_sin_mem[550] = 11'h5fa;
    quarter_sin_mem[551] = 11'h5fc;
    quarter_sin_mem[552] = 11'h5fe;
    quarter_sin_mem[553] = 11'h600;
    quarter_sin_mem[554] = 11'h602;
    quarter_sin_mem[555] = 11'h604;
    quarter_sin_mem[556] = 11'h606;
    quarter_sin_mem[557] = 11'h608;
    quarter_sin_mem[558] = 11'h60a;
    quarter_sin_mem[559] = 11'h60c;
    quarter_sin_mem[560] = 11'h60e;
    quarter_sin_mem[561] = 11'h610;
    quarter_sin_mem[562] = 11'h612;
    quarter_sin_mem[563] = 11'h614;
    quarter_sin_mem[564] = 11'h616;
    quarter_sin_mem[565] = 11'h618;
    quarter_sin_mem[566] = 11'h61b;
    quarter_sin_mem[567] = 11'h61d;
    quarter_sin_mem[568] = 11'h61f;
    quarter_sin_mem[569] = 11'h621;
    quarter_sin_mem[570] = 11'h623;
    quarter_sin_mem[571] = 11'h625;
    quarter_sin_mem[572] = 11'h627;
    quarter_sin_mem[573] = 11'h629;
    quarter_sin_mem[574] = 11'h62b;
    quarter_sin_mem[575] = 11'h62d;
    quarter_sin_mem[576] = 11'h62f;
    quarter_sin_mem[577] = 11'h631;
    quarter_sin_mem[578] = 11'h633;
    quarter_sin_mem[579] = 11'h635;
    quarter_sin_mem[580] = 11'h637;
    quarter_sin_mem[581] = 11'h639;
    quarter_sin_mem[582] = 11'h63b;
    quarter_sin_mem[583] = 11'h63c;
    quarter_sin_mem[584] = 11'h63e;
    quarter_sin_mem[585] = 11'h640;
    quarter_sin_mem[586] = 11'h642;
    quarter_sin_mem[587] = 11'h644;
    quarter_sin_mem[588] = 11'h646;
    quarter_sin_mem[589] = 11'h648;
    quarter_sin_mem[590] = 11'h64a;
    quarter_sin_mem[591] = 11'h64c;
    quarter_sin_mem[592] = 11'h64e;
    quarter_sin_mem[593] = 11'h650;
    quarter_sin_mem[594] = 11'h652;
    quarter_sin_mem[595] = 11'h654;
    quarter_sin_mem[596] = 11'h656;
    quarter_sin_mem[597] = 11'h658;
    quarter_sin_mem[598] = 11'h65a;
    quarter_sin_mem[599] = 11'h65b;
    quarter_sin_mem[600] = 11'h65d;
    quarter_sin_mem[601] = 11'h65f;
    quarter_sin_mem[602] = 11'h661;
    quarter_sin_mem[603] = 11'h663;
    quarter_sin_mem[604] = 11'h665;
    quarter_sin_mem[605] = 11'h667;
    quarter_sin_mem[606] = 11'h669;
    quarter_sin_mem[607] = 11'h66b;
    quarter_sin_mem[608] = 11'h66c;
    quarter_sin_mem[609] = 11'h66e;
    quarter_sin_mem[610] = 11'h670;
    quarter_sin_mem[611] = 11'h672;
    quarter_sin_mem[612] = 11'h674;
    quarter_sin_mem[613] = 11'h676;
    quarter_sin_mem[614] = 11'h678;
    quarter_sin_mem[615] = 11'h679;
    quarter_sin_mem[616] = 11'h67b;
    quarter_sin_mem[617] = 11'h67d;
    quarter_sin_mem[618] = 11'h67f;
    quarter_sin_mem[619] = 11'h681;
    quarter_sin_mem[620] = 11'h683;
    quarter_sin_mem[621] = 11'h684;
    quarter_sin_mem[622] = 11'h686;
    quarter_sin_mem[623] = 11'h688;
    quarter_sin_mem[624] = 11'h68a;
    quarter_sin_mem[625] = 11'h68c;
    quarter_sin_mem[626] = 11'h68e;
    quarter_sin_mem[627] = 11'h68f;
    quarter_sin_mem[628] = 11'h691;
    quarter_sin_mem[629] = 11'h693;
    quarter_sin_mem[630] = 11'h695;
    quarter_sin_mem[631] = 11'h696;
    quarter_sin_mem[632] = 11'h698;
    quarter_sin_mem[633] = 11'h69a;
    quarter_sin_mem[634] = 11'h69c;
    quarter_sin_mem[635] = 11'h69e;
    quarter_sin_mem[636] = 11'h69f;
    quarter_sin_mem[637] = 11'h6a1;
    quarter_sin_mem[638] = 11'h6a3;
    quarter_sin_mem[639] = 11'h6a5;
    quarter_sin_mem[640] = 11'h6a6;
    quarter_sin_mem[641] = 11'h6a8;
    quarter_sin_mem[642] = 11'h6aa;
    quarter_sin_mem[643] = 11'h6ac;
    quarter_sin_mem[644] = 11'h6ad;
    quarter_sin_mem[645] = 11'h6af;
    quarter_sin_mem[646] = 11'h6b1;
    quarter_sin_mem[647] = 11'h6b2;
    quarter_sin_mem[648] = 11'h6b4;
    quarter_sin_mem[649] = 11'h6b6;
    quarter_sin_mem[650] = 11'h6b8;
    quarter_sin_mem[651] = 11'h6b9;
    quarter_sin_mem[652] = 11'h6bb;
    quarter_sin_mem[653] = 11'h6bd;
    quarter_sin_mem[654] = 11'h6be;
    quarter_sin_mem[655] = 11'h6c0;
    quarter_sin_mem[656] = 11'h6c2;
    quarter_sin_mem[657] = 11'h6c3;
    quarter_sin_mem[658] = 11'h6c5;
    quarter_sin_mem[659] = 11'h6c7;
    quarter_sin_mem[660] = 11'h6c8;
    quarter_sin_mem[661] = 11'h6ca;
    quarter_sin_mem[662] = 11'h6cc;
    quarter_sin_mem[663] = 11'h6cd;
    quarter_sin_mem[664] = 11'h6cf;
    quarter_sin_mem[665] = 11'h6d1;
    quarter_sin_mem[666] = 11'h6d2;
    quarter_sin_mem[667] = 11'h6d4;
    quarter_sin_mem[668] = 11'h6d6;
    quarter_sin_mem[669] = 11'h6d7;
    quarter_sin_mem[670] = 11'h6d9;
    quarter_sin_mem[671] = 11'h6db;
    quarter_sin_mem[672] = 11'h6dc;
    quarter_sin_mem[673] = 11'h6de;
    quarter_sin_mem[674] = 11'h6df;
    quarter_sin_mem[675] = 11'h6e1;
    quarter_sin_mem[676] = 11'h6e3;
    quarter_sin_mem[677] = 11'h6e4;
    quarter_sin_mem[678] = 11'h6e6;
    quarter_sin_mem[679] = 11'h6e7;
    quarter_sin_mem[680] = 11'h6e9;
    quarter_sin_mem[681] = 11'h6ea;
    quarter_sin_mem[682] = 11'h6ec;
    quarter_sin_mem[683] = 11'h6ee;
    quarter_sin_mem[684] = 11'h6ef;
    quarter_sin_mem[685] = 11'h6f1;
    quarter_sin_mem[686] = 11'h6f2;
    quarter_sin_mem[687] = 11'h6f4;
    quarter_sin_mem[688] = 11'h6f5;
    quarter_sin_mem[689] = 11'h6f7;
    quarter_sin_mem[690] = 11'h6f9;
    quarter_sin_mem[691] = 11'h6fa;
    quarter_sin_mem[692] = 11'h6fc;
    quarter_sin_mem[693] = 11'h6fd;
    quarter_sin_mem[694] = 11'h6ff;
    quarter_sin_mem[695] = 11'h700;
    quarter_sin_mem[696] = 11'h702;
    quarter_sin_mem[697] = 11'h703;
    quarter_sin_mem[698] = 11'h705;
    quarter_sin_mem[699] = 11'h706;
    quarter_sin_mem[700] = 11'h708;
    quarter_sin_mem[701] = 11'h709;
    quarter_sin_mem[702] = 11'h70b;
    quarter_sin_mem[703] = 11'h70c;
    quarter_sin_mem[704] = 11'h70e;
    quarter_sin_mem[705] = 11'h70f;
    quarter_sin_mem[706] = 11'h711;
    quarter_sin_mem[707] = 11'h712;
    quarter_sin_mem[708] = 11'h714;
    quarter_sin_mem[709] = 11'h715;
    quarter_sin_mem[710] = 11'h716;
    quarter_sin_mem[711] = 11'h718;
    quarter_sin_mem[712] = 11'h719;
    quarter_sin_mem[713] = 11'h71b;
    quarter_sin_mem[714] = 11'h71c;
    quarter_sin_mem[715] = 11'h71e;
    quarter_sin_mem[716] = 11'h71f;
    quarter_sin_mem[717] = 11'h721;
    quarter_sin_mem[718] = 11'h722;
    quarter_sin_mem[719] = 11'h723;
    quarter_sin_mem[720] = 11'h725;
    quarter_sin_mem[721] = 11'h726;
    quarter_sin_mem[722] = 11'h728;
    quarter_sin_mem[723] = 11'h729;
    quarter_sin_mem[724] = 11'h72a;
    quarter_sin_mem[725] = 11'h72c;
    quarter_sin_mem[726] = 11'h72d;
    quarter_sin_mem[727] = 11'h72f;
    quarter_sin_mem[728] = 11'h730;
    quarter_sin_mem[729] = 11'h731;
    quarter_sin_mem[730] = 11'h733;
    quarter_sin_mem[731] = 11'h734;
    quarter_sin_mem[732] = 11'h735;
    quarter_sin_mem[733] = 11'h737;
    quarter_sin_mem[734] = 11'h738;
    quarter_sin_mem[735] = 11'h73a;
    quarter_sin_mem[736] = 11'h73b;
    quarter_sin_mem[737] = 11'h73c;
    quarter_sin_mem[738] = 11'h73e;
    quarter_sin_mem[739] = 11'h73f;
    quarter_sin_mem[740] = 11'h740;
    quarter_sin_mem[741] = 11'h742;
    quarter_sin_mem[742] = 11'h743;
    quarter_sin_mem[743] = 11'h744;
    quarter_sin_mem[744] = 11'h745;
    quarter_sin_mem[745] = 11'h747;
    quarter_sin_mem[746] = 11'h748;
    quarter_sin_mem[747] = 11'h749;
    quarter_sin_mem[748] = 11'h74b;
    quarter_sin_mem[749] = 11'h74c;
    quarter_sin_mem[750] = 11'h74d;
    quarter_sin_mem[751] = 11'h74f;
    quarter_sin_mem[752] = 11'h750;
    quarter_sin_mem[753] = 11'h751;
    quarter_sin_mem[754] = 11'h752;
    quarter_sin_mem[755] = 11'h754;
    quarter_sin_mem[756] = 11'h755;
    quarter_sin_mem[757] = 11'h756;
    quarter_sin_mem[758] = 11'h757;
    quarter_sin_mem[759] = 11'h759;
    quarter_sin_mem[760] = 11'h75a;
    quarter_sin_mem[761] = 11'h75b;
    quarter_sin_mem[762] = 11'h75c;
    quarter_sin_mem[763] = 11'h75e;
    quarter_sin_mem[764] = 11'h75f;
    quarter_sin_mem[765] = 11'h760;
    quarter_sin_mem[766] = 11'h761;
    quarter_sin_mem[767] = 11'h762;
    quarter_sin_mem[768] = 11'h764;
    quarter_sin_mem[769] = 11'h765;
    quarter_sin_mem[770] = 11'h766;
    quarter_sin_mem[771] = 11'h767;
    quarter_sin_mem[772] = 11'h768;
    quarter_sin_mem[773] = 11'h76a;
    quarter_sin_mem[774] = 11'h76b;
    quarter_sin_mem[775] = 11'h76c;
    quarter_sin_mem[776] = 11'h76d;
    quarter_sin_mem[777] = 11'h76e;
    quarter_sin_mem[778] = 11'h76f;
    quarter_sin_mem[779] = 11'h771;
    quarter_sin_mem[780] = 11'h772;
    quarter_sin_mem[781] = 11'h773;
    quarter_sin_mem[782] = 11'h774;
    quarter_sin_mem[783] = 11'h775;
    quarter_sin_mem[784] = 11'h776;
    quarter_sin_mem[785] = 11'h777;
    quarter_sin_mem[786] = 11'h779;
    quarter_sin_mem[787] = 11'h77a;
    quarter_sin_mem[788] = 11'h77b;
    quarter_sin_mem[789] = 11'h77c;
    quarter_sin_mem[790] = 11'h77d;
    quarter_sin_mem[791] = 11'h77e;
    quarter_sin_mem[792] = 11'h77f;
    quarter_sin_mem[793] = 11'h780;
    quarter_sin_mem[794] = 11'h781;
    quarter_sin_mem[795] = 11'h782;
    quarter_sin_mem[796] = 11'h784;
    quarter_sin_mem[797] = 11'h785;
    quarter_sin_mem[798] = 11'h786;
    quarter_sin_mem[799] = 11'h787;
    quarter_sin_mem[800] = 11'h788;
    quarter_sin_mem[801] = 11'h789;
    quarter_sin_mem[802] = 11'h78a;
    quarter_sin_mem[803] = 11'h78b;
    quarter_sin_mem[804] = 11'h78c;
    quarter_sin_mem[805] = 11'h78d;
    quarter_sin_mem[806] = 11'h78e;
    quarter_sin_mem[807] = 11'h78f;
    quarter_sin_mem[808] = 11'h790;
    quarter_sin_mem[809] = 11'h791;
    quarter_sin_mem[810] = 11'h792;
    quarter_sin_mem[811] = 11'h793;
    quarter_sin_mem[812] = 11'h794;
    quarter_sin_mem[813] = 11'h795;
    quarter_sin_mem[814] = 11'h796;
    quarter_sin_mem[815] = 11'h797;
    quarter_sin_mem[816] = 11'h798;
    quarter_sin_mem[817] = 11'h799;
    quarter_sin_mem[818] = 11'h79a;
    quarter_sin_mem[819] = 11'h79b;
    quarter_sin_mem[820] = 11'h79c;
    quarter_sin_mem[821] = 11'h79d;
    quarter_sin_mem[822] = 11'h79e;
    quarter_sin_mem[823] = 11'h79f;
    quarter_sin_mem[824] = 11'h7a0;
    quarter_sin_mem[825] = 11'h7a1;
    quarter_sin_mem[826] = 11'h7a2;
    quarter_sin_mem[827] = 11'h7a3;
    quarter_sin_mem[828] = 11'h7a4;
    quarter_sin_mem[829] = 11'h7a5;
    quarter_sin_mem[830] = 11'h7a5;
    quarter_sin_mem[831] = 11'h7a6;
    quarter_sin_mem[832] = 11'h7a7;
    quarter_sin_mem[833] = 11'h7a8;
    quarter_sin_mem[834] = 11'h7a9;
    quarter_sin_mem[835] = 11'h7aa;
    quarter_sin_mem[836] = 11'h7ab;
    quarter_sin_mem[837] = 11'h7ac;
    quarter_sin_mem[838] = 11'h7ad;
    quarter_sin_mem[839] = 11'h7ae;
    quarter_sin_mem[840] = 11'h7ae;
    quarter_sin_mem[841] = 11'h7af;
    quarter_sin_mem[842] = 11'h7b0;
    quarter_sin_mem[843] = 11'h7b1;
    quarter_sin_mem[844] = 11'h7b2;
    quarter_sin_mem[845] = 11'h7b3;
    quarter_sin_mem[846] = 11'h7b4;
    quarter_sin_mem[847] = 11'h7b4;
    quarter_sin_mem[848] = 11'h7b5;
    quarter_sin_mem[849] = 11'h7b6;
    quarter_sin_mem[850] = 11'h7b7;
    quarter_sin_mem[851] = 11'h7b8;
    quarter_sin_mem[852] = 11'h7b9;
    quarter_sin_mem[853] = 11'h7b9;
    quarter_sin_mem[854] = 11'h7ba;
    quarter_sin_mem[855] = 11'h7bb;
    quarter_sin_mem[856] = 11'h7bc;
    quarter_sin_mem[857] = 11'h7bd;
    quarter_sin_mem[858] = 11'h7bd;
    quarter_sin_mem[859] = 11'h7be;
    quarter_sin_mem[860] = 11'h7bf;
    quarter_sin_mem[861] = 11'h7c0;
    quarter_sin_mem[862] = 11'h7c1;
    quarter_sin_mem[863] = 11'h7c1;
    quarter_sin_mem[864] = 11'h7c2;
    quarter_sin_mem[865] = 11'h7c3;
    quarter_sin_mem[866] = 11'h7c4;
    quarter_sin_mem[867] = 11'h7c4;
    quarter_sin_mem[868] = 11'h7c5;
    quarter_sin_mem[869] = 11'h7c6;
    quarter_sin_mem[870] = 11'h7c7;
    quarter_sin_mem[871] = 11'h7c7;
    quarter_sin_mem[872] = 11'h7c8;
    quarter_sin_mem[873] = 11'h7c9;
    quarter_sin_mem[874] = 11'h7ca;
    quarter_sin_mem[875] = 11'h7ca;
    quarter_sin_mem[876] = 11'h7cb;
    quarter_sin_mem[877] = 11'h7cc;
    quarter_sin_mem[878] = 11'h7cc;
    quarter_sin_mem[879] = 11'h7cd;
    quarter_sin_mem[880] = 11'h7ce;
    quarter_sin_mem[881] = 11'h7ce;
    quarter_sin_mem[882] = 11'h7cf;
    quarter_sin_mem[883] = 11'h7d0;
    quarter_sin_mem[884] = 11'h7d0;
    quarter_sin_mem[885] = 11'h7d1;
    quarter_sin_mem[886] = 11'h7d2;
    quarter_sin_mem[887] = 11'h7d2;
    quarter_sin_mem[888] = 11'h7d3;
    quarter_sin_mem[889] = 11'h7d4;
    quarter_sin_mem[890] = 11'h7d4;
    quarter_sin_mem[891] = 11'h7d5;
    quarter_sin_mem[892] = 11'h7d6;
    quarter_sin_mem[893] = 11'h7d6;
    quarter_sin_mem[894] = 11'h7d7;
    quarter_sin_mem[895] = 11'h7d8;
    quarter_sin_mem[896] = 11'h7d8;
    quarter_sin_mem[897] = 11'h7d9;
    quarter_sin_mem[898] = 11'h7d9;
    quarter_sin_mem[899] = 11'h7da;
    quarter_sin_mem[900] = 11'h7db;
    quarter_sin_mem[901] = 11'h7db;
    quarter_sin_mem[902] = 11'h7dc;
    quarter_sin_mem[903] = 11'h7dc;
    quarter_sin_mem[904] = 11'h7dd;
    quarter_sin_mem[905] = 11'h7dd;
    quarter_sin_mem[906] = 11'h7de;
    quarter_sin_mem[907] = 11'h7df;
    quarter_sin_mem[908] = 11'h7df;
    quarter_sin_mem[909] = 11'h7e0;
    quarter_sin_mem[910] = 11'h7e0;
    quarter_sin_mem[911] = 11'h7e1;
    quarter_sin_mem[912] = 11'h7e1;
    quarter_sin_mem[913] = 11'h7e2;
    quarter_sin_mem[914] = 11'h7e2;
    quarter_sin_mem[915] = 11'h7e3;
    quarter_sin_mem[916] = 11'h7e3;
    quarter_sin_mem[917] = 11'h7e4;
    quarter_sin_mem[918] = 11'h7e4;
    quarter_sin_mem[919] = 11'h7e5;
    quarter_sin_mem[920] = 11'h7e5;
    quarter_sin_mem[921] = 11'h7e6;
    quarter_sin_mem[922] = 11'h7e6;
    quarter_sin_mem[923] = 11'h7e7;
    quarter_sin_mem[924] = 11'h7e7;
    quarter_sin_mem[925] = 11'h7e8;
    quarter_sin_mem[926] = 11'h7e8;
    quarter_sin_mem[927] = 11'h7e9;
    quarter_sin_mem[928] = 11'h7e9;
    quarter_sin_mem[929] = 11'h7ea;
    quarter_sin_mem[930] = 11'h7ea;
    quarter_sin_mem[931] = 11'h7eb;
    quarter_sin_mem[932] = 11'h7eb;
    quarter_sin_mem[933] = 11'h7ec;
    quarter_sin_mem[934] = 11'h7ec;
    quarter_sin_mem[935] = 11'h7ec;
    quarter_sin_mem[936] = 11'h7ed;
    quarter_sin_mem[937] = 11'h7ed;
    quarter_sin_mem[938] = 11'h7ee;
    quarter_sin_mem[939] = 11'h7ee;
    quarter_sin_mem[940] = 11'h7ef;
    quarter_sin_mem[941] = 11'h7ef;
    quarter_sin_mem[942] = 11'h7ef;
    quarter_sin_mem[943] = 11'h7f0;
    quarter_sin_mem[944] = 11'h7f0;
    quarter_sin_mem[945] = 11'h7f0;
    quarter_sin_mem[946] = 11'h7f1;
    quarter_sin_mem[947] = 11'h7f1;
    quarter_sin_mem[948] = 11'h7f2;
    quarter_sin_mem[949] = 11'h7f2;
    quarter_sin_mem[950] = 11'h7f2;
    quarter_sin_mem[951] = 11'h7f3;
    quarter_sin_mem[952] = 11'h7f3;
    quarter_sin_mem[953] = 11'h7f3;
    quarter_sin_mem[954] = 11'h7f4;
    quarter_sin_mem[955] = 11'h7f4;
    quarter_sin_mem[956] = 11'h7f4;
    quarter_sin_mem[957] = 11'h7f5;
    quarter_sin_mem[958] = 11'h7f5;
    quarter_sin_mem[959] = 11'h7f5;
    quarter_sin_mem[960] = 11'h7f6;
    quarter_sin_mem[961] = 11'h7f6;
    quarter_sin_mem[962] = 11'h7f6;
    quarter_sin_mem[963] = 11'h7f7;
    quarter_sin_mem[964] = 11'h7f7;
    quarter_sin_mem[965] = 11'h7f7;
    quarter_sin_mem[966] = 11'h7f7;
    quarter_sin_mem[967] = 11'h7f8;
    quarter_sin_mem[968] = 11'h7f8;
    quarter_sin_mem[969] = 11'h7f8;
    quarter_sin_mem[970] = 11'h7f8;
    quarter_sin_mem[971] = 11'h7f9;
    quarter_sin_mem[972] = 11'h7f9;
    quarter_sin_mem[973] = 11'h7f9;
    quarter_sin_mem[974] = 11'h7f9;
    quarter_sin_mem[975] = 11'h7fa;
    quarter_sin_mem[976] = 11'h7fa;
    quarter_sin_mem[977] = 11'h7fa;
    quarter_sin_mem[978] = 11'h7fa;
    quarter_sin_mem[979] = 11'h7fb;
    quarter_sin_mem[980] = 11'h7fb;
    quarter_sin_mem[981] = 11'h7fb;
    quarter_sin_mem[982] = 11'h7fb;
    quarter_sin_mem[983] = 11'h7fb;
    quarter_sin_mem[984] = 11'h7fc;
    quarter_sin_mem[985] = 11'h7fc;
    quarter_sin_mem[986] = 11'h7fc;
    quarter_sin_mem[987] = 11'h7fc;
    quarter_sin_mem[988] = 11'h7fc;
    quarter_sin_mem[989] = 11'h7fd;
    quarter_sin_mem[990] = 11'h7fd;
    quarter_sin_mem[991] = 11'h7fd;
    quarter_sin_mem[992] = 11'h7fd;
    quarter_sin_mem[993] = 11'h7fd;
    quarter_sin_mem[994] = 11'h7fd;
    quarter_sin_mem[995] = 11'h7fd;
    quarter_sin_mem[996] = 11'h7fe;
    quarter_sin_mem[997] = 11'h7fe;
    quarter_sin_mem[998] = 11'h7fe;
    quarter_sin_mem[999] = 11'h7fe;
    quarter_sin_mem[1000] = 11'h7fe;
    quarter_sin_mem[1001] = 11'h7fe;
    quarter_sin_mem[1002] = 11'h7fe;
    quarter_sin_mem[1003] = 11'h7fe;
    quarter_sin_mem[1004] = 11'h7ff;
    quarter_sin_mem[1005] = 11'h7ff;
    quarter_sin_mem[1006] = 11'h7ff;
    quarter_sin_mem[1007] = 11'h7ff;
    quarter_sin_mem[1008] = 11'h7ff;
    quarter_sin_mem[1009] = 11'h7ff;
    quarter_sin_mem[1010] = 11'h7ff;
    quarter_sin_mem[1011] = 11'h7ff;
    quarter_sin_mem[1012] = 11'h7ff;
    quarter_sin_mem[1013] = 11'h7ff;
    quarter_sin_mem[1014] = 11'h7ff;
    quarter_sin_mem[1015] = 11'h7ff;
    quarter_sin_mem[1016] = 11'h7ff;
    quarter_sin_mem[1017] = 11'h7ff;
    quarter_sin_mem[1018] = 11'h7ff;
    quarter_sin_mem[1019] = 11'h7ff;
    quarter_sin_mem[1020] = 11'h7ff;
    quarter_sin_mem[1021] = 11'h7ff;
    quarter_sin_mem[1022] = 11'h7ff;
    quarter_sin_mem[1023] = 11'h7ff;
  end
  reg [9:0] _0_;
  reg [9:0] _1_;
  always @(posedge clk) begin
    _0_ <= \quarter_sin_mem_r_addr$2 ;
    _1_ <= quarter_sin_mem_r_addr;
  end
  assign \quarter_sin_mem_r_data$3  = quarter_sin_mem[_0_];
  assign quarter_sin_mem_r_data = quarter_sin_mem[_1_];
  always @* begin
    quarter_sin_mem_r_addr = 10'h000;
    quarter_sin_mem_r_addr = \$6 ;
  end
  always @* begin
    \quarter_sin_mem_r_addr$2  = 10'h000;
    \quarter_sin_mem_r_addr$2  = \$16 ;
  end
  always @* begin
    sin = 12'h000;
    sin = \$23 ;
  end
  always @* begin
    cos = 12'h000;
    cos = \$27 ;
  end
  assign \$9  = \$10 ;
  assign \$13  = \$14 ;
  assign \$17  = \$18 ;
  assign \$28  = \$29 ;
endmodule

(* \nmigen.hierarchy  = "top" *)
(* top =  1  *)
(* generator = "nMigen" *)
module top(clk, rst, led);
  (* src = "/Users/lachlansneff/dev/afm/fpga/sigma_delta_dac.py:7" *)
  reg [11:0] \U$$0_waveform ;
  (* src = "/Users/lachlansneff/dev/afm/fpga/sigma_delta_dac.py:7" *)
  reg [11:0] \U$$1_waveform ;
  (* src = "/Users/lachlansneff/dev/afm/fpga/nco.py:48" *)
  wire [11:0] \U$$2_cos ;
  (* src = "/Users/lachlansneff/dev/afm/fpga/nco.py:49" *)
  wire [31:0] \U$$2_phase_step ;
  (* src = "/Users/lachlansneff/dev/afm/fpga/nco.py:47" *)
  wire [11:0] \U$$2_sin ;
  (* src = "/Users/lachlansneff/dev/afm/fpga/top.py:28" *)
  wire \U$$3_nco_ctrl__enable ;
  (* src = "/Users/lachlansneff/Library/Python/3.9/lib/python/site-packages/nmigen/hdl/ir.py:526" *)
  input clk;
  (* src = "/Users/lachlansneff/dev/afm/fpga/nco.py:46" *)
  reg enable;
  (* src = "/Users/lachlansneff/dev/afm/fpga/top.py:32" *)
  output led;
  (* src = "/Users/lachlansneff/Library/Python/3.9/lib/python/site-packages/nmigen/hdl/ir.py:526" *)
  input rst;
  \U$$0  \U$$0  (
    .clk(clk),
    .rst(rst),
    .waveform(\U$$0_waveform )
  );
  \U$$1  \U$$1  (
    .clk(clk),
    .rst(rst),
    .waveform(\U$$1_waveform )
  );
  \U$$2  \U$$2  (
    .clk(clk),
    .cos(\U$$2_cos ),
    .phase_step(\U$$2_phase_step ),
    .rst(rst),
    .sin(\U$$2_sin )
  );
  \U$$3  \U$$3  (
    .clk(clk),
    .led(led),
    .nco_ctrl__enable(\U$$3_nco_ctrl__enable ),
    .phase_step(\U$$2_phase_step ),
    .rst(rst)
  );
  always @* begin
    \U$$0_waveform  = 12'h000;
    \U$$0_waveform  = \U$$2_sin ;
  end
  always @* begin
    \U$$1_waveform  = 12'h000;
    \U$$1_waveform  = \U$$2_cos ;
  end
  always @* begin
    enable = 1'h0;
    enable = \U$$3_nco_ctrl__enable ;
  end
endmodule

