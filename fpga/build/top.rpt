
 /----------------------------------------------------------------------------\
 |                                                                            |
 |  yosys -- Yosys Open SYnthesis Suite                                       |
 |                                                                            |
 |  Copyright (C) 2012 - 2019  Clifford Wolf <clifford@clifford.at>           |
 |                                                                            |
 |  Permission to use, copy, modify, and/or distribute this software for any  |
 |  purpose with or without fee is hereby granted, provided that the above    |
 |  copyright notice and this permission notice appear in all copies.         |
 |                                                                            |
 |  THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES  |
 |  WITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF          |
 |  MERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR   |
 |  ANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES    |
 |  WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN     |
 |  ACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF   |
 |  OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.            |
 |                                                                            |
 \----------------------------------------------------------------------------/

 Yosys 0.9 (git sha1 UNKNOWN, clang 12.0.0 -fPIC -Os)


-- Executing script file `top.ys' --

1. Executing Verilog-2005 frontend: picorv32.v
Parsing Verilog input from `picorv32.v' to AST representation.
Generating RTLIL representation for module `\picorv32'.
Generating RTLIL representation for module `\picorv32_regs'.
Generating RTLIL representation for module `\picorv32_pcpi_mul'.
Generating RTLIL representation for module `\picorv32_pcpi_fast_mul'.
Generating RTLIL representation for module `\picorv32_pcpi_div'.
Generating RTLIL representation for module `\picorv32_axi'.
Generating RTLIL representation for module `\picorv32_axi_adapter'.
Generating RTLIL representation for module `\picorv32_wb'.
Successfully finished Verilog frontend.

2. Executing ILANG frontend.
Input filename: top.il

3. Executing SYNTH_ICE40 pass.

3.1. Executing Verilog-2005 frontend: /usr/local/bin/../share/yosys/ice40/cells_sim.v
Parsing Verilog input from `/usr/local/bin/../share/yosys/ice40/cells_sim.v' to AST representation.
Generating RTLIL representation for module `\SB_IO'.
Generating RTLIL representation for module `\SB_GB_IO'.
Generating RTLIL representation for module `\SB_GB'.
Generating RTLIL representation for module `\SB_LUT4'.
Generating RTLIL representation for module `\SB_CARRY'.
Generating RTLIL representation for module `\SB_DFF'.
Generating RTLIL representation for module `\SB_DFFE'.
Generating RTLIL representation for module `\SB_DFFSR'.
Generating RTLIL representation for module `\SB_DFFR'.
Generating RTLIL representation for module `\SB_DFFSS'.
Generating RTLIL representation for module `\SB_DFFS'.
Generating RTLIL representation for module `\SB_DFFESR'.
Generating RTLIL representation for module `\SB_DFFER'.
Generating RTLIL representation for module `\SB_DFFESS'.
Generating RTLIL representation for module `\SB_DFFES'.
Generating RTLIL representation for module `\SB_DFFN'.
Generating RTLIL representation for module `\SB_DFFNE'.
Generating RTLIL representation for module `\SB_DFFNSR'.
Generating RTLIL representation for module `\SB_DFFNR'.
Generating RTLIL representation for module `\SB_DFFNSS'.
Generating RTLIL representation for module `\SB_DFFNS'.
Generating RTLIL representation for module `\SB_DFFNESR'.
Generating RTLIL representation for module `\SB_DFFNER'.
Generating RTLIL representation for module `\SB_DFFNESS'.
Generating RTLIL representation for module `\SB_DFFNES'.
Generating RTLIL representation for module `\SB_RAM40_4K'.
Generating RTLIL representation for module `\SB_RAM40_4KNR'.
Generating RTLIL representation for module `\SB_RAM40_4KNW'.
Generating RTLIL representation for module `\SB_RAM40_4KNRNW'.
Generating RTLIL representation for module `\ICESTORM_LC'.
Generating RTLIL representation for module `\SB_PLL40_CORE'.
Generating RTLIL representation for module `\SB_PLL40_PAD'.
Generating RTLIL representation for module `\SB_PLL40_2_PAD'.
Generating RTLIL representation for module `\SB_PLL40_2F_CORE'.
Generating RTLIL representation for module `\SB_PLL40_2F_PAD'.
Generating RTLIL representation for module `\SB_WARMBOOT'.
Generating RTLIL representation for module `\SB_SPRAM256KA'.
Generating RTLIL representation for module `\SB_HFOSC'.
Generating RTLIL representation for module `\SB_LFOSC'.
Generating RTLIL representation for module `\SB_RGBA_DRV'.
Generating RTLIL representation for module `\SB_LED_DRV_CUR'.
Generating RTLIL representation for module `\SB_RGB_DRV'.
Generating RTLIL representation for module `\SB_I2C'.
Generating RTLIL representation for module `\SB_SPI'.
Generating RTLIL representation for module `\SB_LEDDA_IP'.
Generating RTLIL representation for module `\SB_FILTER_50NS'.
Generating RTLIL representation for module `\SB_IO_I3C'.
Generating RTLIL representation for module `\SB_IO_OD'.
Generating RTLIL representation for module `\SB_MAC16'.
Successfully finished Verilog frontend.

3.2. Executing HIERARCHY pass (managing design hierarchy).

3.2.1. Analyzing design hierarchy..
Top module:  \top
Used module:     \pin_clk16_0
Used module:     \pin_led_0
Used module:     \pin_dac_0
Used module:     \cd_sync
Used module:     \U$$2
Used module:         \picorv32
Used module:     \U$$1
Used module:     \U$$0
Used module:         \sincos_lookup

3.2.2. Executing AST frontend in derive mode using pre-parsed AST for module `\picorv32'.
Parameter \ENABLE_COUNTERS = 0
Parameter \LATCHED_MEM_RDATA = 1
Parameter \TWO_STAGE_SHIFT = 0
Parameter \TWO_CYCLE_ALU = 1
Parameter \COMPRESSED_ISA = 1
Parameter \CATCH_MISALIGN = 0
Parameter \CATCH_ILLINSN = 0
Parameter \ENABLE_MUL = 1
Parameter \PROGADDR_RESET = 1024
Parameter \PROGADDR_IRQ = 1040
Generating RTLIL representation for module `$paramod$19e4048633bf612a4d25d3d9aeb98945c5854356\picorv32'.

3.2.3. Analyzing design hierarchy..
Top module:  \top
Used module:     \pin_clk16_0
Used module:     \pin_led_0
Used module:     \pin_dac_0
Used module:     \cd_sync
Used module:     \U$$2
Used module:         $paramod$19e4048633bf612a4d25d3d9aeb98945c5854356\picorv32
Used module:             \picorv32_pcpi_mul
Used module:     \U$$1
Used module:     \U$$0
Used module:         \sincos_lookup

3.2.4. Analyzing design hierarchy..
Top module:  \top
Used module:     \pin_clk16_0
Used module:     \pin_led_0
Used module:     \pin_dac_0
Used module:     \cd_sync
Used module:     \U$$2
Used module:         $paramod$19e4048633bf612a4d25d3d9aeb98945c5854356\picorv32
Used module:             \picorv32_pcpi_mul
Used module:     \U$$1
Used module:     \U$$0
Used module:         \sincos_lookup
Removing unused module `\picorv32_wb'.
Removing unused module `\picorv32_axi_adapter'.
Removing unused module `\picorv32_axi'.
Removing unused module `\picorv32_pcpi_div'.
Removing unused module `\picorv32_pcpi_fast_mul'.
Removing unused module `\picorv32_regs'.
Removing unused module `\picorv32'.
Removed 7 unused modules.

3.3. Executing PROC pass (convert processes to netlists).

3.3.1. Executing PROC_CLEAN pass (remove empty switches from decision trees).
Found and cleaned up 1 empty switch in `$paramod$19e4048633bf612a4d25d3d9aeb98945c5854356\picorv32.$proc$picorv32.v:206$1569'.
Removing empty process `$paramod$19e4048633bf612a4d25d3d9aeb98945c5854356\picorv32.$proc$picorv32.v:206$1569'.
Found and cleaned up 16 empty switches in `$paramod$19e4048633bf612a4d25d3d9aeb98945c5854356\picorv32.$proc$picorv32.v:1397$1386'.
Found and cleaned up 1 empty switch in `$paramod$19e4048633bf612a4d25d3d9aeb98945c5854356\picorv32.$proc$picorv32.v:1343$1370'.
Found and cleaned up 6 empty switches in `$paramod$19e4048633bf612a4d25d3d9aeb98945c5854356\picorv32.$proc$picorv32.v:546$1011'.
Removing empty process `$paramod$19e4048633bf612a4d25d3d9aeb98945c5854356\picorv32.$proc$picorv32.v:546$1011'.
Found and cleaned up 1 empty switch in `\picorv32_pcpi_mul.$proc$picorv32.v:2244$728'.
Cleaned up 25 empty switches.

3.3.2. Executing PROC_RMDEAD pass (remove dead branches from decision trees).
Marked 1 switch rules as full_case in process $group_2 in module cd_sync.
Marked 37 switch rules as full_case in process $proc$picorv32.v:1397$1386 in module $paramod$19e4048633bf612a4d25d3d9aeb98945c5854356\picorv32.
Marked 2 switch rules as full_case in process $proc$picorv32.v:1304$1352 in module $paramod$19e4048633bf612a4d25d3d9aeb98945c5854356\picorv32.
Marked 2 switch rules as full_case in process $proc$picorv32.v:1290$1347 in module $paramod$19e4048633bf612a4d25d3d9aeb98945c5854356\picorv32.
Marked 8 switch rules as full_case in process $proc$picorv32.v:1181$1312 in module $paramod$19e4048633bf612a4d25d3d9aeb98945c5854356\picorv32.
Marked 3 switch rules as full_case in process $proc$picorv32.v:856$1051 in module $paramod$19e4048633bf612a4d25d3d9aeb98945c5854356\picorv32.
Marked 3 switch rules as full_case in process $proc$picorv32.v:807$1049 in module $paramod$19e4048633bf612a4d25d3d9aeb98945c5854356\picorv32.
Marked 2 switch rules as full_case in process $proc$picorv32.v:776$1045 in module $paramod$19e4048633bf612a4d25d3d9aeb98945c5854356\picorv32.
Marked 47 switch rules as full_case in process $proc$picorv32.v:700$1044 in module $paramod$19e4048633bf612a4d25d3d9aeb98945c5854356\picorv32.
Marked 4 switch rules as full_case in process $proc$picorv32.v:565$1020 in module $paramod$19e4048633bf612a4d25d3d9aeb98945c5854356\picorv32.
Marked 1 switch rules as full_case in process $proc$picorv32.v:430$980 in module $paramod$19e4048633bf612a4d25d3d9aeb98945c5854356\picorv32.
Removed 2 dead cases from process $proc$picorv32.v:401$977 in module $paramod$19e4048633bf612a4d25d3d9aeb98945c5854356\picorv32.
Marked 2 switch rules as full_case in process $proc$picorv32.v:401$977 in module $paramod$19e4048633bf612a4d25d3d9aeb98945c5854356\picorv32.
Marked 1 switch rules as full_case in process $proc$picorv32.v:390$972 in module $paramod$19e4048633bf612a4d25d3d9aeb98945c5854356\picorv32.
Marked 1 switch rules as full_case in process $proc$picorv32.v:325$898 in module $paramod$19e4048633bf612a4d25d3d9aeb98945c5854356\picorv32.
Marked 4 switch rules as full_case in process $proc$picorv32.v:2268$766 in module picorv32_pcpi_mul.
Removed a total of 2 dead cases.

3.3.3. Executing PROC_INIT pass (extract init attributes).
Found init rule in `\cd_sync.$group_2'.
  Set init value: \timer = 8'00000000
Found init rule in `\cd_sync.$group_1'.
  Set init value: \ready = 1'0
Found init rule in `\U$$2.$group_10'.
  Set init value: \phase_step = 0
Found init rule in `\U$$2.$group_9'.
  Set init value: \nco_ctrl__enable = 1'0
Found init rule in `\U$$2.$group_8'.
  Set init value: \led = 1'0
Found init rule in `\U$$2.$group_1'.
  Set init value: \mem_ready = 1'0
Found init rule in `\U$$1.$group_0'.
  Set init value: \acc = 13'0000000000000
Found init rule in `\U$$0.$group_3'.
  Set init value: \phase_acc = 0

3.3.4. Executing PROC_ARST pass (detect async resets in processes).

3.3.5. Executing PROC_MUX pass (convert decision trees to multiplexers).
Creating decoders for process `\top.$group_3'.
     1/1: \pin_led_0_led_0__o
Creating decoders for process `\top.$group_2'.
     1/1: \pin_dac_0_dac_0__o
Creating decoders for process `\top.$group_1'.
     1/1: \enable
Creating decoders for process `\top.$group_0'.
     1/1: \U$$1_waveform
Creating decoders for process `\cd_sync.$group_4'.
     1/1: \rst
Creating decoders for process `\cd_sync.$group_3'.
     1/1: \clk
Creating decoders for process `\cd_sync.$group_2'.
     1/1: \timer$next
Creating decoders for process `\cd_sync.$group_1'.
     1/1: \ready$next
Creating decoders for process `\cd_sync.$group_0'.
     1/1: \por_clk
Creating decoders for process `\U$$2.$group_10'.
     1/1: \phase_step$next
Creating decoders for process `\U$$2.$group_9'.
     1/1: \nco_ctrl__enable$next
Creating decoders for process `\U$$2.$group_8'.
     1/1: \led$next
Creating decoders for process `\U$$2.$group_7'.
     1/1: \mem_w_en
Creating decoders for process `\U$$2.$group_6'.
     1/1: \mem_w_data
Creating decoders for process `\U$$2.$group_5'.
     1/1: \mem_w_addr
Creating decoders for process `\U$$2.$group_4'.
     1/1: \mem_r_en
Creating decoders for process `\U$$2.$group_3'.
     1/1: \mem_rdata
Creating decoders for process `\U$$2.$group_2'.
     1/1: \mem_r_addr
Creating decoders for process `\U$$2.$group_1'.
     1/1: \mem_ready$next
Creating decoders for process `\U$$2.$group_0'.
     1/1: \resetn
Creating decoders for process `\U$$1.$group_1'.
     1/1: \out
Creating decoders for process `\U$$1.$group_0'.
     1/1: \acc$next
Creating decoders for process `\U$$0.$group_3'.
     1/1: \phase_acc$next
Creating decoders for process `\U$$0.$group_2'.
     1/1: \cos
Creating decoders for process `\U$$0.$group_1'.
     1/1: \sin
Creating decoders for process `\U$$0.$group_0'.
     1/1: \sincos_lookup_addr
Creating decoders for process `\sincos_lookup.$group_3'.
     1/1: \cos
Creating decoders for process `\sincos_lookup.$group_2'.
     1/1: \sin
Creating decoders for process `\sincos_lookup.$group_1'.
     1/1: \quarter_sin_mem_r_addr$2
Creating decoders for process `\sincos_lookup.$group_0'.
     1/1: \quarter_sin_mem_r_addr
Creating decoders for process `$paramod$19e4048633bf612a4d25d3d9aeb98945c5854356\picorv32.$proc$picorv32.v:1397$1386'.
     1/94: $0\reg_next_pc[31:0] [31:1]
     2/94: $0\reg_next_pc[31:0] [0]
     3/94: $0\reg_pc[31:0] [0]
     4/94: $19\next_irq_pending[2:2]
     5/94: $18\next_irq_pending[2:2]
     6/94: $17\next_irq_pending[2:2]
     7/94: $16\next_irq_pending[2:2]
     8/94: $15\next_irq_pending[2:2]
     9/94: $14\next_irq_pending[2:2]
    10/94: $2\next_irq_pending[31:0] [31:2]
    11/94: $3\set_mem_do_rdata[0:0]
    12/94: $2\next_irq_pending[31:0] [1]
    13/94: $3\set_mem_do_wdata[0:0]
    14/94: $2\next_irq_pending[31:0] [0]
    15/94: $4\set_mem_do_rinst[0:0]
    16/94: $3\set_mem_do_rinst[0:0]
    17/94: $4\set_mem_do_wdata[0:0]
    18/94: $12\next_irq_pending[1:1]
    19/94: $11\next_irq_pending[1:1]
    20/94: $10\next_irq_pending[1:1]
    21/94: $4\set_mem_do_rdata[0:0]
    22/94: $8\next_irq_pending[1:1]
    23/94: $7\next_irq_pending[1:1]
    24/94: $6\next_irq_pending[1:1]
    25/94: $5\next_irq_pending[1:1]
    26/94: $4\next_irq_pending[1:1]
    27/94: $13\next_irq_pending[1:1]
    28/94: $5\set_mem_do_rinst[0:0]
    29/94: $9\next_irq_pending[1:1]
    30/94: $3\next_irq_pending[31:0]
    31/94: $3\current_pc[31:0]
    32/94: $2\current_pc[31:0]
    33/94: $2\set_mem_do_wdata[0:0]
    34/94: $2\set_mem_do_rdata[0:0]
    35/94: $2\set_mem_do_rinst[0:0]
    36/94: $1\next_irq_pending[31:0]
    37/94: $1\current_pc[31:0]
    38/94: $1\set_mem_do_wdata[0:0]
    39/94: $1\set_mem_do_rdata[0:0]
    40/94: $1\set_mem_do_rinst[0:0]
    41/94: $0\current_pc[31:0]
    42/94: $0\irq_pending[31:0]
    43/94: $0\next_irq_pending[31:0] [2]
    44/94: { $0\next_irq_pending[31:0] [31:3] $0\next_irq_pending[31:0] [1:0] }
    45/94: $0\set_mem_do_wdata[0:0]
    46/94: $0\set_mem_do_rdata[0:0]
    47/94: $0\set_mem_do_rinst[0:0]
    48/94: $0\trace_valid[0:0]
    49/94: $0\do_waitirq[0:0]
    50/94: $0\decoder_pseudo_trigger_q[0:0]
    51/94: $0\decoder_pseudo_trigger[0:0]
    52/94: $0\decoder_trigger_q[0:0]
    53/94: $0\decoder_trigger[0:0]
    54/94: $0\alu_wait_2[0:0]
    55/94: $0\alu_wait[0:0]
    56/94: $0\alu_out_q[31:0]
    57/94: $0\alu_out_0_q[0:0]
    58/94: $0\reg_out[31:0]
    59/94: $0\reg_sh[4:0]
    60/94: $0\trap[0:0]
    61/94: $0\pcpi_timeout[0:0]
    62/94: $0\latched_rd[4:0]
    63/94: $0\latched_is_lb[0:0]
    64/94: $0\latched_is_lh[0:0]
    65/94: $0\latched_is_lu[0:0]
    66/94: $0\latched_trace[0:0]
    67/94: $0\latched_compr[0:0]
    68/94: $0\latched_branch[0:0]
    69/94: $0\latched_stalu[0:0]
    70/94: $0\latched_store[0:0]
    71/94: $0\irq_state[1:0]
    72/94: $0\cpu_state[7:0]
    73/94: $0\dbg_rs2val_valid[0:0]
    74/94: $0\dbg_rs1val_valid[0:0]
    75/94: $0\dbg_rs2val[31:0]
    76/94: $0\dbg_rs1val[31:0]
    77/94: $0\mem_do_wdata[0:0]
    78/94: $0\mem_do_rdata[0:0]
    79/94: $0\mem_do_rinst[0:0]
    80/94: $0\mem_do_prefetch[0:0]
    81/94: $0\mem_wordsize[1:0]
    82/94: $0\timer[31:0]
    83/94: $0\irq_mask[31:0]
    84/94: $0\irq_active[0:0]
    85/94: $0\irq_delay[0:0]
    86/94: $0\reg_op2[31:0]
    87/94: $0\reg_op1[31:0]
    88/94: $0\reg_pc[31:0] [31:1]
    89/94: $20\next_irq_pending[2:2]
    90/94: $0\count_instr[63:0]
    91/94: $0\count_cycle[63:0]
    92/94: $0\trace_data[35:0]
    93/94: $0\eoi[31:0]
    94/94: $0\pcpi_valid[0:0]
Creating decoders for process `$paramod$19e4048633bf612a4d25d3d9aeb98945c5854356\picorv32.$proc$picorv32.v:1343$1370'.
     1/5: $1\cpuregs_rs2[31:0]
     2/5: $1\cpuregs_rs1[31:0]
     3/5: $0\cpuregs_rs2[31:0]
     4/5: $0\cpuregs_rs1[31:0]
     5/5: $0\decoded_rs[4:0]
Creating decoders for process `$paramod$19e4048633bf612a4d25d3d9aeb98945c5854356\picorv32.$proc$picorv32.v:1332$1364'.
     1/3: $0$memwr$\cpuregs$picorv32.v:1339$897_EN[31:0]$1367
     2/3: $0$memwr$\cpuregs$picorv32.v:1339$897_DATA[31:0]$1366
     3/3: $0$memwr$\cpuregs$picorv32.v:1339$897_ADDR[4:0]$1365
Creating decoders for process `$paramod$19e4048633bf612a4d25d3d9aeb98945c5854356\picorv32.$proc$picorv32.v:1304$1352'.
     1/6: $2\cpuregs_write[0:0]
     2/6: $2\cpuregs_wrdata[31:0]
     3/6: $1\cpuregs_wrdata[31:0]
     4/6: $1\cpuregs_write[0:0]
     5/6: $0\cpuregs_wrdata[31:0]
     6/6: $0\cpuregs_write[0:0]
Creating decoders for process `$paramod$19e4048633bf612a4d25d3d9aeb98945c5854356\picorv32.$proc$picorv32.v:1290$1347'.
     1/3: $2\clear_prefetched_high_word[0:0]
     2/3: $1\clear_prefetched_high_word[0:0]
     3/3: $0\clear_prefetched_high_word[0:0]
Creating decoders for process `$paramod$19e4048633bf612a4d25d3d9aeb98945c5854356\picorv32.$proc$picorv32.v:1288$1346'.
     1/1: $0\clear_prefetched_high_word_q[0:0]
Creating decoders for process `$paramod$19e4048633bf612a4d25d3d9aeb98945c5854356\picorv32.$proc$picorv32.v:1244$1324'.
     1/4: $1\alu_out[31:0]
     2/4: $1\alu_out_0[0:0]
     3/4: $0\alu_out[31:0]
     4/4: $0\alu_out_0[0:0]
Creating decoders for process `$paramod$19e4048633bf612a4d25d3d9aeb98945c5854356\picorv32.$proc$picorv32.v:1181$1312'.
     1/9: $8\dbg_ascii_state[127:0]
     2/9: $7\dbg_ascii_state[127:0]
     3/9: $6\dbg_ascii_state[127:0]
     4/9: $5\dbg_ascii_state[127:0]
     5/9: $4\dbg_ascii_state[127:0]
     6/9: $3\dbg_ascii_state[127:0]
     7/9: $2\dbg_ascii_state[127:0]
     8/9: $1\dbg_ascii_state[127:0]
     9/9: $0\dbg_ascii_state[127:0]
Creating decoders for process `$paramod$19e4048633bf612a4d25d3d9aeb98945c5854356\picorv32.$proc$picorv32.v:856$1051'.
     1/80: $0\decoded_rs1[4:0] [4]
     2/80: $0\decoded_imm_j[31:0] [10]
     3/80: $0\decoded_imm_j[31:0] [7]
     4/80: $0\decoded_imm_j[31:0] [6]
     5/80: $0\decoded_imm_j[31:0] [3:1]
     6/80: $0\decoded_imm_j[31:0] [5]
     7/80: $0\decoded_imm_j[31:0] [9:8]
     8/80: $0\decoded_imm_j[31:0] [31:20]
     9/80: $0\decoded_imm_j[31:0] [4]
    10/80: $0\decoded_imm_j[31:0] [11]
    11/80: $0\decoded_imm_j[31:0] [0]
    12/80: $0\decoded_rs1[4:0] [3:0]
    13/80: $0\is_lbu_lhu_lw[0:0]
    14/80: $0\is_sltiu_bltu_sltu[0:0]
    15/80: $0\is_slti_blt_slt[0:0]
    16/80: $0\is_lui_auipc_jal_jalr_addi_add_sub[0:0]
    17/80: $0\is_lui_auipc_jal[0:0]
    18/80: $0\is_alu_reg_reg[0:0]
    19/80: $0\is_alu_reg_imm[0:0]
    20/80: $0\is_beq_bne_blt_bge_bltu_bgeu[0:0]
    21/80: $0\is_sll_srl_sra[0:0]
    22/80: $0\is_sb_sh_sw[0:0]
    23/80: $0\is_jalr_addi_slti_sltiu_xori_ori_andi[0:0]
    24/80: $0\is_slli_srli_srai[0:0]
    25/80: $0\is_lb_lh_lw_lbu_lhu[0:0]
    26/80: $0\compressed_instr[0:0]
    27/80: $0\is_compare[0:0]
    28/80: $0\decoded_imm[31:0]
    29/80: $0\decoded_rs2[4:0]
    30/80: $0\decoded_imm_j[31:0] [19:12]
    31/80: $0\decoded_rd[4:0]
    32/80: $0\instr_timer[0:0]
    33/80: $0\instr_waitirq[0:0]
    34/80: $0\instr_maskirq[0:0]
    35/80: $0\instr_retirq[0:0]
    36/80: $0\instr_setq[0:0]
    37/80: $0\instr_getq[0:0]
    38/80: $0\instr_ecall_ebreak[0:0]
    39/80: $0\instr_rdinstrh[0:0]
    40/80: $0\instr_rdinstr[0:0]
    41/80: $0\instr_rdcycleh[0:0]
    42/80: $0\instr_rdcycle[0:0]
    43/80: $0\instr_and[0:0]
    44/80: $0\instr_or[0:0]
    45/80: $0\instr_sra[0:0]
    46/80: $0\instr_srl[0:0]
    47/80: $0\instr_xor[0:0]
    48/80: $0\instr_sltu[0:0]
    49/80: $0\instr_slt[0:0]
    50/80: $0\instr_sll[0:0]
    51/80: $0\instr_sub[0:0]
    52/80: $0\instr_add[0:0]
    53/80: $0\instr_srai[0:0]
    54/80: $0\instr_srli[0:0]
    55/80: $0\instr_slli[0:0]
    56/80: $0\instr_andi[0:0]
    57/80: $0\instr_ori[0:0]
    58/80: $0\instr_xori[0:0]
    59/80: $0\instr_sltiu[0:0]
    60/80: $0\instr_slti[0:0]
    61/80: $0\instr_addi[0:0]
    62/80: $0\instr_sw[0:0]
    63/80: $0\instr_sh[0:0]
    64/80: $0\instr_sb[0:0]
    65/80: $0\instr_lhu[0:0]
    66/80: $0\instr_lbu[0:0]
    67/80: $0\instr_lw[0:0]
    68/80: $0\instr_lh[0:0]
    69/80: $0\instr_lb[0:0]
    70/80: $0\instr_bgeu[0:0]
    71/80: $0\instr_bltu[0:0]
    72/80: $0\instr_bge[0:0]
    73/80: $0\instr_blt[0:0]
    74/80: $0\instr_bne[0:0]
    75/80: $0\instr_beq[0:0]
    76/80: $0\instr_jalr[0:0]
    77/80: $0\instr_jal[0:0]
    78/80: $0\instr_auipc[0:0]
    79/80: $0\instr_lui[0:0]
    80/80: $0\pcpi_insn[31:0]
Creating decoders for process `$paramod$19e4048633bf612a4d25d3d9aeb98945c5854356\picorv32.$proc$picorv32.v:807$1049'.
     1/19: $3\dbg_insn_opcode[31:0]
     2/19: $2\dbg_insn_rd[4:0]
     3/19: $2\dbg_insn_rs2[4:0]
     4/19: $2\dbg_insn_rs1[4:0]
     5/19: $2\dbg_insn_opcode[31:0]
     6/19: $2\dbg_insn_imm[31:0]
     7/19: $2\dbg_ascii_instr[63:0]
     8/19: $1\dbg_insn_rd[4:0]
     9/19: $1\dbg_insn_rs2[4:0]
    10/19: $1\dbg_insn_rs1[4:0]
    11/19: $1\dbg_insn_imm[31:0]
    12/19: $1\dbg_ascii_instr[63:0]
    13/19: $1\dbg_insn_opcode[31:0]
    14/19: $0\dbg_insn_rd[4:0]
    15/19: $0\dbg_insn_rs2[4:0]
    16/19: $0\dbg_insn_rs1[4:0]
    17/19: $0\dbg_insn_imm[31:0]
    18/19: $0\dbg_ascii_instr[63:0]
    19/19: $0\dbg_insn_opcode[31:0]
Creating decoders for process `$paramod$19e4048633bf612a4d25d3d9aeb98945c5854356\picorv32.$proc$picorv32.v:776$1045'.
     1/15: $0\dbg_next[0:0]
     2/15: $0\q_insn_rd[4:0]
     3/15: $0\q_insn_rs2[4:0]
     4/15: $0\q_insn_rs1[4:0]
     5/15: $0\q_insn_opcode[31:0]
     6/15: $0\q_insn_imm[31:0]
     7/15: $0\q_ascii_instr[63:0]
     8/15: $0\cached_insn_rd[4:0]
     9/15: $0\cached_insn_rs2[4:0]
    10/15: $0\cached_insn_rs1[4:0]
    11/15: $0\cached_insn_opcode[31:0]
    12/15: $0\cached_insn_imm[31:0]
    13/15: $0\cached_ascii_instr[63:0]
    14/15: $0\dbg_valid_insn[0:0]
    15/15: $0\dbg_insn_addr[31:0]
Creating decoders for process `$paramod$19e4048633bf612a4d25d3d9aeb98945c5854356\picorv32.$proc$picorv32.v:700$1044'.
     1/48: $47\new_ascii_instr[63:0]
     2/48: $46\new_ascii_instr[63:0]
     3/48: $45\new_ascii_instr[63:0]
     4/48: $44\new_ascii_instr[63:0]
     5/48: $43\new_ascii_instr[63:0]
     6/48: $42\new_ascii_instr[63:0]
     7/48: $41\new_ascii_instr[63:0]
     8/48: $40\new_ascii_instr[63:0]
     9/48: $39\new_ascii_instr[63:0]
    10/48: $38\new_ascii_instr[63:0]
    11/48: $37\new_ascii_instr[63:0]
    12/48: $36\new_ascii_instr[63:0]
    13/48: $35\new_ascii_instr[63:0]
    14/48: $34\new_ascii_instr[63:0]
    15/48: $33\new_ascii_instr[63:0]
    16/48: $32\new_ascii_instr[63:0]
    17/48: $31\new_ascii_instr[63:0]
    18/48: $30\new_ascii_instr[63:0]
    19/48: $29\new_ascii_instr[63:0]
    20/48: $28\new_ascii_instr[63:0]
    21/48: $27\new_ascii_instr[63:0]
    22/48: $26\new_ascii_instr[63:0]
    23/48: $25\new_ascii_instr[63:0]
    24/48: $24\new_ascii_instr[63:0]
    25/48: $23\new_ascii_instr[63:0]
    26/48: $22\new_ascii_instr[63:0]
    27/48: $21\new_ascii_instr[63:0]
    28/48: $20\new_ascii_instr[63:0]
    29/48: $19\new_ascii_instr[63:0]
    30/48: $18\new_ascii_instr[63:0]
    31/48: $17\new_ascii_instr[63:0]
    32/48: $16\new_ascii_instr[63:0]
    33/48: $15\new_ascii_instr[63:0]
    34/48: $14\new_ascii_instr[63:0]
    35/48: $13\new_ascii_instr[63:0]
    36/48: $12\new_ascii_instr[63:0]
    37/48: $11\new_ascii_instr[63:0]
    38/48: $10\new_ascii_instr[63:0]
    39/48: $9\new_ascii_instr[63:0]
    40/48: $8\new_ascii_instr[63:0]
    41/48: $7\new_ascii_instr[63:0]
    42/48: $6\new_ascii_instr[63:0]
    43/48: $5\new_ascii_instr[63:0]
    44/48: $4\new_ascii_instr[63:0]
    45/48: $3\new_ascii_instr[63:0]
    46/48: $2\new_ascii_instr[63:0]
    47/48: $1\new_ascii_instr[63:0]
    48/48: $0\new_ascii_instr[63:0]
Creating decoders for process `$paramod$19e4048633bf612a4d25d3d9aeb98945c5854356\picorv32.$proc$picorv32.v:565$1020'.
     1/9: $0\mem_16bit_buffer[15:0]
     2/9: $0\prefetched_high_word[0:0]
     3/9: $0\mem_la_secondword[0:0]
     4/9: $0\mem_state[1:0]
     5/9: $0\mem_wstrb[3:0]
     6/9: $0\mem_wdata[31:0]
     7/9: $0\mem_addr[31:0]
     8/9: $0\mem_instr[0:0]
     9/9: $0\mem_valid[0:0]
Creating decoders for process `$paramod$19e4048633bf612a4d25d3d9aeb98945c5854356\picorv32.$proc$picorv32.v:1225$1557'.
     1/6: $0\alu_shr[31:0]
     2/6: $0\alu_shl[31:0]
     3/6: $0\alu_ltu[0:0]
     4/6: $0\alu_lts[0:0]
     5/6: $0\alu_eq[0:0]
     6/6: $0\alu_add_sub[31:0]
Creating decoders for process `$paramod$19e4048633bf612a4d25d3d9aeb98945c5854356\picorv32.$proc$picorv32.v:430$980'.
     1/9: $0\mem_rdata_q[31:0] [31]
     2/9: $0\mem_rdata_q[31:0] [7]
     3/9: $0\mem_rdata_q[31:0] [24:20]
     4/9: $0\mem_rdata_q[31:0] [19:15]
     5/9: $0\mem_rdata_q[31:0] [6:0]
     6/9: $0\mem_rdata_q[31:0] [14:12]
     7/9: $0\mem_rdata_q[31:0] [11:8]
     8/9: $0\mem_rdata_q[31:0] [30:25]
     9/9: $0\next_insn_opcode[31:0]
Creating decoders for process `$paramod$19e4048633bf612a4d25d3d9aeb98945c5854356\picorv32.$proc$picorv32.v:401$977'.
     1/8: $3\mem_rdata_word[31:0]
     2/8: $2\mem_rdata_word[31:0]
     3/8: $1\mem_rdata_word[31:0]
     4/8: $1\mem_la_wstrb[3:0]
     5/8: $1\mem_la_wdata[31:0]
     6/8: $0\mem_rdata_word[31:0]
     7/8: $0\mem_la_wstrb[3:0]
     8/8: $0\mem_la_wdata[31:0]
Creating decoders for process `$paramod$19e4048633bf612a4d25d3d9aeb98945c5854356\picorv32.$proc$picorv32.v:390$972'.
     1/2: $0\last_mem_valid[0:0]
     2/2: $0\mem_la_firstword_reg[0:0]
Creating decoders for process `$paramod$19e4048633bf612a4d25d3d9aeb98945c5854356\picorv32.$proc$picorv32.v:325$898'.
     1/6: $1\pcpi_int_rd[31:0]
     2/6: $1\pcpi_int_wr[0:0]
     3/6: $0\pcpi_int_rd[31:0]
     4/6: $0\pcpi_int_wr[0:0]
     5/6: $0\pcpi_int_ready[0:0]
     6/6: $0\pcpi_int_wait[0:0]
Creating decoders for process `\picorv32_pcpi_mul.$proc$picorv32.v:2302$771'.
     1/3: $0\pcpi_ready[0:0]
     2/3: $0\pcpi_wr[0:0]
     3/3: $0\pcpi_rd[31:0]
Creating decoders for process `\picorv32_pcpi_mul.$proc$picorv32.v:2268$766'.
     1/7: $0\mul_finish[0:0]
     2/7: $0\mul_waiting[0:0]
     3/7: $0\mul_counter[6:0]
     4/7: $0\rdx[63:0]
     5/7: $0\rd[63:0]
     6/7: $0\rs2[63:0]
     7/7: $0\rs1[63:0]
Creating decoders for process `\picorv32_pcpi_mul.$proc$picorv32.v:2244$728'.
     1/27: $1\next_rdx[63:0]
     2/27: $1\j[31:0]
     3/27: { $1\next_rdt[63:0] [63] $1\next_rd[63:0] [63:60] }
     4/27: { $1\next_rdt[63:0] [59] $1\next_rd[63:0] [59:56] }
     5/27: { $1\next_rdt[63:0] [55] $1\next_rd[63:0] [55:52] }
     6/27: { $1\next_rdt[63:0] [51] $1\next_rd[63:0] [51:48] }
     7/27: { $1\next_rdt[63:0] [47] $1\next_rd[63:0] [47:44] }
     8/27: { $1\next_rdt[63:0] [43] $1\next_rd[63:0] [43:40] }
     9/27: { $1\next_rdt[63:0] [39] $1\next_rd[63:0] [39:36] }
    10/27: { $1\next_rdt[63:0] [35] $1\next_rd[63:0] [35:32] }
    11/27: { $1\next_rdt[63:0] [31] $1\next_rd[63:0] [31:28] }
    12/27: { $1\next_rdt[63:0] [27] $1\next_rd[63:0] [27:24] }
    13/27: { $1\next_rdt[63:0] [23] $1\next_rd[63:0] [23:20] }
    14/27: { $1\next_rdt[63:0] [19] $1\next_rd[63:0] [19:16] }
    15/27: { $1\next_rdt[63:0] [15] $1\next_rd[63:0] [15:12] }
    16/27: { $1\next_rdt[63:0] [11] $1\next_rd[63:0] [11:8] }
    17/27: { $1\next_rdt[63:0] [7] $1\next_rd[63:0] [7:4] }
    18/27: { $1\next_rdt[63:0] [3] $1\next_rd[63:0] [3:0] }
    19/27: { $1\next_rdt[63:0] [62:60] $1\next_rdt[63:0] [58:56] $1\next_rdt[63:0] [54:52] $1\next_rdt[63:0] [50:48] $1\next_rdt[63:0] [46:44] $1\next_rdt[63:0] [42:40] $1\next_rdt[63:0] [38:36] $1\next_rdt[63:0] [34:32] $1\next_rdt[63:0] [30:28] $1\next_rdt[63:0] [26:24] $1\next_rdt[63:0] [22:20] $1\next_rdt[63:0] [18:16] $1\next_rdt[63:0] [14:12] $1\next_rdt[63:0] [10:8] $1\next_rdt[63:0] [6:4] $1\next_rdt[63:0] [2:0] }
    20/27: $0\i[31:0]
    21/27: $0\next_rs2[63:0]
    22/27: $0\next_rs1[63:0]
    23/27: $0\j[31:0]
    24/27: $0\next_rdt[63:0]
    25/27: $0\next_rdx[63:0]
    26/27: $0\next_rd[63:0]
    27/27: $0\this_rs2[63:0]
Creating decoders for process `\picorv32_pcpi_mul.$proc$picorv32.v:2216$722'.
     1/6: $0\pcpi_wait_q[0:0]
     2/6: $0\pcpi_wait[0:0]
     3/6: $0\instr_mulhu[0:0]
     4/6: $0\instr_mulhsu[0:0]
     5/6: $0\instr_mulh[0:0]
     6/6: $0\instr_mul[0:0]

3.3.6. Executing PROC_DLATCH pass (convert process syncs to latches).
No latch inferred for signal `$paramod$19e4048633bf612a4d25d3d9aeb98945c5854356\picorv32.\cpuregs_rs1' from process `$paramod$19e4048633bf612a4d25d3d9aeb98945c5854356\picorv32.$proc$picorv32.v:1343$1370'.
No latch inferred for signal `$paramod$19e4048633bf612a4d25d3d9aeb98945c5854356\picorv32.\cpuregs_rs2' from process `$paramod$19e4048633bf612a4d25d3d9aeb98945c5854356\picorv32.$proc$picorv32.v:1343$1370'.
No latch inferred for signal `$paramod$19e4048633bf612a4d25d3d9aeb98945c5854356\picorv32.\decoded_rs' from process `$paramod$19e4048633bf612a4d25d3d9aeb98945c5854356\picorv32.$proc$picorv32.v:1343$1370'.
No latch inferred for signal `$paramod$19e4048633bf612a4d25d3d9aeb98945c5854356\picorv32.\cpuregs_write' from process `$paramod$19e4048633bf612a4d25d3d9aeb98945c5854356\picorv32.$proc$picorv32.v:1304$1352'.
No latch inferred for signal `$paramod$19e4048633bf612a4d25d3d9aeb98945c5854356\picorv32.\cpuregs_wrdata' from process `$paramod$19e4048633bf612a4d25d3d9aeb98945c5854356\picorv32.$proc$picorv32.v:1304$1352'.
No latch inferred for signal `$paramod$19e4048633bf612a4d25d3d9aeb98945c5854356\picorv32.\clear_prefetched_high_word' from process `$paramod$19e4048633bf612a4d25d3d9aeb98945c5854356\picorv32.$proc$picorv32.v:1290$1347'.
No latch inferred for signal `$paramod$19e4048633bf612a4d25d3d9aeb98945c5854356\picorv32.\alu_out' from process `$paramod$19e4048633bf612a4d25d3d9aeb98945c5854356\picorv32.$proc$picorv32.v:1244$1324'.
No latch inferred for signal `$paramod$19e4048633bf612a4d25d3d9aeb98945c5854356\picorv32.\alu_out_0' from process `$paramod$19e4048633bf612a4d25d3d9aeb98945c5854356\picorv32.$proc$picorv32.v:1244$1324'.
No latch inferred for signal `$paramod$19e4048633bf612a4d25d3d9aeb98945c5854356\picorv32.\dbg_ascii_state' from process `$paramod$19e4048633bf612a4d25d3d9aeb98945c5854356\picorv32.$proc$picorv32.v:1181$1312'.
No latch inferred for signal `$paramod$19e4048633bf612a4d25d3d9aeb98945c5854356\picorv32.\dbg_insn_opcode' from process `$paramod$19e4048633bf612a4d25d3d9aeb98945c5854356\picorv32.$proc$picorv32.v:807$1049'.
No latch inferred for signal `$paramod$19e4048633bf612a4d25d3d9aeb98945c5854356\picorv32.\dbg_ascii_instr' from process `$paramod$19e4048633bf612a4d25d3d9aeb98945c5854356\picorv32.$proc$picorv32.v:807$1049'.
No latch inferred for signal `$paramod$19e4048633bf612a4d25d3d9aeb98945c5854356\picorv32.\dbg_insn_imm' from process `$paramod$19e4048633bf612a4d25d3d9aeb98945c5854356\picorv32.$proc$picorv32.v:807$1049'.
No latch inferred for signal `$paramod$19e4048633bf612a4d25d3d9aeb98945c5854356\picorv32.\dbg_insn_rs1' from process `$paramod$19e4048633bf612a4d25d3d9aeb98945c5854356\picorv32.$proc$picorv32.v:807$1049'.
No latch inferred for signal `$paramod$19e4048633bf612a4d25d3d9aeb98945c5854356\picorv32.\dbg_insn_rs2' from process `$paramod$19e4048633bf612a4d25d3d9aeb98945c5854356\picorv32.$proc$picorv32.v:807$1049'.
No latch inferred for signal `$paramod$19e4048633bf612a4d25d3d9aeb98945c5854356\picorv32.\dbg_insn_rd' from process `$paramod$19e4048633bf612a4d25d3d9aeb98945c5854356\picorv32.$proc$picorv32.v:807$1049'.
No latch inferred for signal `$paramod$19e4048633bf612a4d25d3d9aeb98945c5854356\picorv32.\new_ascii_instr' from process `$paramod$19e4048633bf612a4d25d3d9aeb98945c5854356\picorv32.$proc$picorv32.v:700$1044'.
No latch inferred for signal `$paramod$19e4048633bf612a4d25d3d9aeb98945c5854356\picorv32.\mem_la_wdata' from process `$paramod$19e4048633bf612a4d25d3d9aeb98945c5854356\picorv32.$proc$picorv32.v:401$977'.
No latch inferred for signal `$paramod$19e4048633bf612a4d25d3d9aeb98945c5854356\picorv32.\mem_la_wstrb' from process `$paramod$19e4048633bf612a4d25d3d9aeb98945c5854356\picorv32.$proc$picorv32.v:401$977'.
No latch inferred for signal `$paramod$19e4048633bf612a4d25d3d9aeb98945c5854356\picorv32.\mem_rdata_word' from process `$paramod$19e4048633bf612a4d25d3d9aeb98945c5854356\picorv32.$proc$picorv32.v:401$977'.
No latch inferred for signal `$paramod$19e4048633bf612a4d25d3d9aeb98945c5854356\picorv32.\pcpi_int_wr' from process `$paramod$19e4048633bf612a4d25d3d9aeb98945c5854356\picorv32.$proc$picorv32.v:325$898'.
No latch inferred for signal `$paramod$19e4048633bf612a4d25d3d9aeb98945c5854356\picorv32.\pcpi_int_rd' from process `$paramod$19e4048633bf612a4d25d3d9aeb98945c5854356\picorv32.$proc$picorv32.v:325$898'.
No latch inferred for signal `$paramod$19e4048633bf612a4d25d3d9aeb98945c5854356\picorv32.\pcpi_int_wait' from process `$paramod$19e4048633bf612a4d25d3d9aeb98945c5854356\picorv32.$proc$picorv32.v:325$898'.
No latch inferred for signal `$paramod$19e4048633bf612a4d25d3d9aeb98945c5854356\picorv32.\pcpi_int_ready' from process `$paramod$19e4048633bf612a4d25d3d9aeb98945c5854356\picorv32.$proc$picorv32.v:325$898'.
No latch inferred for signal `\picorv32_pcpi_mul.\i' from process `\picorv32_pcpi_mul.$proc$picorv32.v:2244$728'.
No latch inferred for signal `\picorv32_pcpi_mul.\next_rs1' from process `\picorv32_pcpi_mul.$proc$picorv32.v:2244$728'.
No latch inferred for signal `\picorv32_pcpi_mul.\next_rs2' from process `\picorv32_pcpi_mul.$proc$picorv32.v:2244$728'.
No latch inferred for signal `\picorv32_pcpi_mul.\this_rs2' from process `\picorv32_pcpi_mul.$proc$picorv32.v:2244$728'.
No latch inferred for signal `\picorv32_pcpi_mul.\next_rd' from process `\picorv32_pcpi_mul.$proc$picorv32.v:2244$728'.
No latch inferred for signal `\picorv32_pcpi_mul.\next_rdx' from process `\picorv32_pcpi_mul.$proc$picorv32.v:2244$728'.
No latch inferred for signal `\picorv32_pcpi_mul.\next_rdt' from process `\picorv32_pcpi_mul.$proc$picorv32.v:2244$728'.
No latch inferred for signal `\picorv32_pcpi_mul.\j' from process `\picorv32_pcpi_mul.$proc$picorv32.v:2244$728'.

3.3.7. Executing PROC_DFF pass (convert process syncs to FFs).
Creating register for signal `\cd_sync.\timer' using process `\cd_sync.$group_2'.
  created $dff cell `$procdff$4546' with positive edge clock.
Creating register for signal `\cd_sync.\ready' using process `\cd_sync.$group_1'.
  created $dff cell `$procdff$4547' with positive edge clock.
Creating register for signal `\U$$2.\phase_step' using process `\U$$2.$group_10'.
  created $dff cell `$procdff$4548' with positive edge clock.
Creating register for signal `\U$$2.\nco_ctrl__enable' using process `\U$$2.$group_9'.
  created $dff cell `$procdff$4549' with positive edge clock.
Creating register for signal `\U$$2.\led' using process `\U$$2.$group_8'.
  created $dff cell `$procdff$4550' with positive edge clock.
Creating register for signal `\U$$2.\mem_ready' using process `\U$$2.$group_1'.
  created $dff cell `$procdff$4551' with positive edge clock.
Creating register for signal `\U$$1.\acc' using process `\U$$1.$group_0'.
  created $dff cell `$procdff$4552' with positive edge clock.
Creating register for signal `\U$$0.\phase_acc' using process `\U$$0.$group_3'.
  created $dff cell `$procdff$4553' with positive edge clock.
Creating register for signal `$paramod$19e4048633bf612a4d25d3d9aeb98945c5854356\picorv32.\trap' using process `$paramod$19e4048633bf612a4d25d3d9aeb98945c5854356\picorv32.$proc$picorv32.v:1397$1386'.
  created $dff cell `$procdff$4554' with positive edge clock.
Creating register for signal `$paramod$19e4048633bf612a4d25d3d9aeb98945c5854356\picorv32.\pcpi_valid' using process `$paramod$19e4048633bf612a4d25d3d9aeb98945c5854356\picorv32.$proc$picorv32.v:1397$1386'.
  created $dff cell `$procdff$4555' with positive edge clock.
Creating register for signal `$paramod$19e4048633bf612a4d25d3d9aeb98945c5854356\picorv32.\eoi' using process `$paramod$19e4048633bf612a4d25d3d9aeb98945c5854356\picorv32.$proc$picorv32.v:1397$1386'.
  created $dff cell `$procdff$4556' with positive edge clock.
Creating register for signal `$paramod$19e4048633bf612a4d25d3d9aeb98945c5854356\picorv32.\trace_valid' using process `$paramod$19e4048633bf612a4d25d3d9aeb98945c5854356\picorv32.$proc$picorv32.v:1397$1386'.
  created $dff cell `$procdff$4557' with positive edge clock.
Creating register for signal `$paramod$19e4048633bf612a4d25d3d9aeb98945c5854356\picorv32.\trace_data' using process `$paramod$19e4048633bf612a4d25d3d9aeb98945c5854356\picorv32.$proc$picorv32.v:1397$1386'.
  created $dff cell `$procdff$4558' with positive edge clock.
Creating register for signal `$paramod$19e4048633bf612a4d25d3d9aeb98945c5854356\picorv32.\count_cycle' using process `$paramod$19e4048633bf612a4d25d3d9aeb98945c5854356\picorv32.$proc$picorv32.v:1397$1386'.
  created $dff cell `$procdff$4559' with positive edge clock.
Creating register for signal `$paramod$19e4048633bf612a4d25d3d9aeb98945c5854356\picorv32.\count_instr' using process `$paramod$19e4048633bf612a4d25d3d9aeb98945c5854356\picorv32.$proc$picorv32.v:1397$1386'.
  created $dff cell `$procdff$4560' with positive edge clock.
Creating register for signal `$paramod$19e4048633bf612a4d25d3d9aeb98945c5854356\picorv32.\reg_pc' using process `$paramod$19e4048633bf612a4d25d3d9aeb98945c5854356\picorv32.$proc$picorv32.v:1397$1386'.
  created $dff cell `$procdff$4561' with positive edge clock.
Creating register for signal `$paramod$19e4048633bf612a4d25d3d9aeb98945c5854356\picorv32.\reg_next_pc' using process `$paramod$19e4048633bf612a4d25d3d9aeb98945c5854356\picorv32.$proc$picorv32.v:1397$1386'.
  created $dff cell `$procdff$4562' with positive edge clock.
Creating register for signal `$paramod$19e4048633bf612a4d25d3d9aeb98945c5854356\picorv32.\reg_op1' using process `$paramod$19e4048633bf612a4d25d3d9aeb98945c5854356\picorv32.$proc$picorv32.v:1397$1386'.
  created $dff cell `$procdff$4563' with positive edge clock.
Creating register for signal `$paramod$19e4048633bf612a4d25d3d9aeb98945c5854356\picorv32.\reg_op2' using process `$paramod$19e4048633bf612a4d25d3d9aeb98945c5854356\picorv32.$proc$picorv32.v:1397$1386'.
  created $dff cell `$procdff$4564' with positive edge clock.
Creating register for signal `$paramod$19e4048633bf612a4d25d3d9aeb98945c5854356\picorv32.\reg_out' using process `$paramod$19e4048633bf612a4d25d3d9aeb98945c5854356\picorv32.$proc$picorv32.v:1397$1386'.
  created $dff cell `$procdff$4565' with positive edge clock.
Creating register for signal `$paramod$19e4048633bf612a4d25d3d9aeb98945c5854356\picorv32.\reg_sh' using process `$paramod$19e4048633bf612a4d25d3d9aeb98945c5854356\picorv32.$proc$picorv32.v:1397$1386'.
  created $dff cell `$procdff$4566' with positive edge clock.
Creating register for signal `$paramod$19e4048633bf612a4d25d3d9aeb98945c5854356\picorv32.\irq_delay' using process `$paramod$19e4048633bf612a4d25d3d9aeb98945c5854356\picorv32.$proc$picorv32.v:1397$1386'.
  created $dff cell `$procdff$4567' with positive edge clock.
Creating register for signal `$paramod$19e4048633bf612a4d25d3d9aeb98945c5854356\picorv32.\irq_active' using process `$paramod$19e4048633bf612a4d25d3d9aeb98945c5854356\picorv32.$proc$picorv32.v:1397$1386'.
  created $dff cell `$procdff$4568' with positive edge clock.
Creating register for signal `$paramod$19e4048633bf612a4d25d3d9aeb98945c5854356\picorv32.\irq_mask' using process `$paramod$19e4048633bf612a4d25d3d9aeb98945c5854356\picorv32.$proc$picorv32.v:1397$1386'.
  created $dff cell `$procdff$4569' with positive edge clock.
Creating register for signal `$paramod$19e4048633bf612a4d25d3d9aeb98945c5854356\picorv32.\irq_pending' using process `$paramod$19e4048633bf612a4d25d3d9aeb98945c5854356\picorv32.$proc$picorv32.v:1397$1386'.
  created $dff cell `$procdff$4570' with positive edge clock.
Creating register for signal `$paramod$19e4048633bf612a4d25d3d9aeb98945c5854356\picorv32.\timer' using process `$paramod$19e4048633bf612a4d25d3d9aeb98945c5854356\picorv32.$proc$picorv32.v:1397$1386'.
  created $dff cell `$procdff$4571' with positive edge clock.
Creating register for signal `$paramod$19e4048633bf612a4d25d3d9aeb98945c5854356\picorv32.\mem_wordsize' using process `$paramod$19e4048633bf612a4d25d3d9aeb98945c5854356\picorv32.$proc$picorv32.v:1397$1386'.
  created $dff cell `$procdff$4572' with positive edge clock.
Creating register for signal `$paramod$19e4048633bf612a4d25d3d9aeb98945c5854356\picorv32.\mem_do_prefetch' using process `$paramod$19e4048633bf612a4d25d3d9aeb98945c5854356\picorv32.$proc$picorv32.v:1397$1386'.
  created $dff cell `$procdff$4573' with positive edge clock.
Creating register for signal `$paramod$19e4048633bf612a4d25d3d9aeb98945c5854356\picorv32.\mem_do_rinst' using process `$paramod$19e4048633bf612a4d25d3d9aeb98945c5854356\picorv32.$proc$picorv32.v:1397$1386'.
  created $dff cell `$procdff$4574' with positive edge clock.
Creating register for signal `$paramod$19e4048633bf612a4d25d3d9aeb98945c5854356\picorv32.\mem_do_rdata' using process `$paramod$19e4048633bf612a4d25d3d9aeb98945c5854356\picorv32.$proc$picorv32.v:1397$1386'.
  created $dff cell `$procdff$4575' with positive edge clock.
Creating register for signal `$paramod$19e4048633bf612a4d25d3d9aeb98945c5854356\picorv32.\mem_do_wdata' using process `$paramod$19e4048633bf612a4d25d3d9aeb98945c5854356\picorv32.$proc$picorv32.v:1397$1386'.
  created $dff cell `$procdff$4576' with positive edge clock.
Creating register for signal `$paramod$19e4048633bf612a4d25d3d9aeb98945c5854356\picorv32.\decoder_trigger' using process `$paramod$19e4048633bf612a4d25d3d9aeb98945c5854356\picorv32.$proc$picorv32.v:1397$1386'.
  created $dff cell `$procdff$4577' with positive edge clock.
Creating register for signal `$paramod$19e4048633bf612a4d25d3d9aeb98945c5854356\picorv32.\decoder_trigger_q' using process `$paramod$19e4048633bf612a4d25d3d9aeb98945c5854356\picorv32.$proc$picorv32.v:1397$1386'.
  created $dff cell `$procdff$4578' with positive edge clock.
Creating register for signal `$paramod$19e4048633bf612a4d25d3d9aeb98945c5854356\picorv32.\decoder_pseudo_trigger' using process `$paramod$19e4048633bf612a4d25d3d9aeb98945c5854356\picorv32.$proc$picorv32.v:1397$1386'.
  created $dff cell `$procdff$4579' with positive edge clock.
Creating register for signal `$paramod$19e4048633bf612a4d25d3d9aeb98945c5854356\picorv32.\decoder_pseudo_trigger_q' using process `$paramod$19e4048633bf612a4d25d3d9aeb98945c5854356\picorv32.$proc$picorv32.v:1397$1386'.
  created $dff cell `$procdff$4580' with positive edge clock.
Creating register for signal `$paramod$19e4048633bf612a4d25d3d9aeb98945c5854356\picorv32.\dbg_rs1val' using process `$paramod$19e4048633bf612a4d25d3d9aeb98945c5854356\picorv32.$proc$picorv32.v:1397$1386'.
  created $dff cell `$procdff$4581' with positive edge clock.
Creating register for signal `$paramod$19e4048633bf612a4d25d3d9aeb98945c5854356\picorv32.\dbg_rs2val' using process `$paramod$19e4048633bf612a4d25d3d9aeb98945c5854356\picorv32.$proc$picorv32.v:1397$1386'.
  created $dff cell `$procdff$4582' with positive edge clock.
Creating register for signal `$paramod$19e4048633bf612a4d25d3d9aeb98945c5854356\picorv32.\dbg_rs1val_valid' using process `$paramod$19e4048633bf612a4d25d3d9aeb98945c5854356\picorv32.$proc$picorv32.v:1397$1386'.
  created $dff cell `$procdff$4583' with positive edge clock.
Creating register for signal `$paramod$19e4048633bf612a4d25d3d9aeb98945c5854356\picorv32.\dbg_rs2val_valid' using process `$paramod$19e4048633bf612a4d25d3d9aeb98945c5854356\picorv32.$proc$picorv32.v:1397$1386'.
  created $dff cell `$procdff$4584' with positive edge clock.
Creating register for signal `$paramod$19e4048633bf612a4d25d3d9aeb98945c5854356\picorv32.\cpu_state' using process `$paramod$19e4048633bf612a4d25d3d9aeb98945c5854356\picorv32.$proc$picorv32.v:1397$1386'.
  created $dff cell `$procdff$4585' with positive edge clock.
Creating register for signal `$paramod$19e4048633bf612a4d25d3d9aeb98945c5854356\picorv32.\irq_state' using process `$paramod$19e4048633bf612a4d25d3d9aeb98945c5854356\picorv32.$proc$picorv32.v:1397$1386'.
  created $dff cell `$procdff$4586' with positive edge clock.
Creating register for signal `$paramod$19e4048633bf612a4d25d3d9aeb98945c5854356\picorv32.\set_mem_do_rinst' using process `$paramod$19e4048633bf612a4d25d3d9aeb98945c5854356\picorv32.$proc$picorv32.v:1397$1386'.
  created $dff cell `$procdff$4587' with positive edge clock.
Creating register for signal `$paramod$19e4048633bf612a4d25d3d9aeb98945c5854356\picorv32.\set_mem_do_rdata' using process `$paramod$19e4048633bf612a4d25d3d9aeb98945c5854356\picorv32.$proc$picorv32.v:1397$1386'.
  created $dff cell `$procdff$4588' with positive edge clock.
Creating register for signal `$paramod$19e4048633bf612a4d25d3d9aeb98945c5854356\picorv32.\set_mem_do_wdata' using process `$paramod$19e4048633bf612a4d25d3d9aeb98945c5854356\picorv32.$proc$picorv32.v:1397$1386'.
  created $dff cell `$procdff$4589' with positive edge clock.
Creating register for signal `$paramod$19e4048633bf612a4d25d3d9aeb98945c5854356\picorv32.\latched_store' using process `$paramod$19e4048633bf612a4d25d3d9aeb98945c5854356\picorv32.$proc$picorv32.v:1397$1386'.
  created $dff cell `$procdff$4590' with positive edge clock.
Creating register for signal `$paramod$19e4048633bf612a4d25d3d9aeb98945c5854356\picorv32.\latched_stalu' using process `$paramod$19e4048633bf612a4d25d3d9aeb98945c5854356\picorv32.$proc$picorv32.v:1397$1386'.
  created $dff cell `$procdff$4591' with positive edge clock.
Creating register for signal `$paramod$19e4048633bf612a4d25d3d9aeb98945c5854356\picorv32.\latched_branch' using process `$paramod$19e4048633bf612a4d25d3d9aeb98945c5854356\picorv32.$proc$picorv32.v:1397$1386'.
  created $dff cell `$procdff$4592' with positive edge clock.
Creating register for signal `$paramod$19e4048633bf612a4d25d3d9aeb98945c5854356\picorv32.\latched_compr' using process `$paramod$19e4048633bf612a4d25d3d9aeb98945c5854356\picorv32.$proc$picorv32.v:1397$1386'.
  created $dff cell `$procdff$4593' with positive edge clock.
Creating register for signal `$paramod$19e4048633bf612a4d25d3d9aeb98945c5854356\picorv32.\latched_trace' using process `$paramod$19e4048633bf612a4d25d3d9aeb98945c5854356\picorv32.$proc$picorv32.v:1397$1386'.
  created $dff cell `$procdff$4594' with positive edge clock.
Creating register for signal `$paramod$19e4048633bf612a4d25d3d9aeb98945c5854356\picorv32.\latched_is_lu' using process `$paramod$19e4048633bf612a4d25d3d9aeb98945c5854356\picorv32.$proc$picorv32.v:1397$1386'.
  created $dff cell `$procdff$4595' with positive edge clock.
Creating register for signal `$paramod$19e4048633bf612a4d25d3d9aeb98945c5854356\picorv32.\latched_is_lh' using process `$paramod$19e4048633bf612a4d25d3d9aeb98945c5854356\picorv32.$proc$picorv32.v:1397$1386'.
  created $dff cell `$procdff$4596' with positive edge clock.
Creating register for signal `$paramod$19e4048633bf612a4d25d3d9aeb98945c5854356\picorv32.\latched_is_lb' using process `$paramod$19e4048633bf612a4d25d3d9aeb98945c5854356\picorv32.$proc$picorv32.v:1397$1386'.
  created $dff cell `$procdff$4597' with positive edge clock.
Creating register for signal `$paramod$19e4048633bf612a4d25d3d9aeb98945c5854356\picorv32.\latched_rd' using process `$paramod$19e4048633bf612a4d25d3d9aeb98945c5854356\picorv32.$proc$picorv32.v:1397$1386'.
  created $dff cell `$procdff$4598' with positive edge clock.
Creating register for signal `$paramod$19e4048633bf612a4d25d3d9aeb98945c5854356\picorv32.\current_pc' using process `$paramod$19e4048633bf612a4d25d3d9aeb98945c5854356\picorv32.$proc$picorv32.v:1397$1386'.
  created $dff cell `$procdff$4599' with positive edge clock.
Creating register for signal `$paramod$19e4048633bf612a4d25d3d9aeb98945c5854356\picorv32.\pcpi_timeout' using process `$paramod$19e4048633bf612a4d25d3d9aeb98945c5854356\picorv32.$proc$picorv32.v:1397$1386'.
  created $dff cell `$procdff$4600' with positive edge clock.
Creating register for signal `$paramod$19e4048633bf612a4d25d3d9aeb98945c5854356\picorv32.\next_irq_pending' using process `$paramod$19e4048633bf612a4d25d3d9aeb98945c5854356\picorv32.$proc$picorv32.v:1397$1386'.
  created $dff cell `$procdff$4601' with positive edge clock.
Creating register for signal `$paramod$19e4048633bf612a4d25d3d9aeb98945c5854356\picorv32.\do_waitirq' using process `$paramod$19e4048633bf612a4d25d3d9aeb98945c5854356\picorv32.$proc$picorv32.v:1397$1386'.
  created $dff cell `$procdff$4602' with positive edge clock.
Creating register for signal `$paramod$19e4048633bf612a4d25d3d9aeb98945c5854356\picorv32.\alu_out_q' using process `$paramod$19e4048633bf612a4d25d3d9aeb98945c5854356\picorv32.$proc$picorv32.v:1397$1386'.
  created $dff cell `$procdff$4603' with positive edge clock.
Creating register for signal `$paramod$19e4048633bf612a4d25d3d9aeb98945c5854356\picorv32.\alu_out_0_q' using process `$paramod$19e4048633bf612a4d25d3d9aeb98945c5854356\picorv32.$proc$picorv32.v:1397$1386'.
  created $dff cell `$procdff$4604' with positive edge clock.
Creating register for signal `$paramod$19e4048633bf612a4d25d3d9aeb98945c5854356\picorv32.\alu_wait' using process `$paramod$19e4048633bf612a4d25d3d9aeb98945c5854356\picorv32.$proc$picorv32.v:1397$1386'.
  created $dff cell `$procdff$4605' with positive edge clock.
Creating register for signal `$paramod$19e4048633bf612a4d25d3d9aeb98945c5854356\picorv32.\alu_wait_2' using process `$paramod$19e4048633bf612a4d25d3d9aeb98945c5854356\picorv32.$proc$picorv32.v:1397$1386'.
  created $dff cell `$procdff$4606' with positive edge clock.
Creating register for signal `$paramod$19e4048633bf612a4d25d3d9aeb98945c5854356\picorv32.$memwr$\cpuregs$picorv32.v:1339$897_ADDR' using process `$paramod$19e4048633bf612a4d25d3d9aeb98945c5854356\picorv32.$proc$picorv32.v:1332$1364'.
  created $dff cell `$procdff$4607' with positive edge clock.
Creating register for signal `$paramod$19e4048633bf612a4d25d3d9aeb98945c5854356\picorv32.$memwr$\cpuregs$picorv32.v:1339$897_DATA' using process `$paramod$19e4048633bf612a4d25d3d9aeb98945c5854356\picorv32.$proc$picorv32.v:1332$1364'.
  created $dff cell `$procdff$4608' with positive edge clock.
Creating register for signal `$paramod$19e4048633bf612a4d25d3d9aeb98945c5854356\picorv32.$memwr$\cpuregs$picorv32.v:1339$897_EN' using process `$paramod$19e4048633bf612a4d25d3d9aeb98945c5854356\picorv32.$proc$picorv32.v:1332$1364'.
  created $dff cell `$procdff$4609' with positive edge clock.
Creating register for signal `$paramod$19e4048633bf612a4d25d3d9aeb98945c5854356\picorv32.\clear_prefetched_high_word_q' using process `$paramod$19e4048633bf612a4d25d3d9aeb98945c5854356\picorv32.$proc$picorv32.v:1288$1346'.
  created $dff cell `$procdff$4610' with positive edge clock.
Creating register for signal `$paramod$19e4048633bf612a4d25d3d9aeb98945c5854356\picorv32.\pcpi_insn' using process `$paramod$19e4048633bf612a4d25d3d9aeb98945c5854356\picorv32.$proc$picorv32.v:856$1051'.
  created $dff cell `$procdff$4611' with positive edge clock.
Creating register for signal `$paramod$19e4048633bf612a4d25d3d9aeb98945c5854356\picorv32.\instr_lui' using process `$paramod$19e4048633bf612a4d25d3d9aeb98945c5854356\picorv32.$proc$picorv32.v:856$1051'.
  created $dff cell `$procdff$4612' with positive edge clock.
Creating register for signal `$paramod$19e4048633bf612a4d25d3d9aeb98945c5854356\picorv32.\instr_auipc' using process `$paramod$19e4048633bf612a4d25d3d9aeb98945c5854356\picorv32.$proc$picorv32.v:856$1051'.
  created $dff cell `$procdff$4613' with positive edge clock.
Creating register for signal `$paramod$19e4048633bf612a4d25d3d9aeb98945c5854356\picorv32.\instr_jal' using process `$paramod$19e4048633bf612a4d25d3d9aeb98945c5854356\picorv32.$proc$picorv32.v:856$1051'.
  created $dff cell `$procdff$4614' with positive edge clock.
Creating register for signal `$paramod$19e4048633bf612a4d25d3d9aeb98945c5854356\picorv32.\instr_jalr' using process `$paramod$19e4048633bf612a4d25d3d9aeb98945c5854356\picorv32.$proc$picorv32.v:856$1051'.
  created $dff cell `$procdff$4615' with positive edge clock.
Creating register for signal `$paramod$19e4048633bf612a4d25d3d9aeb98945c5854356\picorv32.\instr_beq' using process `$paramod$19e4048633bf612a4d25d3d9aeb98945c5854356\picorv32.$proc$picorv32.v:856$1051'.
  created $dff cell `$procdff$4616' with positive edge clock.
Creating register for signal `$paramod$19e4048633bf612a4d25d3d9aeb98945c5854356\picorv32.\instr_bne' using process `$paramod$19e4048633bf612a4d25d3d9aeb98945c5854356\picorv32.$proc$picorv32.v:856$1051'.
  created $dff cell `$procdff$4617' with positive edge clock.
Creating register for signal `$paramod$19e4048633bf612a4d25d3d9aeb98945c5854356\picorv32.\instr_blt' using process `$paramod$19e4048633bf612a4d25d3d9aeb98945c5854356\picorv32.$proc$picorv32.v:856$1051'.
  created $dff cell `$procdff$4618' with positive edge clock.
Creating register for signal `$paramod$19e4048633bf612a4d25d3d9aeb98945c5854356\picorv32.\instr_bge' using process `$paramod$19e4048633bf612a4d25d3d9aeb98945c5854356\picorv32.$proc$picorv32.v:856$1051'.
  created $dff cell `$procdff$4619' with positive edge clock.
Creating register for signal `$paramod$19e4048633bf612a4d25d3d9aeb98945c5854356\picorv32.\instr_bltu' using process `$paramod$19e4048633bf612a4d25d3d9aeb98945c5854356\picorv32.$proc$picorv32.v:856$1051'.
  created $dff cell `$procdff$4620' with positive edge clock.
Creating register for signal `$paramod$19e4048633bf612a4d25d3d9aeb98945c5854356\picorv32.\instr_bgeu' using process `$paramod$19e4048633bf612a4d25d3d9aeb98945c5854356\picorv32.$proc$picorv32.v:856$1051'.
  created $dff cell `$procdff$4621' with positive edge clock.
Creating register for signal `$paramod$19e4048633bf612a4d25d3d9aeb98945c5854356\picorv32.\instr_lb' using process `$paramod$19e4048633bf612a4d25d3d9aeb98945c5854356\picorv32.$proc$picorv32.v:856$1051'.
  created $dff cell `$procdff$4622' with positive edge clock.
Creating register for signal `$paramod$19e4048633bf612a4d25d3d9aeb98945c5854356\picorv32.\instr_lh' using process `$paramod$19e4048633bf612a4d25d3d9aeb98945c5854356\picorv32.$proc$picorv32.v:856$1051'.
  created $dff cell `$procdff$4623' with positive edge clock.
Creating register for signal `$paramod$19e4048633bf612a4d25d3d9aeb98945c5854356\picorv32.\instr_lw' using process `$paramod$19e4048633bf612a4d25d3d9aeb98945c5854356\picorv32.$proc$picorv32.v:856$1051'.
  created $dff cell `$procdff$4624' with positive edge clock.
Creating register for signal `$paramod$19e4048633bf612a4d25d3d9aeb98945c5854356\picorv32.\instr_lbu' using process `$paramod$19e4048633bf612a4d25d3d9aeb98945c5854356\picorv32.$proc$picorv32.v:856$1051'.
  created $dff cell `$procdff$4625' with positive edge clock.
Creating register for signal `$paramod$19e4048633bf612a4d25d3d9aeb98945c5854356\picorv32.\instr_lhu' using process `$paramod$19e4048633bf612a4d25d3d9aeb98945c5854356\picorv32.$proc$picorv32.v:856$1051'.
  created $dff cell `$procdff$4626' with positive edge clock.
Creating register for signal `$paramod$19e4048633bf612a4d25d3d9aeb98945c5854356\picorv32.\instr_sb' using process `$paramod$19e4048633bf612a4d25d3d9aeb98945c5854356\picorv32.$proc$picorv32.v:856$1051'.
  created $dff cell `$procdff$4627' with positive edge clock.
Creating register for signal `$paramod$19e4048633bf612a4d25d3d9aeb98945c5854356\picorv32.\instr_sh' using process `$paramod$19e4048633bf612a4d25d3d9aeb98945c5854356\picorv32.$proc$picorv32.v:856$1051'.
  created $dff cell `$procdff$4628' with positive edge clock.
Creating register for signal `$paramod$19e4048633bf612a4d25d3d9aeb98945c5854356\picorv32.\instr_sw' using process `$paramod$19e4048633bf612a4d25d3d9aeb98945c5854356\picorv32.$proc$picorv32.v:856$1051'.
  created $dff cell `$procdff$4629' with positive edge clock.
Creating register for signal `$paramod$19e4048633bf612a4d25d3d9aeb98945c5854356\picorv32.\instr_addi' using process `$paramod$19e4048633bf612a4d25d3d9aeb98945c5854356\picorv32.$proc$picorv32.v:856$1051'.
  created $dff cell `$procdff$4630' with positive edge clock.
Creating register for signal `$paramod$19e4048633bf612a4d25d3d9aeb98945c5854356\picorv32.\instr_slti' using process `$paramod$19e4048633bf612a4d25d3d9aeb98945c5854356\picorv32.$proc$picorv32.v:856$1051'.
  created $dff cell `$procdff$4631' with positive edge clock.
Creating register for signal `$paramod$19e4048633bf612a4d25d3d9aeb98945c5854356\picorv32.\instr_sltiu' using process `$paramod$19e4048633bf612a4d25d3d9aeb98945c5854356\picorv32.$proc$picorv32.v:856$1051'.
  created $dff cell `$procdff$4632' with positive edge clock.
Creating register for signal `$paramod$19e4048633bf612a4d25d3d9aeb98945c5854356\picorv32.\instr_xori' using process `$paramod$19e4048633bf612a4d25d3d9aeb98945c5854356\picorv32.$proc$picorv32.v:856$1051'.
  created $dff cell `$procdff$4633' with positive edge clock.
Creating register for signal `$paramod$19e4048633bf612a4d25d3d9aeb98945c5854356\picorv32.\instr_ori' using process `$paramod$19e4048633bf612a4d25d3d9aeb98945c5854356\picorv32.$proc$picorv32.v:856$1051'.
  created $dff cell `$procdff$4634' with positive edge clock.
Creating register for signal `$paramod$19e4048633bf612a4d25d3d9aeb98945c5854356\picorv32.\instr_andi' using process `$paramod$19e4048633bf612a4d25d3d9aeb98945c5854356\picorv32.$proc$picorv32.v:856$1051'.
  created $dff cell `$procdff$4635' with positive edge clock.
Creating register for signal `$paramod$19e4048633bf612a4d25d3d9aeb98945c5854356\picorv32.\instr_slli' using process `$paramod$19e4048633bf612a4d25d3d9aeb98945c5854356\picorv32.$proc$picorv32.v:856$1051'.
  created $dff cell `$procdff$4636' with positive edge clock.
Creating register for signal `$paramod$19e4048633bf612a4d25d3d9aeb98945c5854356\picorv32.\instr_srli' using process `$paramod$19e4048633bf612a4d25d3d9aeb98945c5854356\picorv32.$proc$picorv32.v:856$1051'.
  created $dff cell `$procdff$4637' with positive edge clock.
Creating register for signal `$paramod$19e4048633bf612a4d25d3d9aeb98945c5854356\picorv32.\instr_srai' using process `$paramod$19e4048633bf612a4d25d3d9aeb98945c5854356\picorv32.$proc$picorv32.v:856$1051'.
  created $dff cell `$procdff$4638' with positive edge clock.
Creating register for signal `$paramod$19e4048633bf612a4d25d3d9aeb98945c5854356\picorv32.\instr_add' using process `$paramod$19e4048633bf612a4d25d3d9aeb98945c5854356\picorv32.$proc$picorv32.v:856$1051'.
  created $dff cell `$procdff$4639' with positive edge clock.
Creating register for signal `$paramod$19e4048633bf612a4d25d3d9aeb98945c5854356\picorv32.\instr_sub' using process `$paramod$19e4048633bf612a4d25d3d9aeb98945c5854356\picorv32.$proc$picorv32.v:856$1051'.
  created $dff cell `$procdff$4640' with positive edge clock.
Creating register for signal `$paramod$19e4048633bf612a4d25d3d9aeb98945c5854356\picorv32.\instr_sll' using process `$paramod$19e4048633bf612a4d25d3d9aeb98945c5854356\picorv32.$proc$picorv32.v:856$1051'.
  created $dff cell `$procdff$4641' with positive edge clock.
Creating register for signal `$paramod$19e4048633bf612a4d25d3d9aeb98945c5854356\picorv32.\instr_slt' using process `$paramod$19e4048633bf612a4d25d3d9aeb98945c5854356\picorv32.$proc$picorv32.v:856$1051'.
  created $dff cell `$procdff$4642' with positive edge clock.
Creating register for signal `$paramod$19e4048633bf612a4d25d3d9aeb98945c5854356\picorv32.\instr_sltu' using process `$paramod$19e4048633bf612a4d25d3d9aeb98945c5854356\picorv32.$proc$picorv32.v:856$1051'.
  created $dff cell `$procdff$4643' with positive edge clock.
Creating register for signal `$paramod$19e4048633bf612a4d25d3d9aeb98945c5854356\picorv32.\instr_xor' using process `$paramod$19e4048633bf612a4d25d3d9aeb98945c5854356\picorv32.$proc$picorv32.v:856$1051'.
  created $dff cell `$procdff$4644' with positive edge clock.
Creating register for signal `$paramod$19e4048633bf612a4d25d3d9aeb98945c5854356\picorv32.\instr_srl' using process `$paramod$19e4048633bf612a4d25d3d9aeb98945c5854356\picorv32.$proc$picorv32.v:856$1051'.
  created $dff cell `$procdff$4645' with positive edge clock.
Creating register for signal `$paramod$19e4048633bf612a4d25d3d9aeb98945c5854356\picorv32.\instr_sra' using process `$paramod$19e4048633bf612a4d25d3d9aeb98945c5854356\picorv32.$proc$picorv32.v:856$1051'.
  created $dff cell `$procdff$4646' with positive edge clock.
Creating register for signal `$paramod$19e4048633bf612a4d25d3d9aeb98945c5854356\picorv32.\instr_or' using process `$paramod$19e4048633bf612a4d25d3d9aeb98945c5854356\picorv32.$proc$picorv32.v:856$1051'.
  created $dff cell `$procdff$4647' with positive edge clock.
Creating register for signal `$paramod$19e4048633bf612a4d25d3d9aeb98945c5854356\picorv32.\instr_and' using process `$paramod$19e4048633bf612a4d25d3d9aeb98945c5854356\picorv32.$proc$picorv32.v:856$1051'.
  created $dff cell `$procdff$4648' with positive edge clock.
Creating register for signal `$paramod$19e4048633bf612a4d25d3d9aeb98945c5854356\picorv32.\instr_rdcycle' using process `$paramod$19e4048633bf612a4d25d3d9aeb98945c5854356\picorv32.$proc$picorv32.v:856$1051'.
  created $dff cell `$procdff$4649' with positive edge clock.
Creating register for signal `$paramod$19e4048633bf612a4d25d3d9aeb98945c5854356\picorv32.\instr_rdcycleh' using process `$paramod$19e4048633bf612a4d25d3d9aeb98945c5854356\picorv32.$proc$picorv32.v:856$1051'.
  created $dff cell `$procdff$4650' with positive edge clock.
Creating register for signal `$paramod$19e4048633bf612a4d25d3d9aeb98945c5854356\picorv32.\instr_rdinstr' using process `$paramod$19e4048633bf612a4d25d3d9aeb98945c5854356\picorv32.$proc$picorv32.v:856$1051'.
  created $dff cell `$procdff$4651' with positive edge clock.
Creating register for signal `$paramod$19e4048633bf612a4d25d3d9aeb98945c5854356\picorv32.\instr_rdinstrh' using process `$paramod$19e4048633bf612a4d25d3d9aeb98945c5854356\picorv32.$proc$picorv32.v:856$1051'.
  created $dff cell `$procdff$4652' with positive edge clock.
Creating register for signal `$paramod$19e4048633bf612a4d25d3d9aeb98945c5854356\picorv32.\instr_ecall_ebreak' using process `$paramod$19e4048633bf612a4d25d3d9aeb98945c5854356\picorv32.$proc$picorv32.v:856$1051'.
  created $dff cell `$procdff$4653' with positive edge clock.
Creating register for signal `$paramod$19e4048633bf612a4d25d3d9aeb98945c5854356\picorv32.\instr_getq' using process `$paramod$19e4048633bf612a4d25d3d9aeb98945c5854356\picorv32.$proc$picorv32.v:856$1051'.
  created $dff cell `$procdff$4654' with positive edge clock.
Creating register for signal `$paramod$19e4048633bf612a4d25d3d9aeb98945c5854356\picorv32.\instr_setq' using process `$paramod$19e4048633bf612a4d25d3d9aeb98945c5854356\picorv32.$proc$picorv32.v:856$1051'.
  created $dff cell `$procdff$4655' with positive edge clock.
Creating register for signal `$paramod$19e4048633bf612a4d25d3d9aeb98945c5854356\picorv32.\instr_retirq' using process `$paramod$19e4048633bf612a4d25d3d9aeb98945c5854356\picorv32.$proc$picorv32.v:856$1051'.
  created $dff cell `$procdff$4656' with positive edge clock.
Creating register for signal `$paramod$19e4048633bf612a4d25d3d9aeb98945c5854356\picorv32.\instr_maskirq' using process `$paramod$19e4048633bf612a4d25d3d9aeb98945c5854356\picorv32.$proc$picorv32.v:856$1051'.
  created $dff cell `$procdff$4657' with positive edge clock.
Creating register for signal `$paramod$19e4048633bf612a4d25d3d9aeb98945c5854356\picorv32.\instr_waitirq' using process `$paramod$19e4048633bf612a4d25d3d9aeb98945c5854356\picorv32.$proc$picorv32.v:856$1051'.
  created $dff cell `$procdff$4658' with positive edge clock.
Creating register for signal `$paramod$19e4048633bf612a4d25d3d9aeb98945c5854356\picorv32.\instr_timer' using process `$paramod$19e4048633bf612a4d25d3d9aeb98945c5854356\picorv32.$proc$picorv32.v:856$1051'.
  created $dff cell `$procdff$4659' with positive edge clock.
Creating register for signal `$paramod$19e4048633bf612a4d25d3d9aeb98945c5854356\picorv32.\decoded_rd' using process `$paramod$19e4048633bf612a4d25d3d9aeb98945c5854356\picorv32.$proc$picorv32.v:856$1051'.
  created $dff cell `$procdff$4660' with positive edge clock.
Creating register for signal `$paramod$19e4048633bf612a4d25d3d9aeb98945c5854356\picorv32.\decoded_rs1' using process `$paramod$19e4048633bf612a4d25d3d9aeb98945c5854356\picorv32.$proc$picorv32.v:856$1051'.
  created $dff cell `$procdff$4661' with positive edge clock.
Creating register for signal `$paramod$19e4048633bf612a4d25d3d9aeb98945c5854356\picorv32.\decoded_rs2' using process `$paramod$19e4048633bf612a4d25d3d9aeb98945c5854356\picorv32.$proc$picorv32.v:856$1051'.
  created $dff cell `$procdff$4662' with positive edge clock.
Creating register for signal `$paramod$19e4048633bf612a4d25d3d9aeb98945c5854356\picorv32.\decoded_imm' using process `$paramod$19e4048633bf612a4d25d3d9aeb98945c5854356\picorv32.$proc$picorv32.v:856$1051'.
  created $dff cell `$procdff$4663' with positive edge clock.
Creating register for signal `$paramod$19e4048633bf612a4d25d3d9aeb98945c5854356\picorv32.\decoded_imm_j' using process `$paramod$19e4048633bf612a4d25d3d9aeb98945c5854356\picorv32.$proc$picorv32.v:856$1051'.
  created $dff cell `$procdff$4664' with positive edge clock.
Creating register for signal `$paramod$19e4048633bf612a4d25d3d9aeb98945c5854356\picorv32.\compressed_instr' using process `$paramod$19e4048633bf612a4d25d3d9aeb98945c5854356\picorv32.$proc$picorv32.v:856$1051'.
  created $dff cell `$procdff$4665' with positive edge clock.
Creating register for signal `$paramod$19e4048633bf612a4d25d3d9aeb98945c5854356\picorv32.\is_lui_auipc_jal' using process `$paramod$19e4048633bf612a4d25d3d9aeb98945c5854356\picorv32.$proc$picorv32.v:856$1051'.
  created $dff cell `$procdff$4666' with positive edge clock.
Creating register for signal `$paramod$19e4048633bf612a4d25d3d9aeb98945c5854356\picorv32.\is_lb_lh_lw_lbu_lhu' using process `$paramod$19e4048633bf612a4d25d3d9aeb98945c5854356\picorv32.$proc$picorv32.v:856$1051'.
  created $dff cell `$procdff$4667' with positive edge clock.
Creating register for signal `$paramod$19e4048633bf612a4d25d3d9aeb98945c5854356\picorv32.\is_slli_srli_srai' using process `$paramod$19e4048633bf612a4d25d3d9aeb98945c5854356\picorv32.$proc$picorv32.v:856$1051'.
  created $dff cell `$procdff$4668' with positive edge clock.
Creating register for signal `$paramod$19e4048633bf612a4d25d3d9aeb98945c5854356\picorv32.\is_jalr_addi_slti_sltiu_xori_ori_andi' using process `$paramod$19e4048633bf612a4d25d3d9aeb98945c5854356\picorv32.$proc$picorv32.v:856$1051'.
  created $dff cell `$procdff$4669' with positive edge clock.
Creating register for signal `$paramod$19e4048633bf612a4d25d3d9aeb98945c5854356\picorv32.\is_sb_sh_sw' using process `$paramod$19e4048633bf612a4d25d3d9aeb98945c5854356\picorv32.$proc$picorv32.v:856$1051'.
  created $dff cell `$procdff$4670' with positive edge clock.
Creating register for signal `$paramod$19e4048633bf612a4d25d3d9aeb98945c5854356\picorv32.\is_sll_srl_sra' using process `$paramod$19e4048633bf612a4d25d3d9aeb98945c5854356\picorv32.$proc$picorv32.v:856$1051'.
  created $dff cell `$procdff$4671' with positive edge clock.
Creating register for signal `$paramod$19e4048633bf612a4d25d3d9aeb98945c5854356\picorv32.\is_lui_auipc_jal_jalr_addi_add_sub' using process `$paramod$19e4048633bf612a4d25d3d9aeb98945c5854356\picorv32.$proc$picorv32.v:856$1051'.
  created $dff cell `$procdff$4672' with positive edge clock.
Creating register for signal `$paramod$19e4048633bf612a4d25d3d9aeb98945c5854356\picorv32.\is_slti_blt_slt' using process `$paramod$19e4048633bf612a4d25d3d9aeb98945c5854356\picorv32.$proc$picorv32.v:856$1051'.
  created $dff cell `$procdff$4673' with positive edge clock.
Creating register for signal `$paramod$19e4048633bf612a4d25d3d9aeb98945c5854356\picorv32.\is_sltiu_bltu_sltu' using process `$paramod$19e4048633bf612a4d25d3d9aeb98945c5854356\picorv32.$proc$picorv32.v:856$1051'.
  created $dff cell `$procdff$4674' with positive edge clock.
Creating register for signal `$paramod$19e4048633bf612a4d25d3d9aeb98945c5854356\picorv32.\is_beq_bne_blt_bge_bltu_bgeu' using process `$paramod$19e4048633bf612a4d25d3d9aeb98945c5854356\picorv32.$proc$picorv32.v:856$1051'.
  created $dff cell `$procdff$4675' with positive edge clock.
Creating register for signal `$paramod$19e4048633bf612a4d25d3d9aeb98945c5854356\picorv32.\is_lbu_lhu_lw' using process `$paramod$19e4048633bf612a4d25d3d9aeb98945c5854356\picorv32.$proc$picorv32.v:856$1051'.
  created $dff cell `$procdff$4676' with positive edge clock.
Creating register for signal `$paramod$19e4048633bf612a4d25d3d9aeb98945c5854356\picorv32.\is_alu_reg_imm' using process `$paramod$19e4048633bf612a4d25d3d9aeb98945c5854356\picorv32.$proc$picorv32.v:856$1051'.
  created $dff cell `$procdff$4677' with positive edge clock.
Creating register for signal `$paramod$19e4048633bf612a4d25d3d9aeb98945c5854356\picorv32.\is_alu_reg_reg' using process `$paramod$19e4048633bf612a4d25d3d9aeb98945c5854356\picorv32.$proc$picorv32.v:856$1051'.
  created $dff cell `$procdff$4678' with positive edge clock.
Creating register for signal `$paramod$19e4048633bf612a4d25d3d9aeb98945c5854356\picorv32.\is_compare' using process `$paramod$19e4048633bf612a4d25d3d9aeb98945c5854356\picorv32.$proc$picorv32.v:856$1051'.
  created $dff cell `$procdff$4679' with positive edge clock.
Creating register for signal `$paramod$19e4048633bf612a4d25d3d9aeb98945c5854356\picorv32.\dbg_insn_addr' using process `$paramod$19e4048633bf612a4d25d3d9aeb98945c5854356\picorv32.$proc$picorv32.v:776$1045'.
  created $dff cell `$procdff$4680' with positive edge clock.
Creating register for signal `$paramod$19e4048633bf612a4d25d3d9aeb98945c5854356\picorv32.\q_ascii_instr' using process `$paramod$19e4048633bf612a4d25d3d9aeb98945c5854356\picorv32.$proc$picorv32.v:776$1045'.
  created $dff cell `$procdff$4681' with positive edge clock.
Creating register for signal `$paramod$19e4048633bf612a4d25d3d9aeb98945c5854356\picorv32.\q_insn_imm' using process `$paramod$19e4048633bf612a4d25d3d9aeb98945c5854356\picorv32.$proc$picorv32.v:776$1045'.
  created $dff cell `$procdff$4682' with positive edge clock.
Creating register for signal `$paramod$19e4048633bf612a4d25d3d9aeb98945c5854356\picorv32.\q_insn_opcode' using process `$paramod$19e4048633bf612a4d25d3d9aeb98945c5854356\picorv32.$proc$picorv32.v:776$1045'.
  created $dff cell `$procdff$4683' with positive edge clock.
Creating register for signal `$paramod$19e4048633bf612a4d25d3d9aeb98945c5854356\picorv32.\q_insn_rs1' using process `$paramod$19e4048633bf612a4d25d3d9aeb98945c5854356\picorv32.$proc$picorv32.v:776$1045'.
  created $dff cell `$procdff$4684' with positive edge clock.
Creating register for signal `$paramod$19e4048633bf612a4d25d3d9aeb98945c5854356\picorv32.\q_insn_rs2' using process `$paramod$19e4048633bf612a4d25d3d9aeb98945c5854356\picorv32.$proc$picorv32.v:776$1045'.
  created $dff cell `$procdff$4685' with positive edge clock.
Creating register for signal `$paramod$19e4048633bf612a4d25d3d9aeb98945c5854356\picorv32.\q_insn_rd' using process `$paramod$19e4048633bf612a4d25d3d9aeb98945c5854356\picorv32.$proc$picorv32.v:776$1045'.
  created $dff cell `$procdff$4686' with positive edge clock.
Creating register for signal `$paramod$19e4048633bf612a4d25d3d9aeb98945c5854356\picorv32.\dbg_next' using process `$paramod$19e4048633bf612a4d25d3d9aeb98945c5854356\picorv32.$proc$picorv32.v:776$1045'.
  created $dff cell `$procdff$4687' with positive edge clock.
Creating register for signal `$paramod$19e4048633bf612a4d25d3d9aeb98945c5854356\picorv32.\dbg_valid_insn' using process `$paramod$19e4048633bf612a4d25d3d9aeb98945c5854356\picorv32.$proc$picorv32.v:776$1045'.
  created $dff cell `$procdff$4688' with positive edge clock.
Creating register for signal `$paramod$19e4048633bf612a4d25d3d9aeb98945c5854356\picorv32.\cached_ascii_instr' using process `$paramod$19e4048633bf612a4d25d3d9aeb98945c5854356\picorv32.$proc$picorv32.v:776$1045'.
  created $dff cell `$procdff$4689' with positive edge clock.
Creating register for signal `$paramod$19e4048633bf612a4d25d3d9aeb98945c5854356\picorv32.\cached_insn_imm' using process `$paramod$19e4048633bf612a4d25d3d9aeb98945c5854356\picorv32.$proc$picorv32.v:776$1045'.
  created $dff cell `$procdff$4690' with positive edge clock.
Creating register for signal `$paramod$19e4048633bf612a4d25d3d9aeb98945c5854356\picorv32.\cached_insn_opcode' using process `$paramod$19e4048633bf612a4d25d3d9aeb98945c5854356\picorv32.$proc$picorv32.v:776$1045'.
  created $dff cell `$procdff$4691' with positive edge clock.
Creating register for signal `$paramod$19e4048633bf612a4d25d3d9aeb98945c5854356\picorv32.\cached_insn_rs1' using process `$paramod$19e4048633bf612a4d25d3d9aeb98945c5854356\picorv32.$proc$picorv32.v:776$1045'.
  created $dff cell `$procdff$4692' with positive edge clock.
Creating register for signal `$paramod$19e4048633bf612a4d25d3d9aeb98945c5854356\picorv32.\cached_insn_rs2' using process `$paramod$19e4048633bf612a4d25d3d9aeb98945c5854356\picorv32.$proc$picorv32.v:776$1045'.
  created $dff cell `$procdff$4693' with positive edge clock.
Creating register for signal `$paramod$19e4048633bf612a4d25d3d9aeb98945c5854356\picorv32.\cached_insn_rd' using process `$paramod$19e4048633bf612a4d25d3d9aeb98945c5854356\picorv32.$proc$picorv32.v:776$1045'.
  created $dff cell `$procdff$4694' with positive edge clock.
Creating register for signal `$paramod$19e4048633bf612a4d25d3d9aeb98945c5854356\picorv32.\mem_valid' using process `$paramod$19e4048633bf612a4d25d3d9aeb98945c5854356\picorv32.$proc$picorv32.v:565$1020'.
  created $dff cell `$procdff$4695' with positive edge clock.
Creating register for signal `$paramod$19e4048633bf612a4d25d3d9aeb98945c5854356\picorv32.\mem_instr' using process `$paramod$19e4048633bf612a4d25d3d9aeb98945c5854356\picorv32.$proc$picorv32.v:565$1020'.
  created $dff cell `$procdff$4696' with positive edge clock.
Creating register for signal `$paramod$19e4048633bf612a4d25d3d9aeb98945c5854356\picorv32.\mem_addr' using process `$paramod$19e4048633bf612a4d25d3d9aeb98945c5854356\picorv32.$proc$picorv32.v:565$1020'.
  created $dff cell `$procdff$4697' with positive edge clock.
Creating register for signal `$paramod$19e4048633bf612a4d25d3d9aeb98945c5854356\picorv32.\mem_wdata' using process `$paramod$19e4048633bf612a4d25d3d9aeb98945c5854356\picorv32.$proc$picorv32.v:565$1020'.
  created $dff cell `$procdff$4698' with positive edge clock.
Creating register for signal `$paramod$19e4048633bf612a4d25d3d9aeb98945c5854356\picorv32.\mem_wstrb' using process `$paramod$19e4048633bf612a4d25d3d9aeb98945c5854356\picorv32.$proc$picorv32.v:565$1020'.
  created $dff cell `$procdff$4699' with positive edge clock.
Creating register for signal `$paramod$19e4048633bf612a4d25d3d9aeb98945c5854356\picorv32.\mem_state' using process `$paramod$19e4048633bf612a4d25d3d9aeb98945c5854356\picorv32.$proc$picorv32.v:565$1020'.
  created $dff cell `$procdff$4700' with positive edge clock.
Creating register for signal `$paramod$19e4048633bf612a4d25d3d9aeb98945c5854356\picorv32.\mem_la_secondword' using process `$paramod$19e4048633bf612a4d25d3d9aeb98945c5854356\picorv32.$proc$picorv32.v:565$1020'.
  created $dff cell `$procdff$4701' with positive edge clock.
Creating register for signal `$paramod$19e4048633bf612a4d25d3d9aeb98945c5854356\picorv32.\prefetched_high_word' using process `$paramod$19e4048633bf612a4d25d3d9aeb98945c5854356\picorv32.$proc$picorv32.v:565$1020'.
  created $dff cell `$procdff$4702' with positive edge clock.
Creating register for signal `$paramod$19e4048633bf612a4d25d3d9aeb98945c5854356\picorv32.\mem_16bit_buffer' using process `$paramod$19e4048633bf612a4d25d3d9aeb98945c5854356\picorv32.$proc$picorv32.v:565$1020'.
  created $dff cell `$procdff$4703' with positive edge clock.
Creating register for signal `$paramod$19e4048633bf612a4d25d3d9aeb98945c5854356\picorv32.\alu_add_sub' using process `$paramod$19e4048633bf612a4d25d3d9aeb98945c5854356\picorv32.$proc$picorv32.v:1225$1557'.
  created $dff cell `$procdff$4704' with positive edge clock.
Creating register for signal `$paramod$19e4048633bf612a4d25d3d9aeb98945c5854356\picorv32.\alu_shl' using process `$paramod$19e4048633bf612a4d25d3d9aeb98945c5854356\picorv32.$proc$picorv32.v:1225$1557'.
  created $dff cell `$procdff$4705' with positive edge clock.
Creating register for signal `$paramod$19e4048633bf612a4d25d3d9aeb98945c5854356\picorv32.\alu_shr' using process `$paramod$19e4048633bf612a4d25d3d9aeb98945c5854356\picorv32.$proc$picorv32.v:1225$1557'.
  created $dff cell `$procdff$4706' with positive edge clock.
Creating register for signal `$paramod$19e4048633bf612a4d25d3d9aeb98945c5854356\picorv32.\alu_eq' using process `$paramod$19e4048633bf612a4d25d3d9aeb98945c5854356\picorv32.$proc$picorv32.v:1225$1557'.
  created $dff cell `$procdff$4707' with positive edge clock.
Creating register for signal `$paramod$19e4048633bf612a4d25d3d9aeb98945c5854356\picorv32.\alu_ltu' using process `$paramod$19e4048633bf612a4d25d3d9aeb98945c5854356\picorv32.$proc$picorv32.v:1225$1557'.
  created $dff cell `$procdff$4708' with positive edge clock.
Creating register for signal `$paramod$19e4048633bf612a4d25d3d9aeb98945c5854356\picorv32.\alu_lts' using process `$paramod$19e4048633bf612a4d25d3d9aeb98945c5854356\picorv32.$proc$picorv32.v:1225$1557'.
  created $dff cell `$procdff$4709' with positive edge clock.
Creating register for signal `$paramod$19e4048633bf612a4d25d3d9aeb98945c5854356\picorv32.\next_insn_opcode' using process `$paramod$19e4048633bf612a4d25d3d9aeb98945c5854356\picorv32.$proc$picorv32.v:430$980'.
  created $dff cell `$procdff$4710' with positive edge clock.
Creating register for signal `$paramod$19e4048633bf612a4d25d3d9aeb98945c5854356\picorv32.\mem_rdata_q' using process `$paramod$19e4048633bf612a4d25d3d9aeb98945c5854356\picorv32.$proc$picorv32.v:430$980'.
  created $dff cell `$procdff$4711' with positive edge clock.
Creating register for signal `$paramod$19e4048633bf612a4d25d3d9aeb98945c5854356\picorv32.\mem_la_firstword_reg' using process `$paramod$19e4048633bf612a4d25d3d9aeb98945c5854356\picorv32.$proc$picorv32.v:390$972'.
  created $dff cell `$procdff$4712' with positive edge clock.
Creating register for signal `$paramod$19e4048633bf612a4d25d3d9aeb98945c5854356\picorv32.\last_mem_valid' using process `$paramod$19e4048633bf612a4d25d3d9aeb98945c5854356\picorv32.$proc$picorv32.v:390$972'.
  created $dff cell `$procdff$4713' with positive edge clock.
Creating register for signal `\picorv32_pcpi_mul.\pcpi_wr' using process `\picorv32_pcpi_mul.$proc$picorv32.v:2302$771'.
  created $dff cell `$procdff$4714' with positive edge clock.
Creating register for signal `\picorv32_pcpi_mul.\pcpi_rd' using process `\picorv32_pcpi_mul.$proc$picorv32.v:2302$771'.
  created $dff cell `$procdff$4715' with positive edge clock.
Creating register for signal `\picorv32_pcpi_mul.\pcpi_ready' using process `\picorv32_pcpi_mul.$proc$picorv32.v:2302$771'.
  created $dff cell `$procdff$4716' with positive edge clock.
Creating register for signal `\picorv32_pcpi_mul.\rs1' using process `\picorv32_pcpi_mul.$proc$picorv32.v:2268$766'.
  created $dff cell `$procdff$4717' with positive edge clock.
Creating register for signal `\picorv32_pcpi_mul.\rs2' using process `\picorv32_pcpi_mul.$proc$picorv32.v:2268$766'.
  created $dff cell `$procdff$4718' with positive edge clock.
Creating register for signal `\picorv32_pcpi_mul.\rd' using process `\picorv32_pcpi_mul.$proc$picorv32.v:2268$766'.
  created $dff cell `$procdff$4719' with positive edge clock.
Creating register for signal `\picorv32_pcpi_mul.\rdx' using process `\picorv32_pcpi_mul.$proc$picorv32.v:2268$766'.
  created $dff cell `$procdff$4720' with positive edge clock.
Creating register for signal `\picorv32_pcpi_mul.\mul_counter' using process `\picorv32_pcpi_mul.$proc$picorv32.v:2268$766'.
  created $dff cell `$procdff$4721' with positive edge clock.
Creating register for signal `\picorv32_pcpi_mul.\mul_waiting' using process `\picorv32_pcpi_mul.$proc$picorv32.v:2268$766'.
  created $dff cell `$procdff$4722' with positive edge clock.
Creating register for signal `\picorv32_pcpi_mul.\mul_finish' using process `\picorv32_pcpi_mul.$proc$picorv32.v:2268$766'.
  created $dff cell `$procdff$4723' with positive edge clock.
Creating register for signal `\picorv32_pcpi_mul.\pcpi_wait' using process `\picorv32_pcpi_mul.$proc$picorv32.v:2216$722'.
  created $dff cell `$procdff$4724' with positive edge clock.
Creating register for signal `\picorv32_pcpi_mul.\instr_mulhsu' using process `\picorv32_pcpi_mul.$proc$picorv32.v:2216$722'.
  created $dff cell `$procdff$4725' with positive edge clock.
Creating register for signal `\picorv32_pcpi_mul.\pcpi_wait_q' using process `\picorv32_pcpi_mul.$proc$picorv32.v:2216$722'.
  created $dff cell `$procdff$4726' with positive edge clock.
Creating register for signal `\picorv32_pcpi_mul.\instr_mul' using process `\picorv32_pcpi_mul.$proc$picorv32.v:2216$722'.
  created $dff cell `$procdff$4727' with positive edge clock.
Creating register for signal `\picorv32_pcpi_mul.\instr_mulh' using process `\picorv32_pcpi_mul.$proc$picorv32.v:2216$722'.
  created $dff cell `$procdff$4728' with positive edge clock.
Creating register for signal `\picorv32_pcpi_mul.\instr_mulhu' using process `\picorv32_pcpi_mul.$proc$picorv32.v:2216$722'.
  created $dff cell `$procdff$4729' with positive edge clock.

3.3.8. Executing PROC_CLEAN pass (remove empty switches from decision trees).
Removing empty process `top.$group_3'.
Removing empty process `top.$group_2'.
Removing empty process `top.$group_1'.
Removing empty process `top.$group_0'.
Removing empty process `cd_sync.$group_4'.
Removing empty process `cd_sync.$group_3'.
Found and cleaned up 1 empty switch in `\cd_sync.$group_2'.
Removing empty process `cd_sync.$group_2'.
Found and cleaned up 1 empty switch in `\cd_sync.$group_1'.
Removing empty process `cd_sync.$group_1'.
Removing empty process `cd_sync.$group_0'.
Found and cleaned up 3 empty switches in `\U$$2.$group_10'.
Removing empty process `U$$2.$group_10'.
Found and cleaned up 3 empty switches in `\U$$2.$group_9'.
Removing empty process `U$$2.$group_9'.
Found and cleaned up 3 empty switches in `\U$$2.$group_8'.
Removing empty process `U$$2.$group_8'.
Removing empty process `U$$2.$group_7'.
Removing empty process `U$$2.$group_6'.
Removing empty process `U$$2.$group_5'.
Removing empty process `U$$2.$group_4'.
Found and cleaned up 3 empty switches in `\U$$2.$group_3'.
Removing empty process `U$$2.$group_3'.
Removing empty process `U$$2.$group_2'.
Found and cleaned up 8 empty switches in `\U$$2.$group_1'.
Removing empty process `U$$2.$group_1'.
Removing empty process `U$$2.$group_0'.
Removing empty process `U$$1.$group_1'.
Found and cleaned up 1 empty switch in `\U$$1.$group_0'.
Removing empty process `U$$1.$group_0'.
Found and cleaned up 1 empty switch in `\U$$0.$group_3'.
Removing empty process `U$$0.$group_3'.
Removing empty process `U$$0.$group_2'.
Removing empty process `U$$0.$group_1'.
Removing empty process `U$$0.$group_0'.
Removing empty process `sincos_lookup.$group_3'.
Removing empty process `sincos_lookup.$group_2'.
Removing empty process `sincos_lookup.$group_1'.
Removing empty process `sincos_lookup.$group_0'.
Found and cleaned up 56 empty switches in `$paramod$19e4048633bf612a4d25d3d9aeb98945c5854356\picorv32.$proc$picorv32.v:1397$1386'.
Removing empty process `$paramod$19e4048633bf612a4d25d3d9aeb98945c5854356\picorv32.$proc$picorv32.v:1397$1386'.
Removing empty process `$paramod$19e4048633bf612a4d25d3d9aeb98945c5854356\picorv32.$proc$picorv32.v:1343$1370'.
Found and cleaned up 1 empty switch in `$paramod$19e4048633bf612a4d25d3d9aeb98945c5854356\picorv32.$proc$picorv32.v:1332$1364'.
Removing empty process `$paramod$19e4048633bf612a4d25d3d9aeb98945c5854356\picorv32.$proc$picorv32.v:1332$1364'.
Found and cleaned up 2 empty switches in `$paramod$19e4048633bf612a4d25d3d9aeb98945c5854356\picorv32.$proc$picorv32.v:1304$1352'.
Removing empty process `$paramod$19e4048633bf612a4d25d3d9aeb98945c5854356\picorv32.$proc$picorv32.v:1304$1352'.
Found and cleaned up 2 empty switches in `$paramod$19e4048633bf612a4d25d3d9aeb98945c5854356\picorv32.$proc$picorv32.v:1290$1347'.
Removing empty process `$paramod$19e4048633bf612a4d25d3d9aeb98945c5854356\picorv32.$proc$picorv32.v:1290$1347'.
Removing empty process `$paramod$19e4048633bf612a4d25d3d9aeb98945c5854356\picorv32.$proc$picorv32.v:1288$1346'.
Found and cleaned up 2 empty switches in `$paramod$19e4048633bf612a4d25d3d9aeb98945c5854356\picorv32.$proc$picorv32.v:1244$1324'.
Removing empty process `$paramod$19e4048633bf612a4d25d3d9aeb98945c5854356\picorv32.$proc$picorv32.v:1244$1324'.
Found and cleaned up 8 empty switches in `$paramod$19e4048633bf612a4d25d3d9aeb98945c5854356\picorv32.$proc$picorv32.v:1181$1312'.
Removing empty process `$paramod$19e4048633bf612a4d25d3d9aeb98945c5854356\picorv32.$proc$picorv32.v:1181$1312'.
Found and cleaned up 22 empty switches in `$paramod$19e4048633bf612a4d25d3d9aeb98945c5854356\picorv32.$proc$picorv32.v:856$1051'.
Removing empty process `$paramod$19e4048633bf612a4d25d3d9aeb98945c5854356\picorv32.$proc$picorv32.v:856$1051'.
Found and cleaned up 3 empty switches in `$paramod$19e4048633bf612a4d25d3d9aeb98945c5854356\picorv32.$proc$picorv32.v:807$1049'.
Removing empty process `$paramod$19e4048633bf612a4d25d3d9aeb98945c5854356\picorv32.$proc$picorv32.v:807$1049'.
Found and cleaned up 5 empty switches in `$paramod$19e4048633bf612a4d25d3d9aeb98945c5854356\picorv32.$proc$picorv32.v:776$1045'.
Removing empty process `$paramod$19e4048633bf612a4d25d3d9aeb98945c5854356\picorv32.$proc$picorv32.v:776$1045'.
Found and cleaned up 47 empty switches in `$paramod$19e4048633bf612a4d25d3d9aeb98945c5854356\picorv32.$proc$picorv32.v:700$1044'.
Removing empty process `$paramod$19e4048633bf612a4d25d3d9aeb98945c5854356\picorv32.$proc$picorv32.v:700$1044'.
Found and cleaned up 16 empty switches in `$paramod$19e4048633bf612a4d25d3d9aeb98945c5854356\picorv32.$proc$picorv32.v:565$1020'.
Removing empty process `$paramod$19e4048633bf612a4d25d3d9aeb98945c5854356\picorv32.$proc$picorv32.v:565$1020'.
Removing empty process `$paramod$19e4048633bf612a4d25d3d9aeb98945c5854356\picorv32.$proc$picorv32.v:1225$1557'.
Found and cleaned up 19 empty switches in `$paramod$19e4048633bf612a4d25d3d9aeb98945c5854356\picorv32.$proc$picorv32.v:430$980'.
Removing empty process `$paramod$19e4048633bf612a4d25d3d9aeb98945c5854356\picorv32.$proc$picorv32.v:430$980'.
Found and cleaned up 3 empty switches in `$paramod$19e4048633bf612a4d25d3d9aeb98945c5854356\picorv32.$proc$picorv32.v:401$977'.
Removing empty process `$paramod$19e4048633bf612a4d25d3d9aeb98945c5854356\picorv32.$proc$picorv32.v:401$977'.
Found and cleaned up 2 empty switches in `$paramod$19e4048633bf612a4d25d3d9aeb98945c5854356\picorv32.$proc$picorv32.v:390$972'.
Removing empty process `$paramod$19e4048633bf612a4d25d3d9aeb98945c5854356\picorv32.$proc$picorv32.v:390$972'.
Found and cleaned up 1 empty switch in `$paramod$19e4048633bf612a4d25d3d9aeb98945c5854356\picorv32.$proc$picorv32.v:325$898'.
Removing empty process `$paramod$19e4048633bf612a4d25d3d9aeb98945c5854356\picorv32.$proc$picorv32.v:325$898'.
Found and cleaned up 1 empty switch in `\picorv32_pcpi_mul.$proc$picorv32.v:2302$771'.
Removing empty process `picorv32_pcpi_mul.$proc$picorv32.v:2302$771'.
Found and cleaned up 5 empty switches in `\picorv32_pcpi_mul.$proc$picorv32.v:2268$766'.
Removing empty process `picorv32_pcpi_mul.$proc$picorv32.v:2268$766'.
Removing empty process `picorv32_pcpi_mul.$proc$picorv32.v:2244$728'.
Found and cleaned up 2 empty switches in `\picorv32_pcpi_mul.$proc$picorv32.v:2216$722'.
Removing empty process `picorv32_pcpi_mul.$proc$picorv32.v:2216$722'.
Cleaned up 221 empty switches.

3.4. Executing FLATTEN pass (flatten design).
Using template pin_clk16_0 for cells of type pin_clk16_0.
Using template cd_sync for cells of type cd_sync.
Using template U$$2 for cells of type U$$2.
Using template U$$0 for cells of type U$$0.
Using template U$$1 for cells of type U$$1.
Using template pin_dac_0 for cells of type pin_dac_0.
Using template pin_led_0 for cells of type pin_led_0.
Using template $paramod$19e4048633bf612a4d25d3d9aeb98945c5854356\picorv32 for cells of type $paramod$19e4048633bf612a4d25d3d9aeb98945c5854356\picorv32.
Using template sincos_lookup for cells of type sincos_lookup.
Using template picorv32_pcpi_mul for cells of type picorv32_pcpi_mul.
<suppressed ~10 debug messages>
No more expansions possible.
Deleting now unused module pin_clk16_0.
Deleting now unused module pin_led_0.
Deleting now unused module pin_dac_0.
Deleting now unused module cd_sync.
Deleting now unused module U$$2.
Deleting now unused module U$$1.
Deleting now unused module U$$0.
Deleting now unused module sincos_lookup.
Deleting now unused module $paramod$19e4048633bf612a4d25d3d9aeb98945c5854356\picorv32.
Deleting now unused module picorv32_pcpi_mul.

3.5. Executing TRIBUF pass.

3.6. Executing DEMINOUT pass (demote inout ports to input or output).

3.7. Executing OPT_EXPR pass (perform const folding).
Optimizing module top.
<suppressed ~809 debug messages>

3.8. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \top..
Removed 371 unused cells and 1947 unused wires.
<suppressed ~430 debug messages>

3.9. Executing CHECK pass (checking for obvious problems).
checking module top..
found and reported 0 problems.

3.10. Executing OPT pass (performing simple optimizations).

3.10.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module top.

3.10.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\top'.
<suppressed ~1221 debug messages>
Removed a total of 407 cells.

3.10.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \top..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
      Replacing known input bits on port A of cell $techmap\U$$2.picorv32.pcpi_mul.$procmux$4480: \U$$2.picorv32.pcpi_mul.mul_waiting -> 1'0
  Analyzing evaluation results.
    dead port 2/2 on $mux $techmap\U$$2.picorv32.$procmux$1737.
    dead port 2/2 on $mux $techmap\U$$2.picorv32.$procmux$1740.
    dead port 2/2 on $mux $techmap\U$$2.picorv32.$procmux$1752.
    dead port 2/2 on $mux $techmap\U$$2.picorv32.$procmux$1759.
    dead port 2/2 on $mux $techmap\U$$2.picorv32.$procmux$1762.
    dead port 1/2 on $mux $techmap\U$$2.picorv32.$procmux$1784.
    dead port 2/2 on $mux $techmap\U$$2.picorv32.$procmux$1786.
    dead port 2/2 on $mux $techmap\U$$2.picorv32.$procmux$1789.
    dead port 2/2 on $mux $techmap\U$$2.picorv32.$procmux$1798.
    dead port 2/2 on $mux $techmap\U$$2.picorv32.$procmux$1801.
    dead port 2/2 on $mux $techmap\U$$2.picorv32.$procmux$1809.
    dead port 2/2 on $mux $techmap\U$$2.picorv32.$procmux$1811.
    dead port 2/2 on $mux $techmap\U$$2.picorv32.$procmux$1814.
    dead port 2/2 on $mux $techmap\U$$2.picorv32.$procmux$1875.
    dead port 2/2 on $mux $techmap\U$$2.picorv32.$procmux$1877.
    dead port 2/2 on $mux $techmap\U$$2.picorv32.$procmux$1880.
    dead port 2/2 on $mux $techmap\U$$2.picorv32.$procmux$2043.
    dead port 1/2 on $mux $techmap\U$$2.picorv32.$procmux$2046.
    dead port 2/2 on $mux $techmap\U$$2.picorv32.$procmux$2048.
    dead port 2/2 on $mux $techmap\U$$2.picorv32.$procmux$2051.
    dead port 1/3 on $pmux $techmap\U$$2.picorv32.$procmux$2110.
    dead port 2/2 on $mux $techmap\U$$2.picorv32.$procmux$2142.
    dead port 2/2 on $mux $techmap\U$$2.picorv32.$procmux$2155.
    dead port 2/2 on $mux $techmap\U$$2.picorv32.$procmux$2168.
    dead port 4/12 on $pmux $techmap\U$$2.picorv32.$procmux$2287.
    dead port 5/12 on $pmux $techmap\U$$2.picorv32.$procmux$2287.
    dead port 6/12 on $pmux $techmap\U$$2.picorv32.$procmux$2287.
    dead port 7/12 on $pmux $techmap\U$$2.picorv32.$procmux$2287.
    dead port 8/12 on $pmux $techmap\U$$2.picorv32.$procmux$2287.
    dead port 10/12 on $pmux $techmap\U$$2.picorv32.$procmux$2287.
    dead port 4/12 on $pmux $techmap\U$$2.picorv32.$procmux$2329.
    dead port 5/12 on $pmux $techmap\U$$2.picorv32.$procmux$2329.
    dead port 6/12 on $pmux $techmap\U$$2.picorv32.$procmux$2329.
    dead port 7/12 on $pmux $techmap\U$$2.picorv32.$procmux$2329.
    dead port 8/12 on $pmux $techmap\U$$2.picorv32.$procmux$2329.
    dead port 10/12 on $pmux $techmap\U$$2.picorv32.$procmux$2329.
    dead port 1/8 on $pmux $techmap\U$$2.picorv32.$procmux$2375.
    dead port 2/8 on $pmux $techmap\U$$2.picorv32.$procmux$2375.
    dead port 3/8 on $pmux $techmap\U$$2.picorv32.$procmux$2375.
    dead port 4/8 on $pmux $techmap\U$$2.picorv32.$procmux$2375.
    dead port 5/8 on $pmux $techmap\U$$2.picorv32.$procmux$2375.
    dead port 6/8 on $pmux $techmap\U$$2.picorv32.$procmux$2375.
    dead port 1/5 on $pmux $techmap\U$$2.picorv32.$procmux$2381.
    dead port 2/5 on $pmux $techmap\U$$2.picorv32.$procmux$2381.
    dead port 3/5 on $pmux $techmap\U$$2.picorv32.$procmux$2381.
    dead port 4/5 on $pmux $techmap\U$$2.picorv32.$procmux$2381.
    dead port 5/5 on $pmux $techmap\U$$2.picorv32.$procmux$2381.
    dead port 4/11 on $pmux $techmap\U$$2.picorv32.$procmux$2418.
    dead port 5/11 on $pmux $techmap\U$$2.picorv32.$procmux$2418.
    dead port 6/11 on $pmux $techmap\U$$2.picorv32.$procmux$2418.
    dead port 7/11 on $pmux $techmap\U$$2.picorv32.$procmux$2418.
    dead port 8/11 on $pmux $techmap\U$$2.picorv32.$procmux$2418.
    dead port 10/11 on $pmux $techmap\U$$2.picorv32.$procmux$2418.
    dead port 1/8 on $pmux $techmap\U$$2.picorv32.$procmux$2622.
    dead port 2/8 on $pmux $techmap\U$$2.picorv32.$procmux$2622.
    dead port 3/8 on $pmux $techmap\U$$2.picorv32.$procmux$2622.
    dead port 4/8 on $pmux $techmap\U$$2.picorv32.$procmux$2622.
    dead port 5/8 on $pmux $techmap\U$$2.picorv32.$procmux$2622.
    dead port 6/8 on $pmux $techmap\U$$2.picorv32.$procmux$2622.
    dead port 4/12 on $pmux $techmap\U$$2.picorv32.$procmux$2709.
    dead port 5/12 on $pmux $techmap\U$$2.picorv32.$procmux$2709.
    dead port 6/12 on $pmux $techmap\U$$2.picorv32.$procmux$2709.
    dead port 7/12 on $pmux $techmap\U$$2.picorv32.$procmux$2709.
    dead port 8/12 on $pmux $techmap\U$$2.picorv32.$procmux$2709.
    dead port 10/12 on $pmux $techmap\U$$2.picorv32.$procmux$2709.
    dead port 4/12 on $pmux $techmap\U$$2.picorv32.$procmux$2909.
    dead port 5/12 on $pmux $techmap\U$$2.picorv32.$procmux$2909.
    dead port 6/12 on $pmux $techmap\U$$2.picorv32.$procmux$2909.
    dead port 7/12 on $pmux $techmap\U$$2.picorv32.$procmux$2909.
    dead port 8/12 on $pmux $techmap\U$$2.picorv32.$procmux$2909.
    dead port 10/12 on $pmux $techmap\U$$2.picorv32.$procmux$2909.
    dead port 4/11 on $pmux $techmap\U$$2.picorv32.$procmux$3093.
    dead port 5/11 on $pmux $techmap\U$$2.picorv32.$procmux$3093.
    dead port 6/11 on $pmux $techmap\U$$2.picorv32.$procmux$3093.
    dead port 7/11 on $pmux $techmap\U$$2.picorv32.$procmux$3093.
    dead port 8/11 on $pmux $techmap\U$$2.picorv32.$procmux$3093.
    dead port 10/11 on $pmux $techmap\U$$2.picorv32.$procmux$3093.
    dead port 1/8 on $pmux $techmap\U$$2.picorv32.$procmux$3143.
    dead port 2/8 on $pmux $techmap\U$$2.picorv32.$procmux$3143.
    dead port 3/8 on $pmux $techmap\U$$2.picorv32.$procmux$3143.
    dead port 4/8 on $pmux $techmap\U$$2.picorv32.$procmux$3143.
    dead port 5/8 on $pmux $techmap\U$$2.picorv32.$procmux$3143.
    dead port 7/8 on $pmux $techmap\U$$2.picorv32.$procmux$3143.
    dead port 1/5 on $pmux $techmap\U$$2.picorv32.$procmux$3265.
    dead port 2/5 on $pmux $techmap\U$$2.picorv32.$procmux$3265.
    dead port 2/2 on $mux $techmap\U$$2.picorv32.$procmux$3270.
    dead port 1/5 on $pmux $techmap\U$$2.picorv32.$procmux$3274.
    dead port 2/5 on $pmux $techmap\U$$2.picorv32.$procmux$3274.
    dead port 2/2 on $mux $techmap\U$$2.picorv32.$procmux$3279.
    dead port 1/8 on $pmux $techmap\U$$2.picorv32.$procmux$3294.
    dead port 2/8 on $pmux $techmap\U$$2.picorv32.$procmux$3294.
    dead port 2/2 on $mux $techmap\U$$2.picorv32.$procmux$4425.
    dead port 2/2 on $mux $techmap\U$$2.picorv32.$procmux$4432.
    dead port 1/4 on $pmux $techmap\U$$2.picorv32.$procmux$4458.
    dead port 3/4 on $pmux $techmap\U$$2.picorv32.$procmux$4458.
    dead port 4/4 on $pmux $techmap\U$$2.picorv32.$procmux$4458.
    dead port 1/3 on $pmux $techmap\U$$2.picorv32.$procmux$4463.
    dead port 3/3 on $pmux $techmap\U$$2.picorv32.$procmux$4463.
Removed 98 multiplexer ports.
<suppressed ~185 debug messages>

3.10.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \top.
    New input vector for $reduce_or cell $techmap\U$$2.picorv32.pcpi_mul.$reduce_or$picorv32.v:2210$718: { \U$$2.picorv32.pcpi_mul.instr_mulhsu \U$$2.picorv32.pcpi_mul.instr_mulh }
    New input vector for $reduce_or cell $techmap\U$$2.picorv32.pcpi_mul.$reduce_or$picorv32.v:2209$717: { \U$$2.picorv32.pcpi_mul.instr_mulhu \U$$2.picorv32.pcpi_mul.instr_mulhsu \U$$2.picorv32.pcpi_mul.instr_mulh }
    New input vector for $reduce_or cell $techmap\U$$2.picorv32.pcpi_mul.$reduce_or$picorv32.v:2208$716: { \U$$2.picorv32.pcpi_mul.instr_mulhu \U$$2.picorv32.pcpi_mul.instr_mulhsu \U$$2.picorv32.pcpi_mul.instr_mulh \U$$2.picorv32.pcpi_mul.instr_mul }
    New input vector for $reduce_or cell $techmap\U$$2.picorv32.$reduce_or$picorv32.v:904$1089: { \U$$2.picorv32.mem_rdata_latched [5] \U$$2.picorv32.mem_rdata_latched [6] \U$$2.picorv32.mem_rdata_latched [7] \U$$2.picorv32.mem_rdata_latched [8] \U$$2.picorv32.mem_rdata_latched [9] \U$$2.picorv32.mem_rdata_latched [10] \U$$2.picorv32.mem_rdata_latched [11] \U$$2.picorv32.mem_rdata_latched [12] }
    New input vector for $reduce_or cell $techmap\U$$2.picorv32.$reduce_or$picorv32.v:862$1057: { \U$$2.picorv32.is_beq_bne_blt_bge_bltu_bgeu \U$$2.picorv32.instr_sltu \U$$2.picorv32.instr_slt \U$$2.picorv32.instr_sltiu \U$$2.picorv32.instr_slti }
    New input vector for $reduce_or cell $techmap\U$$2.picorv32.$reduce_or$picorv32.v:861$1056: { \U$$2.picorv32.instr_lhu \U$$2.picorv32.instr_lbu \U$$2.picorv32.instr_lw }
    New input vector for $reduce_or cell $techmap\U$$2.picorv32.$reduce_or$picorv32.v:860$1055: { \U$$2.picorv32.instr_sltu \U$$2.picorv32.instr_sltiu \U$$2.picorv32.instr_bltu }
    New input vector for $reduce_or cell $techmap\U$$2.picorv32.$reduce_or$picorv32.v:859$1054: { \U$$2.picorv32.instr_slt \U$$2.picorv32.instr_slti \U$$2.picorv32.instr_blt }
    New input vector for $reduce_or cell $techmap\U$$2.picorv32.$reduce_or$picorv32.v:858$1053: { \U$$2.picorv32.instr_sub \U$$2.picorv32.instr_add \U$$2.picorv32.instr_addi \U$$2.picorv32.instr_jalr \U$$2.picorv32.instr_jal \U$$2.picorv32.instr_auipc \U$$2.picorv32.instr_lui }
    New input vector for $reduce_or cell $techmap\U$$2.picorv32.$reduce_or$picorv32.v:857$1052: { \U$$2.picorv32.instr_jal \U$$2.picorv32.instr_auipc \U$$2.picorv32.instr_lui }
    New input vector for $reduce_or cell $techmap\U$$2.picorv32.$reduce_or$picorv32.v:376$927: { \U$$2.picorv32.mem_state [0] \U$$2.picorv32.mem_state [1] }
    New input vector for $reduce_or cell $techmap\U$$2.picorv32.$reduce_or$picorv32.v:1122$1310: { \U$$2.picorv32.is_alu_reg_imm \U$$2.picorv32.is_lb_lh_lw_lbu_lhu \U$$2.picorv32.instr_jalr }
    New input vector for $reduce_or cell $techmap\U$$2.picorv32.$reduce_or$picorv32.v:1120$1308: { \U$$2.picorv32.instr_auipc \U$$2.picorv32.instr_lui }
    New input vector for $reduce_or cell $techmap\U$$2.picorv32.$reduce_or$picorv32.v:1105$1294: { $techmap\U$$2.picorv32.$eq$picorv32.v:1057$1164_Y $techmap\U$$2.picorv32.$eq$picorv32.v:1047$1148_Y $techmap\U$$2.picorv32.$eq$picorv32.v:1043$1142_Y $techmap\U$$2.picorv32.$eq$picorv32.v:1042$1140_Y $techmap\U$$2.picorv32.$eq$picorv32.v:1040$1136_Y $techmap\U$$2.picorv32.$eq$picorv32.v:1038$1132_Y }
    New input vector for $reduce_and cell $techmap\U$$2.picorv32.$reduce_and$picorv32.v:610$1036: { \U$$2.picorv32.mem_rdata [0] \U$$2.picorv32.mem_rdata [1] }
    New input vector for $reduce_and cell $techmap\U$$2.picorv32.$reduce_and$picorv32.v:377$937: { \U$$2.picorv32.mem_rdata_latched [0] \U$$2.picorv32.mem_rdata_latched [1] }
    New input vector for $reduce_and cell $techmap\U$$2.picorv32.$reduce_and$picorv32.v:376$932: { \U$$2.picorv32.mem_state [0] \U$$2.picorv32.mem_state [1] }
    New ctrl vector for $pmux cell $techmap\U$$2.picorv32.$procmux$1747: { }
    New ctrl vector for $pmux cell $techmap\U$$2.picorv32.$procmux$2132: { $techmap\U$$2.picorv32.$procmux$1760_CMP $auto$opt_reduce.cc:132:opt_mux$4731 }
    New ctrl vector for $pmux cell $techmap\U$$2.picorv32.$procmux$2145: { $auto$opt_reduce.cc:132:opt_mux$4733 $techmap\U$$2.picorv32.$procmux$1738_CMP }
    New ctrl vector for $pmux cell $techmap\U$$2.picorv32.$procmux$2158: { $techmap\U$$2.picorv32.$procmux$1787_CMP $auto$opt_reduce.cc:132:opt_mux$4735 }
    New ctrl vector for $pmux cell $techmap\U$$2.picorv32.$procmux$2273: { }
    New ctrl vector for $pmux cell $techmap\U$$2.picorv32.$procmux$2277: $techmap\U$$2.picorv32.$procmux$1749_CMP
    New ctrl vector for $pmux cell $techmap\U$$2.picorv32.$procmux$2283: { }
    New ctrl vector for $pmux cell $techmap\U$$2.picorv32.$procmux$2287: { }
    New ctrl vector for $pmux cell $techmap\U$$2.picorv32.$procmux$2316: $auto$opt_reduce.cc:132:opt_mux$4737
    New ctrl vector for $pmux cell $techmap\U$$2.picorv32.$procmux$2325: $auto$opt_reduce.cc:132:opt_mux$4739
    New ctrl vector for $pmux cell $techmap\U$$2.picorv32.$procmux$2329: { $auto$opt_reduce.cc:132:opt_mux$4743 $auto$opt_reduce.cc:132:opt_mux$4741 }
    New ctrl vector for $pmux cell $techmap\U$$2.picorv32.$procmux$2355: { $techmap\U$$2.picorv32.$procmux$1749_CMP $techmap\U$$2.picorv32.$procmux$1748_CMP $techmap\U$$2.picorv32.$procmux$1787_CMP $techmap\U$$2.picorv32.$procmux$2135_CMP $techmap\U$$2.picorv32.$procmux$1738_CMP }
    New ctrl vector for $pmux cell $techmap\U$$2.picorv32.$procmux$2418: { \U$$2.picorv32.is_slli_srli_srai $auto$opt_reduce.cc:132:opt_mux$4745 }
    New ctrl vector for $pmux cell $techmap\U$$2.picorv32.$procmux$2459: { $techmap\U$$2.picorv32.$eq$picorv32.v:1308$1353_Y $techmap\U$$2.picorv32.$procmux$1787_CMP }
    New ctrl vector for $pmux cell $techmap\U$$2.picorv32.$procmux$2556: { $techmap\U$$2.picorv32.$eq$picorv32.v:1308$1353_Y $techmap\U$$2.picorv32.$procmux$1787_CMP }
    New ctrl vector for $pmux cell $techmap\U$$2.picorv32.$procmux$2599: { $techmap\U$$2.picorv32.$eq$picorv32.v:1308$1353_Y $techmap\U$$2.picorv32.$procmux$1749_CMP $techmap\U$$2.picorv32.$procmux$1748_CMP $techmap\U$$2.picorv32.$procmux$1787_CMP $auto$opt_reduce.cc:132:opt_mux$4747 }
    New ctrl vector for $pmux cell $techmap\U$$2.picorv32.$procmux$2709: { \U$$2.picorv32.instr_trap $techmap\U$$2.picorv32.$logic_and$picorv32.v:1691$1462_Y \U$$2.picorv32.is_slli_srli_srai $auto$opt_reduce.cc:132:opt_mux$4749 }
    New ctrl vector for $pmux cell $techmap\U$$2.picorv32.$procmux$2893: { \U$$2.picorv32.instr_trap \U$$2.picorv32.is_sb_sh_sw }
    New ctrl vector for $pmux cell $techmap\U$$2.picorv32.$procmux$2905: \U$$2.picorv32.is_sb_sh_sw
    New ctrl vector for $pmux cell $techmap\U$$2.picorv32.$procmux$2909: { \U$$2.picorv32.instr_trap $techmap\U$$2.picorv32.$logic_and$picorv32.v:1691$1462_Y $auto$opt_reduce.cc:132:opt_mux$4751 }
    New ctrl vector for $pmux cell $techmap\U$$2.picorv32.$procmux$3093: { $auto$opt_reduce.cc:132:opt_mux$4755 $auto$opt_reduce.cc:132:opt_mux$4753 }
    Consolidated identical input bits for $mux cell $techmap\U$$2.picorv32.$procmux$3257:
      Old ports: A=0, B=32'11111111111111111111111111111111, Y=$techmap\U$$2.picorv32.$0$memwr$\cpuregs$picorv32.v:1339$897_EN[31:0]$1367
      New ports: A=1'0, B=1'1, Y=$techmap\U$$2.picorv32.$0$memwr$\cpuregs$picorv32.v:1339$897_EN[31:0]$1367 [0]
      New connections: $techmap\U$$2.picorv32.$0$memwr$\cpuregs$picorv32.v:1339$897_EN[31:0]$1367 [31:1] = { $techmap\U$$2.picorv32.$0$memwr$\cpuregs$picorv32.v:1339$897_EN[31:0]$1367 [0] $techmap\U$$2.picorv32.$0$memwr$\cpuregs$picorv32.v:1339$897_EN[31:0]$1367 [0] $techmap\U$$2.picorv32.$0$memwr$\cpuregs$picorv32.v:1339$897_EN[31:0]$1367 [0] $techmap\U$$2.picorv32.$0$memwr$\cpuregs$picorv32.v:1339$897_EN[31:0]$1367 [0] $techmap\U$$2.picorv32.$0$memwr$\cpuregs$picorv32.v:1339$897_EN[31:0]$1367 [0] $techmap\U$$2.picorv32.$0$memwr$\cpuregs$picorv32.v:1339$897_EN[31:0]$1367 [0] $techmap\U$$2.picorv32.$0$memwr$\cpuregs$picorv32.v:1339$897_EN[31:0]$1367 [0] $techmap\U$$2.picorv32.$0$memwr$\cpuregs$picorv32.v:1339$897_EN[31:0]$1367 [0] $techmap\U$$2.picorv32.$0$memwr$\cpuregs$picorv32.v:1339$897_EN[31:0]$1367 [0] $techmap\U$$2.picorv32.$0$memwr$\cpuregs$picorv32.v:1339$897_EN[31:0]$1367 [0] $techmap\U$$2.picorv32.$0$memwr$\cpuregs$picorv32.v:1339$897_EN[31:0]$1367 [0] $techmap\U$$2.picorv32.$0$memwr$\cpuregs$picorv32.v:1339$897_EN[31:0]$1367 [0] $techmap\U$$2.picorv32.$0$memwr$\cpuregs$picorv32.v:1339$897_EN[31:0]$1367 [0] $techmap\U$$2.picorv32.$0$memwr$\cpuregs$picorv32.v:1339$897_EN[31:0]$1367 [0] $techmap\U$$2.picorv32.$0$memwr$\cpuregs$picorv32.v:1339$897_EN[31:0]$1367 [0] $techmap\U$$2.picorv32.$0$memwr$\cpuregs$picorv32.v:1339$897_EN[31:0]$1367 [0] $techmap\U$$2.picorv32.$0$memwr$\cpuregs$picorv32.v:1339$897_EN[31:0]$1367 [0] $techmap\U$$2.picorv32.$0$memwr$\cpuregs$picorv32.v:1339$897_EN[31:0]$1367 [0] $techmap\U$$2.picorv32.$0$memwr$\cpuregs$picorv32.v:1339$897_EN[31:0]$1367 [0] $techmap\U$$2.picorv32.$0$memwr$\cpuregs$picorv32.v:1339$897_EN[31:0]$1367 [0] $techmap\U$$2.picorv32.$0$memwr$\cpuregs$picorv32.v:1339$897_EN[31:0]$1367 [0] $techmap\U$$2.picorv32.$0$memwr$\cpuregs$picorv32.v:1339$897_EN[31:0]$1367 [0] $techmap\U$$2.picorv32.$0$memwr$\cpuregs$picorv32.v:1339$897_EN[31:0]$1367 [0] $techmap\U$$2.picorv32.$0$memwr$\cpuregs$picorv32.v:1339$897_EN[31:0]$1367 [0] $techmap\U$$2.picorv32.$0$memwr$\cpuregs$picorv32.v:1339$897_EN[31:0]$1367 [0] $techmap\U$$2.picorv32.$0$memwr$\cpuregs$picorv32.v:1339$897_EN[31:0]$1367 [0] $techmap\U$$2.picorv32.$0$memwr$\cpuregs$picorv32.v:1339$897_EN[31:0]$1367 [0] $techmap\U$$2.picorv32.$0$memwr$\cpuregs$picorv32.v:1339$897_EN[31:0]$1367 [0] $techmap\U$$2.picorv32.$0$memwr$\cpuregs$picorv32.v:1339$897_EN[31:0]$1367 [0] $techmap\U$$2.picorv32.$0$memwr$\cpuregs$picorv32.v:1339$897_EN[31:0]$1367 [0] $techmap\U$$2.picorv32.$0$memwr$\cpuregs$picorv32.v:1339$897_EN[31:0]$1367 [0] }
    New ctrl vector for $pmux cell $techmap\U$$2.picorv32.$procmux$3265: $auto$opt_reduce.cc:132:opt_mux$4757
    New ctrl vector for $pmux cell $techmap\U$$2.picorv32.$procmux$3355: { $techmap\U$$2.picorv32.$procmux$3352_CMP $techmap\U$$2.picorv32.$procmux$3370_CMP $techmap\U$$2.picorv32.$procmux$3348_CMP $auto$opt_reduce.cc:132:opt_mux$4759 }
    New ctrl vector for $pmux cell $techmap\U$$2.picorv32.$procmux$3373: $auto$opt_reduce.cc:132:opt_mux$4761
    New ctrl vector for $pmux cell $techmap\U$$2.picorv32.$procmux$3441: { $techmap\U$$2.picorv32.$procmux$3352_CMP $techmap\U$$2.picorv32.$procmux$3370_CMP $techmap\U$$2.picorv32.$procmux$3348_CMP $auto$opt_reduce.cc:132:opt_mux$4763 }
    New ctrl vector for $pmux cell $techmap\U$$2.picorv32.$procmux$3459: { $techmap\U$$2.picorv32.$procmux$3352_CMP $auto$opt_reduce.cc:132:opt_mux$4765 }
    New ctrl vector for $pmux cell $techmap\U$$2.picorv32.$procmux$3507: { $auto$opt_reduce.cc:132:opt_mux$4767 $techmap\U$$2.picorv32.$procmux$3370_CMP $techmap\U$$2.picorv32.$procmux$3348_CMP }
    New ctrl vector for $pmux cell $techmap\U$$2.picorv32.$procmux$3528: $auto$opt_reduce.cc:132:opt_mux$4769
    New ctrl vector for $pmux cell $techmap\U$$2.picorv32.$procmux$3649: { $techmap\U$$2.picorv32.$procmux$3657_CMP $auto$opt_reduce.cc:132:opt_mux$4771 $techmap\U$$2.picorv32.$procmux$3370_CMP $techmap\U$$2.picorv32.$procmux$3348_CMP }
    New ctrl vector for $pmux cell $techmap\U$$2.picorv32.$procmux$3661: $auto$opt_reduce.cc:132:opt_mux$4773
    New ctrl vector for $pmux cell $techmap\U$$2.picorv32.$procmux$3817: $auto$opt_reduce.cc:132:opt_mux$4775
    New ctrl vector for $pmux cell $techmap\U$$2.picorv32.$procmux$4204: { $techmap\U$$2.picorv32.$procmux$3348_CMP $auto$opt_reduce.cc:132:opt_mux$4777 }
    New ctrl vector for $pmux cell $techmap\U$$2.picorv32.$procmux$4219: { $techmap\U$$2.picorv32.$procmux$3348_CMP $auto$opt_reduce.cc:132:opt_mux$4779 }
    New ctrl vector for $pmux cell $techmap\U$$2.picorv32.$procmux$4237: $auto$opt_reduce.cc:132:opt_mux$4781
    New ctrl vector for $pmux cell $techmap\U$$2.picorv32.$procmux$4250: $auto$opt_reduce.cc:132:opt_mux$4783
    New ctrl vector for $pmux cell $techmap\U$$2.picorv32.$procmux$4275: { $auto$opt_reduce.cc:132:opt_mux$4785 $techmap\U$$2.picorv32.$procmux$3370_CMP $techmap\U$$2.picorv32.$procmux$3348_CMP }
    New ctrl vector for $pmux cell $techmap\U$$2.picorv32.$procmux$4310: { $techmap\U$$2.picorv32.$procmux$3352_CMP $techmap\U$$2.picorv32.$procmux$3348_CMP $auto$opt_reduce.cc:132:opt_mux$4787 }
    New ctrl vector for $pmux cell $techmap\U$$2.picorv32.$procmux$4325: { $techmap\U$$2.picorv32.$procmux$3370_CMP $techmap\U$$2.picorv32.$procmux$3348_CMP $auto$opt_reduce.cc:132:opt_mux$4789 $techmap\U$$2.picorv32.$procmux$3356_CMP }
    New ctrl vector for $pmux cell $techmap\U$$2.picorv32.$procmux$4352: { $techmap\U$$2.picorv32.$procmux$3352_CMP $auto$opt_reduce.cc:132:opt_mux$4791 }
    New ctrl vector for $pmux cell $techmap\U$$2.picorv32.$procmux$4365: $auto$opt_reduce.cc:132:opt_mux$4793
    New ctrl vector for $pmux cell $techmap\U$$2.picorv32.$procmux$4391: { $auto$opt_reduce.cc:132:opt_mux$4797 $techmap\U$$2.picorv32.$procmux$3370_CMP $techmap\U$$2.picorv32.$procmux$3348_CMP $auto$opt_reduce.cc:132:opt_mux$4795 }
    New ctrl vector for $pmux cell $techmap\U$$2.picorv32.$procmux$4410: { $techmap\U$$2.picorv32.$procmux$3352_CMP $auto$opt_reduce.cc:132:opt_mux$4799 }
    New input vector for $reduce_or cell $auto$opt_reduce.cc:126:opt_mux$4730: { $techmap\U$$2.picorv32.$procmux$2140_CMP $techmap\U$$2.picorv32.$procmux$2135_CMP $techmap\U$$2.picorv32.$procmux$1787_CMP $techmap\U$$2.picorv32.$procmux$1749_CMP $techmap\U$$2.picorv32.$procmux$1748_CMP $techmap\U$$2.picorv32.$procmux$1738_CMP $techmap\U$$2.picorv32.$eq$picorv32.v:1308$1353_Y }
    New input vector for $reduce_or cell $auto$opt_reduce.cc:126:opt_mux$4732: { $techmap\U$$2.picorv32.$procmux$2140_CMP $techmap\U$$2.picorv32.$procmux$2135_CMP $techmap\U$$2.picorv32.$procmux$1787_CMP $techmap\U$$2.picorv32.$procmux$1760_CMP $techmap\U$$2.picorv32.$procmux$1749_CMP $techmap\U$$2.picorv32.$procmux$1748_CMP $techmap\U$$2.picorv32.$eq$picorv32.v:1308$1353_Y }
    New input vector for $reduce_or cell $auto$opt_reduce.cc:126:opt_mux$4734: { $techmap\U$$2.picorv32.$procmux$2140_CMP $techmap\U$$2.picorv32.$procmux$2135_CMP $techmap\U$$2.picorv32.$procmux$1760_CMP $techmap\U$$2.picorv32.$procmux$1749_CMP $techmap\U$$2.picorv32.$procmux$1748_CMP $techmap\U$$2.picorv32.$procmux$1738_CMP $techmap\U$$2.picorv32.$eq$picorv32.v:1308$1353_Y }
    New input vector for $reduce_or cell $auto$opt_reduce.cc:126:opt_mux$4736: { \U$$2.picorv32.is_sll_srl_sra \U$$2.picorv32.is_sb_sh_sw \U$$2.picorv32.instr_trap }
    New input vector for $reduce_or cell $auto$opt_reduce.cc:126:opt_mux$4738: { \U$$2.picorv32.is_sll_srl_sra \U$$2.picorv32.is_sb_sh_sw }
    New input vector for $reduce_or cell $auto$opt_reduce.cc:126:opt_mux$4740: { \U$$2.picorv32.is_jalr_addi_slti_sltiu_xori_ori_andi \U$$2.picorv32.is_lui_auipc_jal }
    New input vector for $reduce_or cell $auto$opt_reduce.cc:126:opt_mux$4742: { $techmap\U$$2.picorv32.$logic_and$picorv32.v:1691$1462_Y \U$$2.picorv32.is_slli_srli_srai \U$$2.picorv32.instr_trap }
    New input vector for $reduce_or cell $auto$opt_reduce.cc:126:opt_mux$4744: { $techmap\U$$2.picorv32.$logic_and$picorv32.v:1691$1462_Y \U$$2.picorv32.is_jalr_addi_slti_sltiu_xori_ori_andi \U$$2.picorv32.is_lui_auipc_jal }
    New input vector for $reduce_or cell $auto$opt_reduce.cc:126:opt_mux$4748: { \U$$2.picorv32.is_jalr_addi_slti_sltiu_xori_ori_andi \U$$2.picorv32.is_lui_auipc_jal }
    New input vector for $reduce_or cell $auto$opt_reduce.cc:126:opt_mux$4750: { \U$$2.picorv32.is_jalr_addi_slti_sltiu_xori_ori_andi \U$$2.picorv32.is_slli_srli_srai \U$$2.picorv32.is_lui_auipc_jal }
    New input vector for $reduce_or cell $auto$opt_reduce.cc:126:opt_mux$4752: { \U$$2.picorv32.is_jalr_addi_slti_sltiu_xori_ori_andi \U$$2.picorv32.is_lui_auipc_jal }
    New input vector for $reduce_or cell $auto$opt_reduce.cc:126:opt_mux$4756: { $techmap\U$$2.picorv32.$logic_and$picorv32.v:1315$1357_Y \U$$2.picorv32.latched_branch }
    New input vector for $reduce_or cell $auto$opt_reduce.cc:126:opt_mux$4766: { $techmap\U$$2.picorv32.$procmux$3375_CMP $techmap\U$$2.picorv32.$procmux$3352_CMP }
    New input vector for $reduce_or cell $auto$opt_reduce.cc:126:opt_mux$4770: { $techmap\U$$2.picorv32.$procmux$3375_CMP $techmap\U$$2.picorv32.$procmux$3352_CMP }
    New input vector for $reduce_or cell $auto$opt_reduce.cc:126:opt_mux$4772: { $techmap\U$$2.picorv32.$procmux$3375_CMP $techmap\U$$2.picorv32.$procmux$3352_CMP }
    New input vector for $reduce_or cell $auto$opt_reduce.cc:126:opt_mux$4774: { $techmap\U$$2.picorv32.$procmux$3818_CMP $techmap\U$$2.picorv32.$procmux$3657_CMP }
    New input vector for $reduce_or cell $auto$opt_reduce.cc:126:opt_mux$4776: { $techmap\U$$2.picorv32.$procmux$3375_CMP $techmap\U$$2.picorv32.$procmux$3357_CMP $techmap\U$$2.picorv32.$procmux$3352_CMP }
    New input vector for $reduce_or cell $auto$opt_reduce.cc:126:opt_mux$4778: { $techmap\U$$2.picorv32.$procmux$3375_CMP $techmap\U$$2.picorv32.$procmux$3370_CMP $techmap\U$$2.picorv32.$procmux$3357_CMP $techmap\U$$2.picorv32.$procmux$3356_CMP $techmap\U$$2.picorv32.$procmux$3352_CMP }
    New input vector for $reduce_or cell $auto$opt_reduce.cc:126:opt_mux$4780: { $techmap\U$$2.picorv32.$procmux$3375_CMP $techmap\U$$2.picorv32.$procmux$3357_CMP $techmap\U$$2.picorv32.$procmux$3352_CMP }
    New input vector for $reduce_or cell $auto$opt_reduce.cc:126:opt_mux$4784: { $techmap\U$$2.picorv32.$procmux$3375_CMP $techmap\U$$2.picorv32.$procmux$3352_CMP }
    New input vector for $reduce_or cell $auto$opt_reduce.cc:126:opt_mux$4788: { $techmap\U$$2.picorv32.$procmux$3375_CMP $techmap\U$$2.picorv32.$procmux$3357_CMP $techmap\U$$2.picorv32.$procmux$3352_CMP }
    New input vector for $reduce_or cell $auto$opt_reduce.cc:126:opt_mux$4796: { $techmap\U$$2.picorv32.$procmux$3375_CMP $techmap\U$$2.picorv32.$procmux$3352_CMP }
    New ctrl vector for $mux cell $techmap\U$$2.picorv32.$procmux$2277: { }
    New ctrl vector for $mux cell $techmap\U$$2.picorv32.$procmux$2301: { }
  Optimizing cells in module \top.
Performed a total of 84 changes.

3.10.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\top'.
<suppressed ~132 debug messages>
Removed a total of 44 cells.

3.10.6. Executing OPT_RMDFF pass (remove dff with constant values).
Removing $techmap\U$$2.picorv32.$procdff$4649 ($dff) from module top.
Removing $techmap\U$$2.picorv32.$procdff$4650 ($dff) from module top.
Removing $techmap\U$$2.picorv32.$procdff$4651 ($dff) from module top.
Removing $techmap\U$$2.picorv32.$procdff$4652 ($dff) from module top.
Removing $techmap\U$$2.picorv32.$procdff$4654 ($dff) from module top.
Removing $techmap\U$$2.picorv32.$procdff$4655 ($dff) from module top.
Removing $techmap\U$$2.picorv32.$procdff$4656 ($dff) from module top.
Removing $techmap\U$$2.picorv32.$procdff$4657 ($dff) from module top.
Removing $techmap\U$$2.picorv32.$procdff$4658 ($dff) from module top.
Removing $techmap\U$$2.picorv32.$procdff$4659 ($dff) from module top.
Removing $techmap\U$$2.picorv32.$procdff$4559 ($dff) from module top.
Removing $techmap\U$$2.picorv32.$procdff$4569 ($dff) from module top.
Removing $techmap\U$$2.picorv32.$procdff$4586 ($dff) from module top.
Removing $techmap\U$$2.picorv32.$procdff$4602 ($dff) from module top.
Replaced 14 DFF cells.

3.10.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \top..
Removed 28 unused cells and 519 unused wires.
<suppressed ~41 debug messages>

3.10.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module top.
<suppressed ~7 debug messages>

3.10.9. Rerunning OPT passes. (Maybe there is more to do..)

3.10.10. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \top..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
      Replacing known input bits on port B of cell $techmap\U$$2.picorv32.$procmux$2613: \U$$2.picorv32.pcpi_mul.pcpi_wr -> 1'1
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~169 debug messages>

3.10.11. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \top.
    New ctrl vector for $pmux cell $techmap\U$$2.picorv32.$procmux$2226: $auto$opt_reduce.cc:132:opt_mux$4801
    New ctrl vector for $pmux cell $techmap\U$$2.picorv32.$procmux$2243: { $techmap\U$$2.picorv32.$procmux$1787_CMP $auto$opt_reduce.cc:132:opt_mux$4803 }
    New ctrl vector for $pmux cell $techmap\U$$2.picorv32.$procmux$2310: { $techmap\U$$2.picorv32.$procmux$1749_CMP $techmap\U$$2.picorv32.$procmux$1748_CMP }
    New ctrl vector for $pmux cell $techmap\U$$2.picorv32.$procmux$2355: { $auto$opt_reduce.cc:132:opt_mux$4805 $techmap\U$$2.picorv32.$procmux$1787_CMP $techmap\U$$2.picorv32.$procmux$2135_CMP $techmap\U$$2.picorv32.$procmux$1738_CMP }
    New ctrl vector for $pmux cell $techmap\U$$2.picorv32.$procmux$2599: { $techmap\U$$2.picorv32.$eq$picorv32.v:1308$1353_Y $auto$opt_reduce.cc:132:opt_mux$4807 $techmap\U$$2.picorv32.$procmux$1787_CMP $auto$opt_reduce.cc:132:opt_mux$4747 }
    New ctrl vector for $pmux cell $techmap\U$$2.picorv32.$procmux$2668: { $techmap\U$$2.picorv32.$eq$picorv32.v:1308$1353_Y $techmap\U$$2.picorv32.$procmux$1749_CMP $techmap\U$$2.picorv32.$procmux$1748_CMP $techmap\U$$2.picorv32.$procmux$1787_CMP $techmap\U$$2.picorv32.$procmux$2135_CMP $auto$opt_reduce.cc:132:opt_mux$4809 }
    New ctrl vector for $pmux cell $techmap\U$$2.picorv32.$procmux$3232: $auto$opt_reduce.cc:132:opt_mux$4811
    New ctrl vector for $pmux cell $techmap\U$$2.picorv32.$procmux$3543: $auto$opt_reduce.cc:132:opt_mux$4813
    New ctrl vector for $pmux cell $techmap\U$$2.picorv32.$procmux$4248: { $techmap\U$$2.picorv32.$procmux$3372_CMP $auto$opt_reduce.cc:132:opt_mux$4815 }
  Optimizing cells in module \top.
Performed a total of 9 changes.

3.10.12. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\top'.
<suppressed ~15 debug messages>
Removed a total of 5 cells.

3.10.13. Executing OPT_RMDFF pass (remove dff with constant values).

3.10.14. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \top..
Removed 0 unused cells and 12 unused wires.
<suppressed ~1 debug messages>

3.10.15. Executing OPT_EXPR pass (perform const folding).
Optimizing module top.

3.10.16. Rerunning OPT passes. (Maybe there is more to do..)

3.10.17. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \top..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~169 debug messages>

3.10.18. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \top.
Performed a total of 0 changes.

3.10.19. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\top'.
Removed a total of 0 cells.

3.10.20. Executing OPT_RMDFF pass (remove dff with constant values).

3.10.21. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \top..

3.10.22. Executing OPT_EXPR pass (perform const folding).
Optimizing module top.

3.10.23. Finished OPT passes. (There is nothing left to do.)

3.11. Executing WREDUCE pass (reducing word size of cells).
Removed top 1 address bits (of 11) from memory init port top.$techmap\U$$0.sincos_lookup.$1 (U$$0.sincos_lookup.quarter_sin_mem).
Removed top 1 bits (of 9) from port Y of cell top.$techmap\cd_sync.$7 ($add).
Removed top 2 bits (of 32) from port A of cell top.$techmap\U$$2.$13 ($lt).
Removed top 1 bits (of 33) from port Y of cell top.$techmap\U$$0.$3 ($add).
Removed top 31 bits (of 32) from FF cell top.$techmap\U$$2.picorv32.$procdff$4609 ($dff).
Removed top 1 bits (of 2) from port B of cell top.$techmap\U$$2.picorv32.$procmux$4433_CMP0 ($eq).
Removed top 16 bits (of 32) from mux cell top.$techmap\U$$2.picorv32.$procmux$4429 ($pmux).
Removed top 1 bits (of 2) from port B of cell top.$techmap\U$$2.picorv32.$procmux$4423_CMP0 ($eq).
Removed top 24 bits (of 32) from mux cell top.$techmap\U$$2.picorv32.$procmux$4420 ($pmux).
Removed top 2 bits (of 6) from mux cell top.$techmap\U$$2.picorv32.$procmux$4404 ($mux).
Removed top 1 bits (of 2) from port B of cell top.$techmap\U$$2.picorv32.$procmux$4089_CMP0 ($eq).
Removed top 2 bits (of 3) from port B of cell top.$techmap\U$$2.picorv32.$procmux$3657_CMP0 ($eq).
Removed top 2 bits (of 4) from mux cell top.$techmap\U$$2.picorv32.$procmux$3433 ($mux).
Removed top 1 bits (of 3) from port B of cell top.$techmap\U$$2.picorv32.$procmux$3375_CMP0 ($eq).
Removed top 1 bits (of 2) from port B of cell top.$techmap\U$$2.picorv32.$procmux$3372_CMP0 ($eq).
Removed top 1 bits (of 3) from port B of cell top.$techmap\U$$2.picorv32.$procmux$3370_CMP0 ($eq).
Removed cell top.$techmap\U$$2.picorv32.$procmux$3282 ($mux).
Removed cell top.$techmap\U$$2.picorv32.$procmux$3261 ($mux).
Removed cell top.$techmap\U$$2.picorv32.$procmux$3259 ($mux).
Removed top 4 bits (of 8) from mux cell top.$techmap\U$$2.picorv32.$procmux$2705 ($pmux).
Removed cell top.$techmap\U$$2.picorv32.$procmux$2431 ($mux).
Removed cell top.$techmap\U$$2.picorv32.$procmux$2412 ($mux).
Removed cell top.$techmap\U$$2.picorv32.$procmux$2403 ($mux).
Removed cell top.$techmap\U$$2.picorv32.$procmux$2368 ($mux).
Removed cell top.$techmap\U$$2.picorv32.$procmux$2366 ($mux).
Removed cell top.$techmap\U$$2.picorv32.$procmux$2358 ($mux).
Removed cell top.$techmap\U$$2.picorv32.$procmux$2353 ($mux).
Removed cell top.$techmap\U$$2.picorv32.$procmux$2351 ($mux).
Removed top 5 bits (of 8) from port B of cell top.$techmap\U$$2.picorv32.$procmux$2135_CMP0 ($eq).
Removed cell top.$techmap\U$$2.picorv32.$procmux$2116 ($mux).
Removed cell top.$techmap\U$$2.picorv32.$procmux$2113 ($mux).
Removed top 4 bits (of 8) from port B of cell top.$techmap\U$$2.picorv32.$procmux$1787_CMP0 ($eq).
Removed top 6 bits (of 8) from port B of cell top.$techmap\U$$2.picorv32.$procmux$1760_CMP0 ($eq).
Removed top 2 bits (of 8) from port B of cell top.$techmap\U$$2.picorv32.$procmux$1749_CMP0 ($eq).
Removed top 3 bits (of 8) from port B of cell top.$techmap\U$$2.picorv32.$procmux$1748_CMP0 ($eq).
Removed top 7 bits (of 8) from port B of cell top.$techmap\U$$2.picorv32.$procmux$1738_CMP0 ($eq).
Removed top 31 bits (of 32) from port B of cell top.$techmap\U$$2.picorv32.$sub$picorv32.v:1845$1509 ($sub).
Removed top 27 bits (of 32) from port Y of cell top.$techmap\U$$2.picorv32.$sub$picorv32.v:1845$1509 ($sub).
Removed top 29 bits (of 32) from mux cell top.$techmap\U$$2.picorv32.$ternary$picorv32.v:1555$1435 ($mux).
Removed top 29 bits (of 32) from mux cell top.$techmap\U$$2.picorv32.$ternary$picorv32.v:1312$1354 ($mux).
Removed top 1 bits (of 8) from port B of cell top.$techmap\U$$2.picorv32.$eq$picorv32.v:1308$1353 ($eq).
Removed top 1 bits (of 7) from port B of cell top.$techmap\U$$2.picorv32.$eq$picorv32.v:1064$1182 ($eq).
Removed top 1 bits (of 3) from port B of cell top.$techmap\U$$2.picorv32.$eq$picorv32.v:1057$1164 ($eq).
Removed top 1 bits (of 3) from port B of cell top.$techmap\U$$2.picorv32.$eq$picorv32.v:1047$1148 ($eq).
Removed top 2 bits (of 3) from port B of cell top.$techmap\U$$2.picorv32.$eq$picorv32.v:1039$1134 ($eq).
Removed top 28 bits (of 32) from port A of cell top.$techmap\U$$2.picorv32.$add$picorv32.v:910$1091 ($add).
Removed top 27 bits (of 32) from port Y of cell top.$techmap\U$$2.picorv32.$add$picorv32.v:910$1091 ($add).
Removed top 28 bits (of 32) from port A of cell top.$techmap\U$$2.picorv32.$add$picorv32.v:906$1090 ($add).
Removed top 27 bits (of 32) from port Y of cell top.$techmap\U$$2.picorv32.$add$picorv32.v:906$1090 ($add).
Removed top 1 bits (of 7) from port B of cell top.$techmap\U$$2.picorv32.$eq$picorv32.v:876$1077 ($eq).
Removed top 2 bits (of 7) from port B of cell top.$techmap\U$$2.picorv32.$eq$picorv32.v:875$1076 ($eq).
Removed top 1 bits (of 7) from port B of cell top.$techmap\U$$2.picorv32.$eq$picorv32.v:874$1075 ($eq).
Removed top 5 bits (of 7) from port B of cell top.$techmap\U$$2.picorv32.$eq$picorv32.v:873$1074 ($eq).
Removed top 2 bits (of 7) from port B of cell top.$techmap\U$$2.picorv32.$eq$picorv32.v:866$1060 ($eq).
Removed top 1 bits (of 7) from port B of cell top.$techmap\U$$2.picorv32.$eq$picorv32.v:865$1059 ($eq).
Removed top 30 bits (of 32) from mux cell top.$techmap\U$$2.picorv32.$ternary$picorv32.v:617$1040 ($mux).
Removed top 1 bits (of 7) from mux cell top.$techmap\U$$2.picorv32.$ternary$picorv32.v:491$996 ($mux).
Removed top 1 bits (of 2) from port B of cell top.$techmap\U$$2.picorv32.$eq$picorv32.v:488$992 ($eq).
Removed top 1 bits (of 3) from port B of cell top.$techmap\U$$2.picorv32.$eq$picorv32.v:486$990 ($eq).
Removed top 1 bits (of 2) from port B of cell top.$techmap\U$$2.picorv32.$eq$picorv32.v:478$988 ($eq).
Removed top 3 bits (of 5) from port B of cell top.$techmap\U$$2.picorv32.$eq$picorv32.v:465$986 ($eq).
Removed top 3 bits (of 4) from port A of cell top.$techmap\U$$2.picorv32.$shl$picorv32.v:419$979 ($shl).
Removed top 16 bits (of 32) from mux cell top.$techmap\U$$2.picorv32.$ternary$picorv32.v:388$971 ($mux).
Removed top 16 bits (of 32) from mux cell top.$techmap\U$$2.picorv32.$ternary$picorv32.v:388$969 ($mux).
Removed top 2 bits (of 3) from port B of cell top.$techmap\U$$2.picorv32.pcpi_mul.$procmux$4536_CMP0 ($eq).
Removed top 1 bits (of 3) from port B of cell top.$techmap\U$$2.picorv32.pcpi_mul.$procmux$4530_CMP0 ($eq).
Removed top 1 bits (of 3) from port B of cell top.$techmap\U$$2.picorv32.pcpi_mul.$procmux$4525_CMP0 ($eq).
Removed top 3 bits (of 64) from mux cell top.$techmap\U$$2.picorv32.pcpi_mul.$procmux$4495 ($mux).
Removed top 32 bits (of 64) from mux cell top.$techmap\U$$2.picorv32.pcpi_mul.$ternary$picorv32.v:2308$774 ($mux).
Removed top 31 bits (of 32) from port B of cell top.$techmap\U$$2.picorv32.pcpi_mul.$sub$picorv32.v:2294$770 ($sub).
Removed top 25 bits (of 32) from port Y of cell top.$techmap\U$$2.picorv32.pcpi_mul.$sub$picorv32.v:2294$770 ($sub).
Removed top 26 bits (of 32) from mux cell top.$techmap\U$$2.picorv32.pcpi_mul.$ternary$picorv32.v:2286$768 ($mux).
Removed top 1 bits (of 5) from port Y of cell top.$techmap\U$$2.picorv32.pcpi_mul.$add$picorv32.v:2260$762 ($add).
Removed top 1 bits (of 5) from port A of cell top.$techmap\U$$2.picorv32.pcpi_mul.$add$picorv32.v:2260$762 ($add).
Removed top 1 bits (of 5) from port Y of cell top.$techmap\U$$2.picorv32.pcpi_mul.$add$picorv32.v:2260$761 ($add).
Removed top 6 bits (of 7) from port B of cell top.$techmap\U$$2.picorv32.pcpi_mul.$eq$picorv32.v:2222$726 ($eq).
Removed top 1 bits (of 7) from port B of cell top.$techmap\U$$2.picorv32.pcpi_mul.$eq$picorv32.v:2222$724 ($eq).
Removed top 1 bits (of 33) from wire top.$techmap\U$$0.$1.
Removed top 16 bits (of 32) from wire top.$techmap\U$$2.picorv32.$2\mem_rdata_word[31:0].
Removed top 24 bits (of 32) from wire top.$techmap\U$$2.picorv32.$3\mem_rdata_word[31:0].
Removed top 27 bits (of 32) from wire top.$techmap\U$$2.picorv32.$add$picorv32.v:906$1090_Y.
Removed top 27 bits (of 32) from wire top.$techmap\U$$2.picorv32.$add$picorv32.v:910$1091_Y.
Removed top 4 bits (of 8) from wire top.$techmap\U$$2.picorv32.$procmux$2705_Y.
Removed top 2 bits (of 4) from wire top.$techmap\U$$2.picorv32.$procmux$3433_Y.
Removed top 29 bits (of 32) from wire top.$techmap\U$$2.picorv32.$ternary$picorv32.v:1312$1354_Y.
Removed top 29 bits (of 32) from wire top.$techmap\U$$2.picorv32.$ternary$picorv32.v:1555$1435_Y.
Removed top 1 bits (of 7) from wire top.$techmap\U$$2.picorv32.$ternary$picorv32.v:491$996_Y.
Removed top 30 bits (of 32) from wire top.$techmap\U$$2.picorv32.$ternary$picorv32.v:617$1040_Y.
Removed top 1 bits (of 5) from wire top.$techmap\U$$2.picorv32.pcpi_mul.$add$picorv32.v:2260$761_Y.
Removed top 3 bits (of 64) from wire top.$techmap\U$$2.picorv32.pcpi_mul.$procmux$4495_Y.
Removed top 28 bits (of 64) from wire top.$techmap\U$$2.picorv32.pcpi_mul.$procmux$4501_Y.
Removed top 60 bits (of 64) from wire top.$techmap\U$$2.picorv32.pcpi_mul.$procmux$4508_Y.
Removed top 25 bits (of 32) from wire top.$techmap\U$$2.picorv32.pcpi_mul.$sub$picorv32.v:2294$770_Y.
Removed top 26 bits (of 32) from wire top.$techmap\U$$2.picorv32.pcpi_mul.$ternary$picorv32.v:2286$768_Y.
Removed top 32 bits (of 64) from wire top.$techmap\U$$2.picorv32.pcpi_mul.$ternary$picorv32.v:2308$774_Y.
Removed top 1 bits (of 9) from wire top.$techmap\cd_sync.$5.
Removed top 4 bits (of 64) from wire top.U$$2.picorv32.pcpi_mul.next_rdt.
Removed top 3 bits (of 64) from wire top.U$$2.picorv32.pcpi_mul.next_rdx.
Removed top 1 bits (of 64) from wire top.U$$2.picorv32.pcpi_mul.next_rs1.

3.12. Executing PEEPOPT pass (run peephole optimizers).

3.13. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \top..
Removed 0 unused cells and 36 unused wires.
<suppressed ~1 debug messages>

3.14. Executing SHARE pass (SAT-based resource sharing).
Found 2 cells in module top that may be considered for resource sharing.
  Analyzing resource sharing options for $techmap\U$$2.picorv32.$memrd$\cpuregs$picorv32.v:1348$1374 ($memrd):
    Found 4 activation_patterns using ctrl signal { $auto$opt_reduce.cc:132:opt_mux$4755 $auto$opt_reduce.cc:132:opt_mux$4745 $auto$opt_reduce.cc:132:opt_mux$4741 \U$$2.picorv32.is_slli_srli_srai $techmap\U$$2.picorv32.$reduce_bool$picorv32.v:1348$1375_Y $techmap\U$$2.picorv32.$procmux$1748_CMP $techmap\U$$2.picorv32.$procmux$1749_CMP \cd_sync.ready }.
    Found 1 candidates: $techmap\U$$2.picorv32.$memrd$\cpuregs$picorv32.v:1347$1371
    Analyzing resource sharing with $techmap\U$$2.picorv32.$memrd$\cpuregs$picorv32.v:1347$1371 ($memrd):
      Found 1 activation_patterns using ctrl signal { \U$$2.picorv32.is_lui_auipc_jal $techmap\U$$2.picorv32.$reduce_bool$picorv32.v:1347$1372_Y $techmap\U$$2.picorv32.$procmux$1749_CMP \cd_sync.ready }.
      Activation pattern for cell $techmap\U$$2.picorv32.$memrd$\cpuregs$picorv32.v:1348$1374: { $auto$opt_reduce.cc:132:opt_mux$4755 $auto$opt_reduce.cc:132:opt_mux$4741 $techmap\U$$2.picorv32.$reduce_bool$picorv32.v:1348$1375_Y $techmap\U$$2.picorv32.$procmux$1749_CMP \cd_sync.ready } = 5'00111
      Activation pattern for cell $techmap\U$$2.picorv32.$memrd$\cpuregs$picorv32.v:1348$1374: { $techmap\U$$2.picorv32.$reduce_bool$picorv32.v:1348$1375_Y $techmap\U$$2.picorv32.$procmux$1748_CMP \cd_sync.ready } = 3'111
      Activation pattern for cell $techmap\U$$2.picorv32.$memrd$\cpuregs$picorv32.v:1348$1374: { $auto$opt_reduce.cc:132:opt_mux$4745 \U$$2.picorv32.is_slli_srli_srai $techmap\U$$2.picorv32.$reduce_bool$picorv32.v:1348$1375_Y $techmap\U$$2.picorv32.$procmux$1749_CMP } = 4'0011
      Activation pattern for cell $techmap\U$$2.picorv32.$memrd$\cpuregs$picorv32.v:1348$1374: { $techmap\U$$2.picorv32.$reduce_bool$picorv32.v:1348$1375_Y $techmap\U$$2.picorv32.$procmux$1748_CMP } = 2'11
      Activation pattern for cell $techmap\U$$2.picorv32.$memrd$\cpuregs$picorv32.v:1347$1371: { \U$$2.picorv32.is_lui_auipc_jal $techmap\U$$2.picorv32.$reduce_bool$picorv32.v:1347$1372_Y $techmap\U$$2.picorv32.$procmux$1749_CMP \cd_sync.ready } = 4'0111
      Adding exclusive control bits: $techmap\U$$2.picorv32.$procmux$1749_CMP vs. $techmap\U$$2.picorv32.$procmux$1748_CMP
      Adding exclusive control bits: $techmap\U$$2.picorv32.$procmux$1749_CMP vs. $techmap\U$$2.picorv32.$procmux$1748_CMP
      Adding exclusive control bits: \U$$2.picorv32.is_slli_srli_srai vs. $auto$opt_reduce.cc:132:opt_mux$4745
      Adding exclusive control bits: $techmap\U$$2.picorv32.$procmux$1749_CMP vs. $techmap\U$$2.picorv32.$procmux$1748_CMP
      Adding exclusive control bits: \U$$2.picorv32.is_slli_srli_srai vs. $auto$opt_reduce.cc:132:opt_mux$4741
      Adding exclusive control bits: \U$$2.picorv32.is_slli_srli_srai vs. \U$$2.picorv32.instr_trap
      Adding exclusive control bits: $techmap\U$$2.picorv32.$logic_and$picorv32.v:1691$1462_Y vs. $auto$opt_reduce.cc:132:opt_mux$4741
      Adding exclusive control bits: $techmap\U$$2.picorv32.$logic_and$picorv32.v:1691$1462_Y vs. \U$$2.picorv32.is_slli_srli_srai
      Adding exclusive control bits: $techmap\U$$2.picorv32.$logic_and$picorv32.v:1691$1462_Y vs. \U$$2.picorv32.instr_trap
      Adding exclusive control bits: \U$$2.picorv32.instr_trap vs. $auto$opt_reduce.cc:132:opt_mux$4741
      Adding exclusive control bits: $techmap\U$$2.picorv32.$procmux$1749_CMP vs. $techmap\U$$2.picorv32.$procmux$1748_CMP
      Adding exclusive control bits: $techmap\U$$2.picorv32.$logic_and$picorv32.v:1691$1462_Y vs. \U$$2.picorv32.instr_trap
      Adding exclusive control bits: \U$$2.picorv32.instr_sw vs. \U$$2.picorv32.instr_sh
      Adding exclusive control bits: \U$$2.picorv32.instr_sw vs. \U$$2.picorv32.instr_sb
      Adding exclusive control bits: \U$$2.picorv32.instr_sh vs. \U$$2.picorv32.instr_sb
      Adding exclusive control bits: $techmap\U$$2.picorv32.$procmux$1749_CMP vs. $techmap\U$$2.picorv32.$procmux$1748_CMP
      Adding exclusive control bits: $auto$opt_reduce.cc:132:opt_mux$4741 vs. $auto$opt_reduce.cc:132:opt_mux$4755
      Adding exclusive control bits: \U$$2.picorv32.instr_bgeu vs. \U$$2.picorv32.instr_bge
      Adding exclusive control bits: \U$$2.picorv32.instr_bgeu vs. \U$$2.picorv32.instr_bne
      Adding exclusive control bits: \U$$2.picorv32.instr_bgeu vs. \U$$2.picorv32.instr_beq
      Adding exclusive control bits: \U$$2.picorv32.instr_bge vs. \U$$2.picorv32.instr_bne
      Adding exclusive control bits: \U$$2.picorv32.instr_bge vs. \U$$2.picorv32.instr_beq
      Adding exclusive control bits: \U$$2.picorv32.instr_bne vs. \U$$2.picorv32.instr_beq
      Size of SAT problem: 10 cells, 190 variables, 463 clauses
      According to the SAT solver this pair of cells can not be shared.
      Model from SAT solver: { $auto$opt_reduce.cc:132:opt_mux$4755 $auto$opt_reduce.cc:132:opt_mux$4745 $auto$opt_reduce.cc:132:opt_mux$4741 \U$$2.picorv32.is_lui_auipc_jal \U$$2.picorv32.is_slli_srli_srai $techmap\U$$2.picorv32.$reduce_bool$picorv32.v:1347$1372_Y $techmap\U$$2.picorv32.$reduce_bool$picorv32.v:1348$1375_Y $techmap\U$$2.picorv32.$procmux$1748_CMP $techmap\U$$2.picorv32.$procmux$1749_CMP \cd_sync.ready } = 10'0000011011
  Analyzing resource sharing options for $techmap\U$$2.picorv32.$memrd$\cpuregs$picorv32.v:1347$1371 ($memrd):
    Found 1 activation_patterns using ctrl signal { \U$$2.picorv32.is_lui_auipc_jal $techmap\U$$2.picorv32.$reduce_bool$picorv32.v:1347$1372_Y $techmap\U$$2.picorv32.$procmux$1749_CMP \cd_sync.ready }.
    No candidates found.

3.15. Executing TECHMAP pass (map to technology primitives).

3.15.1. Executing Verilog-2005 frontend: /usr/local/bin/../share/yosys/cmp2lut.v
Parsing Verilog input from `/usr/local/bin/../share/yosys/cmp2lut.v' to AST representation.
Generating RTLIL representation for module `\_90_lut_cmp_'.
Successfully finished Verilog frontend.

3.15.2. Continuing TECHMAP pass.
Using template $paramod$6816abac91a51b405c3de5bceb2855c03dd44485\_90_lut_cmp_ for cells of type $eq.
Using template $paramod$99e5b0ecd4c7f9fb6cd3a733593eba894c42613f\_90_lut_cmp_ for cells of type $eq.
Using template $paramod$0760830c1e6c196382cd2cb153e9fff2d84c061d\_90_lut_cmp_ for cells of type $eq.
Using template $paramod$5652dda64580ddd7861fd245e644fd33eae2e158\_90_lut_cmp_ for cells of type $eq.
Using template $paramod$d87a48a4cd82717ae6bd57e6fe5ce90d87c44016\_90_lut_cmp_ for cells of type $eq.
Using template $paramod$4cde4291caf5aa85a196975f3624151774a86d78\_90_lut_cmp_ for cells of type $eq.
Using template $paramod$169bae89c32dcc6f3626d16cf9f47ceb469145db\_90_lut_cmp_ for cells of type $eq.
Using template $paramod$5b7c8f37cb386acdf3ce7e528c09e6d15eb51b72\_90_lut_cmp_ for cells of type $eq.
Using template $paramod$77ad031fce233083715243f95e3cd2547d931e42\_90_lut_cmp_ for cells of type $eq.
Using template $paramod$d31416a5863a8a220e16d7940a75ab70541ab32a\_90_lut_cmp_ for cells of type $eq.
Using template $paramod$a6ffc318e97e2d88e3aa2c740afebfc2ba48d1b1\_90_lut_cmp_ for cells of type $ne.
No more expansions possible.
<suppressed ~739 debug messages>

3.16. Executing OPT_EXPR pass (perform const folding).
Optimizing module top.

3.17. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \top..
Removed 0 unused cells and 102 unused wires.
<suppressed ~1 debug messages>

3.18. Executing ALUMACC pass (create $alu and $macc cells).
Extracting $alu and $macc cells in module top:
  creating $macc model for $techmap\U$$0.$3 ($add).
  creating $macc model for $techmap\U$$1.$2 ($add).
  creating $macc model for $techmap\U$$2.picorv32.$add$picorv32.v:1226$1559 ($add).
  creating $macc model for $techmap\U$$2.picorv32.$add$picorv32.v:1312$1355 ($add).
  creating $macc model for $techmap\U$$2.picorv32.$add$picorv32.v:1555$1436 ($add).
  creating $macc model for $techmap\U$$2.picorv32.$add$picorv32.v:1564$1437 ($add).
  creating $macc model for $techmap\U$$2.picorv32.$add$picorv32.v:1801$1485 ($add).
  creating $macc model for $techmap\U$$2.picorv32.$add$picorv32.v:1864$1513 ($add).
  creating $macc model for $techmap\U$$2.picorv32.$add$picorv32.v:382$962 ($add).
  creating $macc model for $techmap\U$$2.picorv32.$add$picorv32.v:906$1090 ($add).
  creating $macc model for $techmap\U$$2.picorv32.$add$picorv32.v:910$1091 ($add).
  creating $macc model for $techmap\U$$2.picorv32.$sub$picorv32.v:1226$1558 ($sub).
  creating $macc model for $techmap\U$$2.picorv32.$sub$picorv32.v:1845$1509 ($sub).
  creating $macc model for $techmap\U$$2.picorv32.pcpi_mul.$add$picorv32.v:2260$731 ($add).
  creating $macc model for $techmap\U$$2.picorv32.pcpi_mul.$add$picorv32.v:2260$732 ($add).
  creating $macc model for $techmap\U$$2.picorv32.pcpi_mul.$add$picorv32.v:2260$733 ($add).
  creating $macc model for $techmap\U$$2.picorv32.pcpi_mul.$add$picorv32.v:2260$734 ($add).
  creating $macc model for $techmap\U$$2.picorv32.pcpi_mul.$add$picorv32.v:2260$735 ($add).
  creating $macc model for $techmap\U$$2.picorv32.pcpi_mul.$add$picorv32.v:2260$736 ($add).
  creating $macc model for $techmap\U$$2.picorv32.pcpi_mul.$add$picorv32.v:2260$737 ($add).
  creating $macc model for $techmap\U$$2.picorv32.pcpi_mul.$add$picorv32.v:2260$738 ($add).
  creating $macc model for $techmap\U$$2.picorv32.pcpi_mul.$add$picorv32.v:2260$739 ($add).
  creating $macc model for $techmap\U$$2.picorv32.pcpi_mul.$add$picorv32.v:2260$740 ($add).
  creating $macc model for $techmap\U$$2.picorv32.pcpi_mul.$add$picorv32.v:2260$741 ($add).
  creating $macc model for $techmap\U$$2.picorv32.pcpi_mul.$add$picorv32.v:2260$742 ($add).
  creating $macc model for $techmap\U$$2.picorv32.pcpi_mul.$add$picorv32.v:2260$743 ($add).
  creating $macc model for $techmap\U$$2.picorv32.pcpi_mul.$add$picorv32.v:2260$744 ($add).
  creating $macc model for $techmap\U$$2.picorv32.pcpi_mul.$add$picorv32.v:2260$745 ($add).
  creating $macc model for $techmap\U$$2.picorv32.pcpi_mul.$add$picorv32.v:2260$746 ($add).
  creating $macc model for $techmap\U$$2.picorv32.pcpi_mul.$add$picorv32.v:2260$747 ($add).
  creating $macc model for $techmap\U$$2.picorv32.pcpi_mul.$add$picorv32.v:2260$748 ($add).
  creating $macc model for $techmap\U$$2.picorv32.pcpi_mul.$add$picorv32.v:2260$749 ($add).
  creating $macc model for $techmap\U$$2.picorv32.pcpi_mul.$add$picorv32.v:2260$750 ($add).
  creating $macc model for $techmap\U$$2.picorv32.pcpi_mul.$add$picorv32.v:2260$751 ($add).
  creating $macc model for $techmap\U$$2.picorv32.pcpi_mul.$add$picorv32.v:2260$752 ($add).
  creating $macc model for $techmap\U$$2.picorv32.pcpi_mul.$add$picorv32.v:2260$753 ($add).
  creating $macc model for $techmap\U$$2.picorv32.pcpi_mul.$add$picorv32.v:2260$754 ($add).
  creating $macc model for $techmap\U$$2.picorv32.pcpi_mul.$add$picorv32.v:2260$755 ($add).
  creating $macc model for $techmap\U$$2.picorv32.pcpi_mul.$add$picorv32.v:2260$756 ($add).
  creating $macc model for $techmap\U$$2.picorv32.pcpi_mul.$add$picorv32.v:2260$757 ($add).
  creating $macc model for $techmap\U$$2.picorv32.pcpi_mul.$add$picorv32.v:2260$758 ($add).
  creating $macc model for $techmap\U$$2.picorv32.pcpi_mul.$add$picorv32.v:2260$759 ($add).
  creating $macc model for $techmap\U$$2.picorv32.pcpi_mul.$add$picorv32.v:2260$760 ($add).
  creating $macc model for $techmap\U$$2.picorv32.pcpi_mul.$add$picorv32.v:2260$761 ($add).
  creating $macc model for $techmap\U$$2.picorv32.pcpi_mul.$add$picorv32.v:2260$762 ($add).
  creating $macc model for $techmap\U$$2.picorv32.pcpi_mul.$sub$picorv32.v:2294$770 ($sub).
  creating $macc model for $techmap\cd_sync.$7 ($add).
  merging $macc model for $techmap\U$$2.picorv32.pcpi_mul.$add$picorv32.v:2260$761 into $techmap\U$$2.picorv32.pcpi_mul.$add$picorv32.v:2260$762.
  merging $macc model for $techmap\U$$2.picorv32.pcpi_mul.$add$picorv32.v:2260$759 into $techmap\U$$2.picorv32.pcpi_mul.$add$picorv32.v:2260$760.
  merging $macc model for $techmap\U$$2.picorv32.pcpi_mul.$add$picorv32.v:2260$757 into $techmap\U$$2.picorv32.pcpi_mul.$add$picorv32.v:2260$758.
  merging $macc model for $techmap\U$$2.picorv32.pcpi_mul.$add$picorv32.v:2260$755 into $techmap\U$$2.picorv32.pcpi_mul.$add$picorv32.v:2260$756.
  merging $macc model for $techmap\U$$2.picorv32.pcpi_mul.$add$picorv32.v:2260$753 into $techmap\U$$2.picorv32.pcpi_mul.$add$picorv32.v:2260$754.
  merging $macc model for $techmap\U$$2.picorv32.pcpi_mul.$add$picorv32.v:2260$751 into $techmap\U$$2.picorv32.pcpi_mul.$add$picorv32.v:2260$752.
  merging $macc model for $techmap\U$$2.picorv32.pcpi_mul.$add$picorv32.v:2260$749 into $techmap\U$$2.picorv32.pcpi_mul.$add$picorv32.v:2260$750.
  merging $macc model for $techmap\U$$2.picorv32.pcpi_mul.$add$picorv32.v:2260$747 into $techmap\U$$2.picorv32.pcpi_mul.$add$picorv32.v:2260$748.
  merging $macc model for $techmap\U$$2.picorv32.pcpi_mul.$add$picorv32.v:2260$745 into $techmap\U$$2.picorv32.pcpi_mul.$add$picorv32.v:2260$746.
  merging $macc model for $techmap\U$$2.picorv32.pcpi_mul.$add$picorv32.v:2260$743 into $techmap\U$$2.picorv32.pcpi_mul.$add$picorv32.v:2260$744.
  merging $macc model for $techmap\U$$2.picorv32.pcpi_mul.$add$picorv32.v:2260$741 into $techmap\U$$2.picorv32.pcpi_mul.$add$picorv32.v:2260$742.
  merging $macc model for $techmap\U$$2.picorv32.pcpi_mul.$add$picorv32.v:2260$739 into $techmap\U$$2.picorv32.pcpi_mul.$add$picorv32.v:2260$740.
  merging $macc model for $techmap\U$$2.picorv32.pcpi_mul.$add$picorv32.v:2260$737 into $techmap\U$$2.picorv32.pcpi_mul.$add$picorv32.v:2260$738.
  merging $macc model for $techmap\U$$2.picorv32.pcpi_mul.$add$picorv32.v:2260$735 into $techmap\U$$2.picorv32.pcpi_mul.$add$picorv32.v:2260$736.
  merging $macc model for $techmap\U$$2.picorv32.pcpi_mul.$add$picorv32.v:2260$733 into $techmap\U$$2.picorv32.pcpi_mul.$add$picorv32.v:2260$734.
  merging $macc model for $techmap\U$$2.picorv32.pcpi_mul.$add$picorv32.v:2260$731 into $techmap\U$$2.picorv32.pcpi_mul.$add$picorv32.v:2260$732.
  creating $alu model for $macc $techmap\U$$2.picorv32.pcpi_mul.$sub$picorv32.v:2294$770.
  creating $alu model for $macc $techmap\cd_sync.$7.
  creating $alu model for $macc $techmap\U$$2.picorv32.$sub$picorv32.v:1845$1509.
  creating $alu model for $macc $techmap\U$$2.picorv32.$sub$picorv32.v:1226$1558.
  creating $alu model for $macc $techmap\U$$2.picorv32.$add$picorv32.v:910$1091.
  creating $alu model for $macc $techmap\U$$2.picorv32.$add$picorv32.v:906$1090.
  creating $alu model for $macc $techmap\U$$2.picorv32.$add$picorv32.v:382$962.
  creating $alu model for $macc $techmap\U$$2.picorv32.$add$picorv32.v:1864$1513.
  creating $alu model for $macc $techmap\U$$2.picorv32.$add$picorv32.v:1801$1485.
  creating $alu model for $macc $techmap\U$$2.picorv32.$add$picorv32.v:1564$1437.
  creating $alu model for $macc $techmap\U$$2.picorv32.$add$picorv32.v:1555$1436.
  creating $alu model for $macc $techmap\U$$2.picorv32.$add$picorv32.v:1312$1355.
  creating $alu model for $macc $techmap\U$$2.picorv32.$add$picorv32.v:1226$1559.
  creating $alu model for $macc $techmap\U$$1.$2.
  creating $alu model for $macc $techmap\U$$0.$3.
  creating $macc cell for $techmap\U$$2.picorv32.pcpi_mul.$add$picorv32.v:2260$734: $auto$alumacc.cc:354:replace_macc$4883
  creating $macc cell for $techmap\U$$2.picorv32.pcpi_mul.$add$picorv32.v:2260$732: $auto$alumacc.cc:354:replace_macc$4884
  creating $macc cell for $techmap\U$$2.picorv32.pcpi_mul.$add$picorv32.v:2260$762: $auto$alumacc.cc:354:replace_macc$4885
  creating $macc cell for $techmap\U$$2.picorv32.pcpi_mul.$add$picorv32.v:2260$736: $auto$alumacc.cc:354:replace_macc$4886
  creating $macc cell for $techmap\U$$2.picorv32.pcpi_mul.$add$picorv32.v:2260$752: $auto$alumacc.cc:354:replace_macc$4887
  creating $macc cell for $techmap\U$$2.picorv32.pcpi_mul.$add$picorv32.v:2260$738: $auto$alumacc.cc:354:replace_macc$4888
  creating $macc cell for $techmap\U$$2.picorv32.pcpi_mul.$add$picorv32.v:2260$760: $auto$alumacc.cc:354:replace_macc$4889
  creating $macc cell for $techmap\U$$2.picorv32.pcpi_mul.$add$picorv32.v:2260$740: $auto$alumacc.cc:354:replace_macc$4890
  creating $macc cell for $techmap\U$$2.picorv32.pcpi_mul.$add$picorv32.v:2260$750: $auto$alumacc.cc:354:replace_macc$4891
  creating $macc cell for $techmap\U$$2.picorv32.pcpi_mul.$add$picorv32.v:2260$742: $auto$alumacc.cc:354:replace_macc$4892
  creating $macc cell for $techmap\U$$2.picorv32.pcpi_mul.$add$picorv32.v:2260$758: $auto$alumacc.cc:354:replace_macc$4893
  creating $macc cell for $techmap\U$$2.picorv32.pcpi_mul.$add$picorv32.v:2260$744: $auto$alumacc.cc:354:replace_macc$4894
  creating $macc cell for $techmap\U$$2.picorv32.pcpi_mul.$add$picorv32.v:2260$754: $auto$alumacc.cc:354:replace_macc$4895
  creating $macc cell for $techmap\U$$2.picorv32.pcpi_mul.$add$picorv32.v:2260$746: $auto$alumacc.cc:354:replace_macc$4896
  creating $macc cell for $techmap\U$$2.picorv32.pcpi_mul.$add$picorv32.v:2260$756: $auto$alumacc.cc:354:replace_macc$4897
  creating $macc cell for $techmap\U$$2.picorv32.pcpi_mul.$add$picorv32.v:2260$748: $auto$alumacc.cc:354:replace_macc$4898
  creating $alu model for $techmap\U$$2.$13 ($lt): new $alu
  creating $alu model for $techmap\U$$2.picorv32.$lt$picorv32.v:1228$1562 ($lt): new $alu
  creating $alu model for $techmap\U$$2.picorv32.$lt$picorv32.v:1229$1563 ($lt): merged with $techmap\U$$2.picorv32.$sub$picorv32.v:1226$1558.
  creating $alu model for $techmap\U$$2.picorv32.$eq$picorv32.v:1227$1561 ($eq): merged with $techmap\U$$2.picorv32.$sub$picorv32.v:1226$1558.
  creating $alu cell for $techmap\U$$2.$13: $auto$alumacc.cc:474:replace_alu$4901
  creating $alu cell for $techmap\U$$0.$3: $auto$alumacc.cc:474:replace_alu$4912
  creating $alu cell for $techmap\U$$1.$2: $auto$alumacc.cc:474:replace_alu$4915
  creating $alu cell for $techmap\U$$2.picorv32.$add$picorv32.v:1312$1355: $auto$alumacc.cc:474:replace_alu$4918
  creating $alu cell for $techmap\U$$2.picorv32.$add$picorv32.v:1555$1436: $auto$alumacc.cc:474:replace_alu$4921
  creating $alu cell for $techmap\U$$2.picorv32.$add$picorv32.v:1564$1437: $auto$alumacc.cc:474:replace_alu$4924
  creating $alu cell for $techmap\U$$2.picorv32.$add$picorv32.v:1801$1485: $auto$alumacc.cc:474:replace_alu$4927
  creating $alu cell for $techmap\U$$2.picorv32.$add$picorv32.v:1864$1513: $auto$alumacc.cc:474:replace_alu$4930
  creating $alu cell for $techmap\U$$2.picorv32.$add$picorv32.v:382$962: $auto$alumacc.cc:474:replace_alu$4933
  creating $alu cell for $techmap\U$$2.picorv32.$add$picorv32.v:906$1090: $auto$alumacc.cc:474:replace_alu$4936
  creating $alu cell for $techmap\U$$2.picorv32.$add$picorv32.v:910$1091: $auto$alumacc.cc:474:replace_alu$4939
  creating $alu cell for $techmap\U$$2.picorv32.$lt$picorv32.v:1228$1562: $auto$alumacc.cc:474:replace_alu$4942
  creating $alu cell for $techmap\U$$2.picorv32.$add$picorv32.v:1226$1559: $auto$alumacc.cc:474:replace_alu$4949
  creating $alu cell for $techmap\U$$2.picorv32.$sub$picorv32.v:1226$1558, $techmap\U$$2.picorv32.$lt$picorv32.v:1229$1563, $techmap\U$$2.picorv32.$eq$picorv32.v:1227$1561: $auto$alumacc.cc:474:replace_alu$4952
  creating $alu cell for $techmap\U$$2.picorv32.$sub$picorv32.v:1845$1509: $auto$alumacc.cc:474:replace_alu$4959
  creating $alu cell for $techmap\cd_sync.$7: $auto$alumacc.cc:474:replace_alu$4962
  creating $alu cell for $techmap\U$$2.picorv32.pcpi_mul.$sub$picorv32.v:2294$770: $auto$alumacc.cc:474:replace_alu$4965
  created 17 $alu and 16 $macc cells.

3.19. Executing OPT pass (performing simple optimizations).

3.19.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module top.
<suppressed ~1 debug messages>

3.19.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\top'.
Removed a total of 0 cells.

3.19.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \top..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~168 debug messages>

3.19.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \top.
    New input vector for $reduce_and cell $auto$alumacc.cc:64:get_eq$4957: { $auto$alumacc.cc:490:replace_alu$4953 [0] $auto$alumacc.cc:490:replace_alu$4953 [1] $auto$alumacc.cc:490:replace_alu$4953 [2] $auto$alumacc.cc:490:replace_alu$4953 [3] $auto$alumacc.cc:490:replace_alu$4953 [4] $auto$alumacc.cc:490:replace_alu$4953 [5] $auto$alumacc.cc:490:replace_alu$4953 [6] $auto$alumacc.cc:490:replace_alu$4953 [7] $auto$alumacc.cc:490:replace_alu$4953 [8] $auto$alumacc.cc:490:replace_alu$4953 [9] $auto$alumacc.cc:490:replace_alu$4953 [10] $auto$alumacc.cc:490:replace_alu$4953 [11] $auto$alumacc.cc:490:replace_alu$4953 [12] $auto$alumacc.cc:490:replace_alu$4953 [13] $auto$alumacc.cc:490:replace_alu$4953 [14] $auto$alumacc.cc:490:replace_alu$4953 [15] $auto$alumacc.cc:490:replace_alu$4953 [16] $auto$alumacc.cc:490:replace_alu$4953 [17] $auto$alumacc.cc:490:replace_alu$4953 [18] $auto$alumacc.cc:490:replace_alu$4953 [19] $auto$alumacc.cc:490:replace_alu$4953 [20] $auto$alumacc.cc:490:replace_alu$4953 [21] $auto$alumacc.cc:490:replace_alu$4953 [22] $auto$alumacc.cc:490:replace_alu$4953 [23] $auto$alumacc.cc:490:replace_alu$4953 [24] $auto$alumacc.cc:490:replace_alu$4953 [25] $auto$alumacc.cc:490:replace_alu$4953 [26] $auto$alumacc.cc:490:replace_alu$4953 [27] $auto$alumacc.cc:490:replace_alu$4953 [28] $auto$alumacc.cc:490:replace_alu$4953 [29] $auto$alumacc.cc:490:replace_alu$4953 [30] $auto$alumacc.cc:490:replace_alu$4953 [31] }
    New input vector for $reduce_and cell $auto$alumacc.cc:64:get_eq$4908: { $auto$alumacc.cc:490:replace_alu$4902 [0] $auto$alumacc.cc:490:replace_alu$4902 [1] $auto$alumacc.cc:490:replace_alu$4902 [2] $auto$alumacc.cc:490:replace_alu$4902 [3] $auto$alumacc.cc:490:replace_alu$4902 [4] $auto$alumacc.cc:490:replace_alu$4902 [5] $auto$alumacc.cc:490:replace_alu$4902 [6] $auto$alumacc.cc:490:replace_alu$4902 [7] $auto$alumacc.cc:490:replace_alu$4902 [8] $auto$alumacc.cc:490:replace_alu$4902 [9] $auto$alumacc.cc:490:replace_alu$4902 [10] $auto$alumacc.cc:490:replace_alu$4902 [11] $auto$alumacc.cc:490:replace_alu$4902 [12] $auto$alumacc.cc:490:replace_alu$4902 [13] $auto$alumacc.cc:490:replace_alu$4902 [14] $auto$alumacc.cc:490:replace_alu$4902 [15] $auto$alumacc.cc:490:replace_alu$4902 [16] $auto$alumacc.cc:490:replace_alu$4902 [17] $auto$alumacc.cc:490:replace_alu$4902 [18] $auto$alumacc.cc:490:replace_alu$4902 [19] $auto$alumacc.cc:490:replace_alu$4902 [20] $auto$alumacc.cc:490:replace_alu$4902 [21] $auto$alumacc.cc:490:replace_alu$4902 [22] $auto$alumacc.cc:490:replace_alu$4902 [23] $auto$alumacc.cc:490:replace_alu$4902 [24] $auto$alumacc.cc:490:replace_alu$4902 [25] $auto$alumacc.cc:490:replace_alu$4902 [26] $auto$alumacc.cc:490:replace_alu$4902 [27] $auto$alumacc.cc:490:replace_alu$4902 [28] $auto$alumacc.cc:490:replace_alu$4902 [29] }
  Optimizing cells in module \top.
Performed a total of 2 changes.

3.19.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\top'.
Removed a total of 0 cells.

3.19.6. Executing OPT_RMDFF pass (remove dff with constant values).

3.19.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \top..
Removed 17 unused cells and 21 unused wires.
<suppressed ~18 debug messages>

3.19.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module top.

3.19.9. Rerunning OPT passes. (Maybe there is more to do..)

3.19.10. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \top..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~168 debug messages>

3.19.11. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \top.
Performed a total of 0 changes.

3.19.12. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\top'.
Removed a total of 0 cells.

3.19.13. Executing OPT_RMDFF pass (remove dff with constant values).

3.19.14. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \top..

3.19.15. Executing OPT_EXPR pass (perform const folding).
Optimizing module top.

3.19.16. Finished OPT passes. (There is nothing left to do.)

3.20. Executing FSM pass (extract and optimize FSM).

3.20.1. Executing FSM_DETECT pass (finding FSMs in design).
Found FSM state register top.U$$2.picorv32.cpu_state.
Not marking top.U$$2.picorv32.mem_state as FSM state register:
    Users of register don't seem to benefit from recoding.
Not marking top.U$$2.picorv32.mem_wordsize as FSM state register:
    Users of register don't seem to benefit from recoding.

3.20.2. Executing FSM_EXTRACT pass (extracting FSM from design).
Extracting FSM `\U$$2.picorv32.cpu_state' from module `\top'.
  found $dff cell for state register: $techmap\U$$2.picorv32.$procdff$4585
  root of input selection tree: $techmap\U$$2.picorv32.$0\cpu_state[7:0]
  found reset state: 8'10000000 (guessed from mux tree)
  found ctrl input: $techmap\U$$2.picorv32.$logic_and$picorv32.v:1940$1553_Y
  found ctrl input: \cd_sync.ready
  found state code: 8'01000000
  found ctrl input: $auto$opt_reduce.cc:132:opt_mux$4801
  found ctrl input: $techmap\U$$2.picorv32.$procmux$2135_CMP
  found ctrl input: $techmap\U$$2.picorv32.$procmux$1787_CMP
  found ctrl input: $techmap\U$$2.picorv32.$procmux$1748_CMP
  found ctrl input: $techmap\U$$2.picorv32.$procmux$1749_CMP
  found ctrl input: $techmap\U$$2.picorv32.$eq$picorv32.v:1308$1353_Y
  found ctrl input: $techmap\U$$2.picorv32.$logic_or$picorv32.v:1852$1511_Y
  found ctrl input: $techmap\U$$2.picorv32.$logic_and$picorv32.v:1867$1515_Y
  found ctrl input: $techmap\U$$2.picorv32.$eq$picorv32.v:1826$1493_Y
  found ctrl input: \U$$2.picorv32.alu_wait
  found ctrl input: \U$$2.picorv32.is_beq_bne_blt_bge_bltu_bgeu
  found ctrl input: \U$$2.picorv32.mem_done
  found ctrl input: \U$$2.picorv32.is_sll_srl_sra
  found ctrl input: \U$$2.picorv32.is_sb_sh_sw
  found ctrl input: \U$$2.picorv32.instr_trap
  found state code: 8'00001000
  found state code: 8'00000100
  found state code: 8'00000010
  found ctrl input: \U$$2.picorv32.pcpi_mul.pcpi_wr
  found ctrl input: $auto$opt_reduce.cc:132:opt_mux$4741
  found ctrl input: \U$$2.picorv32.is_slli_srli_srai
  found ctrl input: $techmap\U$$2.picorv32.$logic_and$picorv32.v:1691$1462_Y
  found state code: 8'00000001
  found ctrl input: \U$$2.picorv32.decoder_trigger
  found ctrl input: \U$$2.picorv32.instr_jal
  found state code: 8'00100000
  found state code: 8'10000000
  found ctrl output: $techmap\U$$2.picorv32.$procmux$2140_CMP
  found ctrl output: $techmap\U$$2.picorv32.$procmux$2135_CMP
  found ctrl output: $techmap\U$$2.picorv32.$procmux$1787_CMP
  found ctrl output: $techmap\U$$2.picorv32.$procmux$1760_CMP
  found ctrl output: $techmap\U$$2.picorv32.$procmux$1749_CMP
  found ctrl output: $techmap\U$$2.picorv32.$procmux$1748_CMP
  found ctrl output: $techmap\U$$2.picorv32.$procmux$1738_CMP
  found ctrl output: $techmap\U$$2.picorv32.$eq$picorv32.v:1308$1353_Y
  ctrl inputs: { \U$$2.picorv32.pcpi_mul.pcpi_wr $auto$opt_reduce.cc:132:opt_mux$4801 $auto$opt_reduce.cc:132:opt_mux$4741 \U$$2.picorv32.mem_done \U$$2.picorv32.instr_jal \U$$2.picorv32.instr_trap \U$$2.picorv32.decoder_trigger \U$$2.picorv32.is_slli_srli_srai \U$$2.picorv32.is_sb_sh_sw \U$$2.picorv32.is_sll_srl_sra \U$$2.picorv32.is_beq_bne_blt_bge_bltu_bgeu \U$$2.picorv32.alu_wait $techmap\U$$2.picorv32.$logic_and$picorv32.v:1691$1462_Y $techmap\U$$2.picorv32.$eq$picorv32.v:1826$1493_Y $techmap\U$$2.picorv32.$logic_or$picorv32.v:1852$1511_Y $techmap\U$$2.picorv32.$logic_and$picorv32.v:1867$1515_Y $techmap\U$$2.picorv32.$logic_and$picorv32.v:1940$1553_Y \cd_sync.ready }
  ctrl outputs: { $techmap\U$$2.picorv32.$eq$picorv32.v:1308$1353_Y $techmap\U$$2.picorv32.$0\cpu_state[7:0] $techmap\U$$2.picorv32.$procmux$1738_CMP $techmap\U$$2.picorv32.$procmux$1748_CMP $techmap\U$$2.picorv32.$procmux$1749_CMP $techmap\U$$2.picorv32.$procmux$1760_CMP $techmap\U$$2.picorv32.$procmux$1787_CMP $techmap\U$$2.picorv32.$procmux$2135_CMP $techmap\U$$2.picorv32.$procmux$2140_CMP }
  transition: 8'10000000 18'----------------00 -> 8'01000000 16'0010000000000001
  transition: 8'10000000 18'----------------01 -> 8'10000000 16'0100000000000001
  transition: 8'10000000 18'----------------1- -> 8'10000000 16'0100000000000001
  transition: 8'01000000 18'----------------00 -> 8'01000000 16'1010000000000000
  transition: 8'01000000 18'------0---------01 -> 8'01000000 16'1010000000000000
  transition: 8'01000000 18'----0-1---------01 -> 8'00100000 16'1001000000000000
  transition: 8'01000000 18'----1-1---------01 -> 8'01000000 16'1010000000000000
  transition: 8'01000000 18'----------------1- -> 8'10000000 16'1100000000000000
  transition: 8'00100000 18'----------------00 -> 8'01000000 16'0010000000010000
  transition: 8'00100000 18'--0--0-000--0---01 -> 8'00001000 16'0000010000010000
  transition: 8'00100000 18'--0----01---0---01 -> 8'00000010 16'0000000100010000
  transition: 8'00100000 18'--0----0-1--0---01 -> 8'00000100 16'0000001000010000
  transition: 8'00100000 18'0----1----------01 -> 8'00100000 16'0001000000010000
  transition: 8'00100000 18'1----1----------01 -> 8'01000000 16'0010000000010000
  transition: 8'00100000 18'------------1---01 -> 8'00000001 16'0000000010010000
  transition: 8'00100000 18'-------1--------01 -> 8'00000100 16'0000001000010000
  transition: 8'00100000 18'--1-------------01 -> 8'00001000 16'0000010000010000
  transition: 8'00100000 18'----------------1- -> 8'10000000 16'0100000000010000
  transition: 8'00001000 18'----------------00 -> 8'01000000 16'0010000000000100
  transition: 8'00001000 18'----------00----01 -> 8'01000000 16'0010000000000100
  transition: 8'00001000 18'---0------10----01 -> 8'00001000 16'0000010000000100
  transition: 8'00001000 18'---1------10----01 -> 8'01000000 16'0010000000000100
  transition: 8'00001000 18'-----------1----01 -> 8'00001000 16'0000010000000100
  transition: 8'00001000 18'----------------1- -> 8'10000000 16'0100000000000100
  transition: 8'00000100 18'----------------00 -> 8'01000000 16'0010000000000010
  transition: 8'00000100 18'-------------0--01 -> 8'00000100 16'0000001000000010
  transition: 8'00000100 18'-------------1--01 -> 8'01000000 16'0010000000000010
  transition: 8'00000100 18'----------------1- -> 8'10000000 16'0100000000000010
  transition: 8'00000010 18'----------------00 -> 8'01000000 16'0010000000001000
  transition: 8'00000010 18'--------------0-01 -> 8'00000010 16'0000000100001000
  transition: 8'00000010 18'--------------1001 -> 8'00000010 16'0000000100001000
  transition: 8'00000010 18'--------------1101 -> 8'01000000 16'0010000000001000
  transition: 8'00000010 18'----------------1- -> 8'10000000 16'0100000000001000
  transition: 8'00000001 18'----------------00 -> 8'01000000 16'0010000001000000
  transition: 8'00000001 18'--------------0-01 -> 8'00000001 16'0000000011000000
  transition: 8'00000001 18'--------------1001 -> 8'00000001 16'0000000011000000
  transition: 8'00000001 18'--------------1101 -> 8'01000000 16'0010000001000000
  transition: 8'00000001 18'----------------1- -> 8'10000000 16'0100000001000000

3.20.3. Executing FSM_OPT pass (simple optimizations of FSMs).
Optimizing FSM `$fsm$\U$$2.picorv32.cpu_state$4968' from module `\top'.
  Removing unused input signal $auto$opt_reduce.cc:132:opt_mux$4801.

3.20.4. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \top..
Removed 24 unused cells and 24 unused wires.
<suppressed ~25 debug messages>

3.20.5. Executing FSM_OPT pass (simple optimizations of FSMs).
Optimizing FSM `$fsm$\U$$2.picorv32.cpu_state$4968' from module `\top'.
  Removing unused output signal $techmap\U$$2.picorv32.$0\cpu_state[7:0] [0].
  Removing unused output signal $techmap\U$$2.picorv32.$0\cpu_state[7:0] [1].
  Removing unused output signal $techmap\U$$2.picorv32.$0\cpu_state[7:0] [2].
  Removing unused output signal $techmap\U$$2.picorv32.$0\cpu_state[7:0] [3].
  Removing unused output signal $techmap\U$$2.picorv32.$0\cpu_state[7:0] [4].
  Removing unused output signal $techmap\U$$2.picorv32.$0\cpu_state[7:0] [5].
  Removing unused output signal $techmap\U$$2.picorv32.$0\cpu_state[7:0] [6].
  Removing unused output signal $techmap\U$$2.picorv32.$0\cpu_state[7:0] [7].

3.20.6. Executing FSM_RECODE pass (re-assigning FSM state encoding).
Recoding FSM `$fsm$\U$$2.picorv32.cpu_state$4968' from module `\top' using `auto' encoding:
  mapping auto encoding to `one-hot` for this FSM.
  10000000 -> ------1
  01000000 -> -----1-
  00100000 -> ----1--
  00001000 -> ---1---
  00000100 -> --1----
  00000010 -> -1-----
  00000001 -> 1------

3.20.7. Executing FSM_INFO pass (dumping all available information on FSM cells).

FSM `$fsm$\U$$2.picorv32.cpu_state$4968' from module `\top':
-------------------------------------

  Information on FSM $fsm$\U$$2.picorv32.cpu_state$4968 (\U$$2.picorv32.cpu_state):

  Number of input signals:   17
  Number of output signals:   8
  Number of state bits:       7

  Input signals:
    0: \cd_sync.ready
    1: $techmap\U$$2.picorv32.$logic_and$picorv32.v:1940$1553_Y
    2: $techmap\U$$2.picorv32.$logic_and$picorv32.v:1867$1515_Y
    3: $techmap\U$$2.picorv32.$logic_or$picorv32.v:1852$1511_Y
    4: $techmap\U$$2.picorv32.$eq$picorv32.v:1826$1493_Y
    5: $techmap\U$$2.picorv32.$logic_and$picorv32.v:1691$1462_Y
    6: \U$$2.picorv32.alu_wait
    7: \U$$2.picorv32.is_beq_bne_blt_bge_bltu_bgeu
    8: \U$$2.picorv32.is_sll_srl_sra
    9: \U$$2.picorv32.is_sb_sh_sw
   10: \U$$2.picorv32.is_slli_srli_srai
   11: \U$$2.picorv32.decoder_trigger
   12: \U$$2.picorv32.instr_trap
   13: \U$$2.picorv32.instr_jal
   14: \U$$2.picorv32.mem_done
   15: $auto$opt_reduce.cc:132:opt_mux$4741
   16: \U$$2.picorv32.pcpi_mul.pcpi_wr

  Output signals:
    0: $techmap\U$$2.picorv32.$procmux$2140_CMP
    1: $techmap\U$$2.picorv32.$procmux$2135_CMP
    2: $techmap\U$$2.picorv32.$procmux$1787_CMP
    3: $techmap\U$$2.picorv32.$procmux$1760_CMP
    4: $techmap\U$$2.picorv32.$procmux$1749_CMP
    5: $techmap\U$$2.picorv32.$procmux$1748_CMP
    6: $techmap\U$$2.picorv32.$procmux$1738_CMP
    7: $techmap\U$$2.picorv32.$eq$picorv32.v:1308$1353_Y

  State encoding:
    0:  7'------1  <RESET STATE>
    1:  7'-----1-
    2:  7'----1--
    3:  7'---1---
    4:  7'--1----
    5:  7'-1-----
    6:  7'1------

  Transition Table (state_in, ctrl_in, state_out, ctrl_out):
      0:     0 17'---------------01   ->     0 8'00000001
      1:     0 17'---------------1-   ->     0 8'00000001
      2:     0 17'---------------00   ->     1 8'00000001
      3:     1 17'---------------1-   ->     0 8'10000000
      4:     1 17'---------------00   ->     1 8'10000000
      5:     1 17'-----0---------01   ->     1 8'10000000
      6:     1 17'---1-1---------01   ->     1 8'10000000
      7:     1 17'---0-1---------01   ->     2 8'10000000
      8:     2 17'---------------1-   ->     0 8'00010000
      9:     2 17'---------------00   ->     1 8'00010000
     10:     2 17'1---1----------01   ->     1 8'00010000
     11:     2 17'0---1----------01   ->     2 8'00010000
     12:     2 17'-0--0-000--0---01   ->     3 8'00010000
     13:     2 17'-1-------------01   ->     3 8'00010000
     14:     2 17'-0----0-1--0---01   ->     4 8'00010000
     15:     2 17'------1--------01   ->     4 8'00010000
     16:     2 17'-0----01---0---01   ->     5 8'00010000
     17:     2 17'-----------1---01   ->     6 8'00010000
     18:     3 17'---------------1-   ->     0 8'00000100
     19:     3 17'---------------00   ->     1 8'00000100
     20:     3 17'---------00----01   ->     1 8'00000100
     21:     3 17'--1------10----01   ->     1 8'00000100
     22:     3 17'--0------10----01   ->     3 8'00000100
     23:     3 17'----------1----01   ->     3 8'00000100
     24:     4 17'---------------1-   ->     0 8'00000010
     25:     4 17'---------------00   ->     1 8'00000010
     26:     4 17'------------1--01   ->     1 8'00000010
     27:     4 17'------------0--01   ->     4 8'00000010
     28:     5 17'---------------1-   ->     0 8'00001000
     29:     5 17'---------------00   ->     1 8'00001000
     30:     5 17'-------------1101   ->     1 8'00001000
     31:     5 17'-------------1001   ->     5 8'00001000
     32:     5 17'-------------0-01   ->     5 8'00001000
     33:     6 17'---------------1-   ->     0 8'01000000
     34:     6 17'---------------00   ->     1 8'01000000
     35:     6 17'-------------1101   ->     1 8'01000000
     36:     6 17'-------------1001   ->     6 8'01000000
     37:     6 17'-------------0-01   ->     6 8'01000000

-------------------------------------

3.20.8. Executing FSM_MAP pass (mapping FSMs to basic logic).
Mapping FSM `$fsm$\U$$2.picorv32.cpu_state$4968' from module `\top'.

3.21. Executing OPT pass (performing simple optimizations).

3.21.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module top.
<suppressed ~3 debug messages>

3.21.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\top'.
<suppressed ~6 debug messages>
Removed a total of 2 cells.

3.21.3. Executing OPT_RMDFF pass (remove dff with constant values).

3.21.4. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \top..
Removed 0 unused cells and 15 unused wires.
<suppressed ~1 debug messages>

3.21.5. Finished fast OPT passes.

3.22. Executing MEMORY pass.

3.22.1. Executing MEMORY_DFF pass (merging $dff cells to $memrd and $memwr).
Checking cell `$techmap\U$$2.picorv32.$memwr$\cpuregs$picorv32.v:1339$1568' in module `\top': merged $dff to cell.
Checking cell `$techmap\U$$2.picorv32.$memrd$\cpuregs$picorv32.v:1347$1371' in module `\top': merged address $dff to cell.
Checking cell `$techmap\U$$2.picorv32.$memrd$\cpuregs$picorv32.v:1348$1374' in module `\top': merged address $dff to cell.

3.22.2. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \top..
Removed 4 unused cells and 4 unused wires.
<suppressed ~5 debug messages>

3.22.3. Executing MEMORY_SHARE pass (consolidating $memrd/$memwr cells).

3.22.4. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \top..

3.22.5. Executing MEMORY_COLLECT pass (generating $mem cells).
Collecting $memrd, $memwr and $meminit for memory `\U$$0.sincos_lookup.quarter_sin_mem' in module `\top':
  $techmap\U$$0.sincos_lookup.$1 ($meminit)
  U$$0.sincos_lookup.sin_rdport ($memrd)
Collecting $memrd, $memwr and $meminit for memory `\U$$2.mem' in module `\top':
  $techmap\U$$2.$1 ($meminit)
  U$$2.write_port ($memwr)
  U$$2.read_port ($memrd)
Collecting $memrd, $memwr and $meminit for memory `\U$$2.picorv32.cpuregs' in module `\top':
  $techmap\U$$2.picorv32.$memwr$\cpuregs$picorv32.v:1339$1568 ($memwr)
  $techmap\U$$2.picorv32.$memrd$\cpuregs$picorv32.v:1348$1374 ($memrd)
  $techmap\U$$2.picorv32.$memrd$\cpuregs$picorv32.v:1347$1371 ($memrd)

3.23. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \top..

3.24. Executing MEMORY_BRAM pass (mapping $mem cells to block memories).
Processing top.U$$0.sincos_lookup.quarter_sin_mem:
  Properties: ports=1 bits=11264 rports=1 wports=0 dbits=11 abits=10 words=1024
  Checking rule #1 for bram type $__ICE40_RAM4K_M0 (variant 1):
    Bram geometry: abits=8 dbits=16 wports=0 rports=0
    Estimated number of duplicates for more read ports: dups=1
    Metrics for $__ICE40_RAM4K_M0: awaste=0 dwaste=5 bwaste=1280 waste=1280 efficiency=68
    Rule #1 for bram type $__ICE40_RAM4K_M0 (variant 1) accepted.
    Mapping to bram type $__ICE40_RAM4K_M0 (variant 1):
      Read port #0 is in clock domain \U$$0.clk.
        Mapped to bram port A1.1.
      Updated properties: dups=1 waste=1280 efficiency=68
      Storing for later selection.
  Checking rule #2 for bram type $__ICE40_RAM4K_M123 (variant 1):
    Bram geometry: abits=9 dbits=8 wports=0 rports=0
    Estimated number of duplicates for more read ports: dups=1
    Metrics for $__ICE40_RAM4K_M123: awaste=0 dwaste=5 bwaste=2560 waste=2560 efficiency=68
    Rule #2 for bram type $__ICE40_RAM4K_M123 (variant 1) accepted.
    Mapping to bram type $__ICE40_RAM4K_M123 (variant 1):
      Read port #0 is in clock domain \U$$0.clk.
        Mapped to bram port A1.1.
      Updated properties: dups=1 waste=2560 efficiency=68
      Storing for later selection.
  Checking rule #2 for bram type $__ICE40_RAM4K_M123 (variant 2):
    Bram geometry: abits=10 dbits=4 wports=0 rports=0
    Estimated number of duplicates for more read ports: dups=1
    Metrics for $__ICE40_RAM4K_M123: awaste=0 dwaste=1 bwaste=1024 waste=1024 efficiency=91
    Rule #2 for bram type $__ICE40_RAM4K_M123 (variant 2) accepted.
    Mapping to bram type $__ICE40_RAM4K_M123 (variant 2):
      Read port #0 is in clock domain \U$$0.clk.
        Mapped to bram port A1.1.
      Updated properties: dups=1 waste=1024 efficiency=91
      Storing for later selection.
  Checking rule #2 for bram type $__ICE40_RAM4K_M123 (variant 3):
    Bram geometry: abits=11 dbits=2 wports=0 rports=0
    Estimated number of duplicates for more read ports: dups=1
    Metrics for $__ICE40_RAM4K_M123: awaste=1024 dwaste=1 bwaste=3072 waste=3072 efficiency=45
    Rule #2 for bram type $__ICE40_RAM4K_M123 (variant 3) accepted.
    Mapping to bram type $__ICE40_RAM4K_M123 (variant 3):
      Read port #0 is in clock domain \U$$0.clk.
        Mapped to bram port A1.1.
      Updated properties: dups=1 waste=3072 efficiency=45
      Storing for later selection.
  Selecting best of 4 rules:
    Efficiency for rule 2.3: efficiency=45, cells=6, acells=1
    Efficiency for rule 2.2: efficiency=91, cells=3, acells=1
    Efficiency for rule 2.1: efficiency=68, cells=4, acells=2
    Efficiency for rule 1.1: efficiency=68, cells=4, acells=4
    Selected rule 2.2 with efficiency 91.
    Mapping to bram type $__ICE40_RAM4K_M123 (variant 2):
      Read port #0 is in clock domain \U$$0.clk.
        Mapped to bram port A1.1.
      Creating $__ICE40_RAM4K_M123 cell at grid position <0 0 0>: U$$0.sincos_lookup.quarter_sin_mem.0.0.0
      Creating $__ICE40_RAM4K_M123 cell at grid position <1 0 0>: U$$0.sincos_lookup.quarter_sin_mem.1.0.0
      Creating $__ICE40_RAM4K_M123 cell at grid position <2 0 0>: U$$0.sincos_lookup.quarter_sin_mem.2.0.0
Processing top.U$$2.mem:
  Properties: ports=2 bits=40672 rports=1 wports=1 dbits=32 abits=11 words=1271
  Checking rule #1 for bram type $__ICE40_RAM4K_M0 (variant 1):
    Bram geometry: abits=8 dbits=16 wports=0 rports=0
    Estimated number of duplicates for more read ports: dups=1
    Metrics for $__ICE40_RAM4K_M0: awaste=9 dwaste=0 bwaste=144 waste=144 efficiency=99
    Rule #1 for bram type $__ICE40_RAM4K_M0 (variant 1) accepted.
    Mapping to bram type $__ICE40_RAM4K_M0 (variant 1):
      Write port #0 is in clock domain \U$$0.clk.
        Mapped to bram port B1.
      Read port #0 is in clock domain \U$$0.clk.
        Mapped to bram port A1.1.
      Updated properties: dups=1 waste=144 efficiency=99
      Storing for later selection.
  Checking rule #2 for bram type $__ICE40_RAM4K_M123 (variant 1):
    Bram geometry: abits=9 dbits=8 wports=0 rports=0
    Estimated number of duplicates for more read ports: dups=1
    Metrics for $__ICE40_RAM4K_M123: awaste=265 dwaste=0 bwaste=2120 waste=2120 efficiency=82
    Rule #2 for bram type $__ICE40_RAM4K_M123 (variant 1) accepted.
    Mapping to bram type $__ICE40_RAM4K_M123 (variant 1):
      Write port #0 is in clock domain \U$$0.clk.
        Mapped to bram port B1.
      Read port #0 is in clock domain \U$$0.clk.
        Mapped to bram port A1.1.
      Updated properties: dups=1 waste=2120 efficiency=82
      Storing for later selection.
  Checking rule #2 for bram type $__ICE40_RAM4K_M123 (variant 2):
    Bram geometry: abits=10 dbits=4 wports=0 rports=0
    Estimated number of duplicates for more read ports: dups=1
    Metrics for $__ICE40_RAM4K_M123: awaste=777 dwaste=0 bwaste=3108 waste=3108 efficiency=62
    Rule #2 for bram type $__ICE40_RAM4K_M123 (variant 2) accepted.
    Mapping to bram type $__ICE40_RAM4K_M123 (variant 2):
      Write port #0 is in clock domain \U$$0.clk.
        Mapped to bram port B1.
      Read port #0 is in clock domain \U$$0.clk.
        Mapped to bram port A1.1.
      Updated properties: dups=1 waste=3108 efficiency=62
      Storing for later selection.
  Checking rule #2 for bram type $__ICE40_RAM4K_M123 (variant 3):
    Bram geometry: abits=11 dbits=2 wports=0 rports=0
    Estimated number of duplicates for more read ports: dups=1
    Metrics for $__ICE40_RAM4K_M123: awaste=777 dwaste=0 bwaste=1554 waste=1554 efficiency=62
    Rule #2 for bram type $__ICE40_RAM4K_M123 (variant 3) accepted.
    Mapping to bram type $__ICE40_RAM4K_M123 (variant 3):
      Write port #0 is in clock domain \U$$0.clk.
        Mapped to bram port B1.
      Read port #0 is in clock domain \U$$0.clk.
        Mapped to bram port A1.1.
      Updated properties: dups=1 waste=1554 efficiency=62
      Storing for later selection.
  Selecting best of 4 rules:
    Efficiency for rule 2.3: efficiency=62, cells=16, acells=1
    Efficiency for rule 2.2: efficiency=62, cells=16, acells=2
    Efficiency for rule 2.1: efficiency=82, cells=12, acells=3
    Efficiency for rule 1.1: efficiency=99, cells=10, acells=5
    Selected rule 1.1 with efficiency 99.
    Mapping to bram type $__ICE40_RAM4K_M0 (variant 1):
      Write port #0 is in clock domain \U$$0.clk.
        Mapped to bram port B1.
      Read port #0 is in clock domain \U$$0.clk.
        Mapped to bram port A1.1.
      Creating $__ICE40_RAM4K_M0 cell at grid position <0 0 0>: U$$2.mem.0.0.0
      Creating $__ICE40_RAM4K_M0 cell at grid position <0 1 0>: U$$2.mem.0.1.0
      Creating $__ICE40_RAM4K_M0 cell at grid position <0 2 0>: U$$2.mem.0.2.0
      Creating $__ICE40_RAM4K_M0 cell at grid position <0 3 0>: U$$2.mem.0.3.0
      Creating $__ICE40_RAM4K_M0 cell at grid position <0 4 0>: U$$2.mem.0.4.0
      Creating $__ICE40_RAM4K_M0 cell at grid position <1 0 0>: U$$2.mem.1.0.0
      Creating $__ICE40_RAM4K_M0 cell at grid position <1 1 0>: U$$2.mem.1.1.0
      Creating $__ICE40_RAM4K_M0 cell at grid position <1 2 0>: U$$2.mem.1.2.0
      Creating $__ICE40_RAM4K_M0 cell at grid position <1 3 0>: U$$2.mem.1.3.0
      Creating $__ICE40_RAM4K_M0 cell at grid position <1 4 0>: U$$2.mem.1.4.0
Processing top.U$$2.picorv32.cpuregs:
  Properties: ports=3 bits=1024 rports=2 wports=1 dbits=32 abits=5 words=32
  Checking rule #1 for bram type $__ICE40_RAM4K_M0 (variant 1):
    Bram geometry: abits=8 dbits=16 wports=0 rports=0
    Estimated number of duplicates for more read ports: dups=1
    Metrics for $__ICE40_RAM4K_M0: awaste=224 dwaste=0 bwaste=3584 waste=3584 efficiency=12
    Rule #1 for bram type $__ICE40_RAM4K_M0 (variant 1) accepted.
    Mapping to bram type $__ICE40_RAM4K_M0 (variant 1):
      Write port #0 is in clock domain \U$$0.clk.
        Mapped to bram port B1.
      Read port #0 is in clock domain \U$$0.clk.
        Mapped to bram port A1.1.
      Read port #1 is in clock domain \U$$0.clk.
        Failed to map read port #1.
      Growing more read ports by duplicating bram cells.
      Read port #0 is in clock domain \U$$0.clk.
        Mapped to bram port A1.1.
      Read port #1 is in clock domain \U$$0.clk.
        Mapped to bram port A1.2.
      Updated properties: dups=2 waste=7168 efficiency=6
      Storing for later selection.
  Checking rule #2 for bram type $__ICE40_RAM4K_M123 (variant 1):
    Bram geometry: abits=9 dbits=8 wports=0 rports=0
    Estimated number of duplicates for more read ports: dups=1
    Metrics for $__ICE40_RAM4K_M123: awaste=480 dwaste=0 bwaste=3840 waste=3840 efficiency=6
    Rule #2 for bram type $__ICE40_RAM4K_M123 (variant 1) accepted.
    Mapping to bram type $__ICE40_RAM4K_M123 (variant 1):
      Write port #0 is in clock domain \U$$0.clk.
        Mapped to bram port B1.
      Read port #0 is in clock domain \U$$0.clk.
        Mapped to bram port A1.1.
      Read port #1 is in clock domain \U$$0.clk.
        Failed to map read port #1.
      Growing more read ports by duplicating bram cells.
      Read port #0 is in clock domain \U$$0.clk.
        Mapped to bram port A1.1.
      Read port #1 is in clock domain \U$$0.clk.
        Mapped to bram port A1.2.
      Updated properties: dups=2 waste=7680 efficiency=3
      Storing for later selection.
  Checking rule #2 for bram type $__ICE40_RAM4K_M123 (variant 2):
    Bram geometry: abits=10 dbits=4 wports=0 rports=0
    Estimated number of duplicates for more read ports: dups=1
    Metrics for $__ICE40_RAM4K_M123: awaste=992 dwaste=0 bwaste=3968 waste=3968 efficiency=3
    Rule #2 for bram type $__ICE40_RAM4K_M123 (variant 2) accepted.
    Mapping to bram type $__ICE40_RAM4K_M123 (variant 2):
      Write port #0 is in clock domain \U$$0.clk.
        Mapped to bram port B1.
      Read port #0 is in clock domain \U$$0.clk.
        Mapped to bram port A1.1.
      Read port #1 is in clock domain \U$$0.clk.
        Failed to map read port #1.
      Growing more read ports by duplicating bram cells.
      Read port #0 is in clock domain \U$$0.clk.
        Mapped to bram port A1.1.
      Read port #1 is in clock domain \U$$0.clk.
        Mapped to bram port A1.2.
      Updated properties: dups=2 waste=7936 efficiency=1
    Rule for bram type $__ICE40_RAM4K_M123 rejected: requirement 'min efficiency 2' not met.
    Mapping to bram type $__ICE40_RAM4K_M123 failed.
  Checking rule #2 for bram type $__ICE40_RAM4K_M123 (variant 3):
    Bram geometry: abits=11 dbits=2 wports=0 rports=0
    Estimated number of duplicates for more read ports: dups=1
    Metrics for $__ICE40_RAM4K_M123: awaste=2016 dwaste=0 bwaste=4032 waste=4032 efficiency=1
    Rule #2 for bram type $__ICE40_RAM4K_M123 (variant 3) rejected: requirement 'min efficiency 2' not met.
  Selecting best of 2 rules:
    Efficiency for rule 2.1: efficiency=3, cells=8, acells=1
    Efficiency for rule 1.1: efficiency=6, cells=4, acells=1
    Selected rule 1.1 with efficiency 6.
    Mapping to bram type $__ICE40_RAM4K_M0 (variant 1):
      Write port #0 is in clock domain \U$$0.clk.
        Mapped to bram port B1.
      Read port #0 is in clock domain \U$$0.clk.
        Mapped to bram port A1.1.
      Read port #1 is in clock domain \U$$0.clk.
        Failed to map read port #1.
      Growing more read ports by duplicating bram cells.
      Read port #0 is in clock domain \U$$0.clk.
        Mapped to bram port A1.1.
      Read port #1 is in clock domain \U$$0.clk.
        Mapped to bram port A1.2.
      Creating $__ICE40_RAM4K_M0 cell at grid position <0 0 0>: U$$2.picorv32.cpuregs.0.0.0
        Adding extra logic for transparent port A1.1.
      Creating $__ICE40_RAM4K_M0 cell at grid position <0 0 1>: U$$2.picorv32.cpuregs.0.0.1
        Adding extra logic for transparent port A1.2.
      Creating $__ICE40_RAM4K_M0 cell at grid position <1 0 0>: U$$2.picorv32.cpuregs.1.0.0
        Adding extra logic for transparent port A1.1.
      Creating $__ICE40_RAM4K_M0 cell at grid position <1 0 1>: U$$2.picorv32.cpuregs.1.0.1
        Adding extra logic for transparent port A1.2.

3.25. Executing TECHMAP pass (map to technology primitives).

3.25.1. Executing Verilog-2005 frontend: /usr/local/bin/../share/yosys/ice40/brams_map.v
Parsing Verilog input from `/usr/local/bin/../share/yosys/ice40/brams_map.v' to AST representation.
Generating RTLIL representation for module `\$__ICE40_RAM4K'.
Generating RTLIL representation for module `\$__ICE40_RAM4K_M0'.
Generating RTLIL representation for module `\$__ICE40_RAM4K_M123'.
Successfully finished Verilog frontend.

3.25.2. Continuing TECHMAP pass.
Using template $paramod$986f348acfff56c631224a2047576dafa5cab58e\$__ICE40_RAM4K_M0 for cells of type $__ICE40_RAM4K_M0.
Using template $paramod\$__ICE40_RAM4K_M0\CLKPOL2=1\CLKPOL3=1 for cells of type $__ICE40_RAM4K_M0.
Using template $paramod$b95b2c745f74f6ea1e20b04643d299e0090b6924\$__ICE40_RAM4K_M0 for cells of type $__ICE40_RAM4K_M0.
Using template $paramod$20a3e5251a98d01dfa256b47a9d0112952710cfb\$__ICE40_RAM4K_M123 for cells of type $__ICE40_RAM4K_M123.
Using template $paramod$b2648b224520a2d38e7dec7ba7d66f2eaf45c883\$__ICE40_RAM4K_M123 for cells of type $__ICE40_RAM4K_M123.
Using template $paramod$e157e7331131adec4ec0db2641bdaed0d3195481\$__ICE40_RAM4K_M0 for cells of type $__ICE40_RAM4K_M0.
Using template $paramod$455fb737dbc31d6670811c5bab20d49895db22a7\$__ICE40_RAM4K_M0 for cells of type $__ICE40_RAM4K_M0.
Using template $paramod$7969d23c5e1dcf352771963304eed5d3cd41b065\$__ICE40_RAM4K_M0 for cells of type $__ICE40_RAM4K_M0.
Using template $paramod$6faa0679d911cf175195570353d5112f661bed14\$__ICE40_RAM4K_M0 for cells of type $__ICE40_RAM4K_M0.
Using template $paramod$ea07a369666df392bea033ec6c4d4623fe3e00ee\$__ICE40_RAM4K_M123 for cells of type $__ICE40_RAM4K_M123.
Using template $paramod$fe12f8aadbb698289e9b6706ed960e37916fb1bc\$__ICE40_RAM4K_M0 for cells of type $__ICE40_RAM4K_M0.
Using template $paramod$38e567ae8bd69184842130fab1c20b9ce8110a91\$__ICE40_RAM4K_M0 for cells of type $__ICE40_RAM4K_M0.
Using template $paramod$2cf2013ebc39a9af9c9047552696b8c122577927\$__ICE40_RAM4K_M0 for cells of type $__ICE40_RAM4K_M0.
Using template $paramod$5f460e93ec63e3da605da428384deea1f2a138f2\$__ICE40_RAM4K for cells of type $__ICE40_RAM4K.
Using template $paramod$4200c10d2e07b3359d49ca78f8f6d43ec6f7e316\$__ICE40_RAM4K for cells of type $__ICE40_RAM4K.
Using template $paramod$a3d386c3ceb9b921eb869033422e734089d0709b\$__ICE40_RAM4K for cells of type $__ICE40_RAM4K.
Using template $paramod$282a6f29b022814e0faa4f86f4a2869a6368bf93\$__ICE40_RAM4K for cells of type $__ICE40_RAM4K.
Using template $paramod$32d6f8976d6f0b087352efd6a87126b47c569bc1\$__ICE40_RAM4K for cells of type $__ICE40_RAM4K.
Using template $paramod$081a1d55787019970fc198296f72345115cb214b\$__ICE40_RAM4K for cells of type $__ICE40_RAM4K.
Using template $paramod$961124938033df3449122bd8489c900686b8cb2a\$__ICE40_RAM4K for cells of type $__ICE40_RAM4K.
Using template $paramod$bcc3756dc0b0df3b0338b3e48a36540380436c8a\$__ICE40_RAM4K for cells of type $__ICE40_RAM4K.
Using template $paramod$6006c23a9f81325510ce8a61d737bbdca3acbb18\$__ICE40_RAM4K for cells of type $__ICE40_RAM4K.
Using template $paramod$c0e6f4ea55bd4850459eabea8120ec23d18726e7\$__ICE40_RAM4K for cells of type $__ICE40_RAM4K.
Using template $paramod$ae949c7453518b20755c1db2b931097f253ed266\$__ICE40_RAM4K for cells of type $__ICE40_RAM4K.
Using template $paramod$5480260bd7976d5537bf60a19de7cf69e65ec893\$__ICE40_RAM4K for cells of type $__ICE40_RAM4K.
Using template $paramod$39e9ab245971ef3b4515b8de2166270b9d9dba3c\$__ICE40_RAM4K for cells of type $__ICE40_RAM4K.
No more expansions possible.
<suppressed ~569 debug messages>

3.26. Executing ICE40_BRAMINIT pass.

3.27. Executing OPT pass (performing simple optimizations).

3.27.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module top.
<suppressed ~99 debug messages>

3.27.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\top'.
<suppressed ~90 debug messages>
Removed a total of 30 cells.

3.27.3. Executing OPT_RMDFF pass (remove dff with constant values).

3.27.4. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \top..
Removed 22 unused cells and 454 unused wires.
<suppressed ~26 debug messages>

3.27.5. Finished fast OPT passes.

3.28. Executing MEMORY_MAP pass (converting $mem cells to logic and flip-flops).

3.29. Executing OPT pass (performing simple optimizations).

3.29.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module top.

3.29.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\top'.
Removed a total of 0 cells.

3.29.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \top..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
    dead port 1/3 on $pmux $techmap\U$$2.picorv32.$procmux$2310.
    dead port 1/2 on $mux $techmap\U$$2.picorv32.$procmux$2316.
    dead port 2/2 on $mux $techmap\U$$2.picorv32.$procmux$2316.
    dead port 2/3 on $pmux $techmap\U$$2.picorv32.$procmux$2414.
    dead port 3/6 on $pmux $techmap\U$$2.picorv32.$procmux$2883.
    dead port 1/3 on $pmux $techmap\U$$2.picorv32.$procmux$2893.
    dead port 2/3 on $pmux $techmap\U$$2.picorv32.$procmux$2893.
    dead port 3/3 on $pmux $techmap\U$$2.picorv32.$procmux$2893.
    dead port 1/3 on $pmux $techmap\U$$2.picorv32.$procmux$3090.
Removed 9 multiplexer ports.
<suppressed ~186 debug messages>

3.29.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \top.
    New input vector for $reduce_or cell $techmap$techmap5435\U$$2.mem.1.1.0.$reduce_or$/usr/local/bin/../share/yosys/ice40/brams_map.v:222$5434: { $auto$rtlil.cc:1906:Mux$5185 [0] $auto$rtlil.cc:1906:Mux$5185 [1] $auto$rtlil.cc:1906:Mux$5185 [2] $auto$rtlil.cc:1906:Mux$5185 [3] $auto$rtlil.cc:1906:Mux$5185 [4] $auto$rtlil.cc:1906:Mux$5185 [5] $auto$rtlil.cc:1906:Mux$5185 [6] $auto$rtlil.cc:1906:Mux$5185 [7] $auto$rtlil.cc:1906:Mux$5185 [8] $auto$rtlil.cc:1906:Mux$5185 [9] $auto$rtlil.cc:1906:Mux$5185 [10] $auto$rtlil.cc:1906:Mux$5185 [11] $auto$rtlil.cc:1906:Mux$5185 [12] $auto$rtlil.cc:1906:Mux$5185 [13] $auto$rtlil.cc:1906:Mux$5185 [14] $auto$rtlil.cc:1906:Mux$5185 [15] }
    New input vector for $reduce_or cell $techmap$techmap5432\U$$2.mem.0.1.0.$reduce_or$/usr/local/bin/../share/yosys/ice40/brams_map.v:222$5431: { $auto$rtlil.cc:1906:Mux$5120 [0] $auto$rtlil.cc:1906:Mux$5120 [1] $auto$rtlil.cc:1906:Mux$5120 [2] $auto$rtlil.cc:1906:Mux$5120 [3] $auto$rtlil.cc:1906:Mux$5120 [4] $auto$rtlil.cc:1906:Mux$5120 [5] $auto$rtlil.cc:1906:Mux$5120 [6] $auto$rtlil.cc:1906:Mux$5120 [7] $auto$rtlil.cc:1906:Mux$5120 [8] $auto$rtlil.cc:1906:Mux$5120 [9] $auto$rtlil.cc:1906:Mux$5120 [10] $auto$rtlil.cc:1906:Mux$5120 [11] $auto$rtlil.cc:1906:Mux$5120 [12] $auto$rtlil.cc:1906:Mux$5120 [13] $auto$rtlil.cc:1906:Mux$5120 [14] $auto$rtlil.cc:1906:Mux$5120 [15] }
    New input vector for $reduce_or cell $techmap$techmap5429\U$$2.mem.0.2.0.$reduce_or$/usr/local/bin/../share/yosys/ice40/brams_map.v:222$5428: { $auto$rtlil.cc:1906:Mux$5133 [0] $auto$rtlil.cc:1906:Mux$5133 [1] $auto$rtlil.cc:1906:Mux$5133 [2] $auto$rtlil.cc:1906:Mux$5133 [3] $auto$rtlil.cc:1906:Mux$5133 [4] $auto$rtlil.cc:1906:Mux$5133 [5] $auto$rtlil.cc:1906:Mux$5133 [6] $auto$rtlil.cc:1906:Mux$5133 [7] $auto$rtlil.cc:1906:Mux$5133 [8] $auto$rtlil.cc:1906:Mux$5133 [9] $auto$rtlil.cc:1906:Mux$5133 [10] $auto$rtlil.cc:1906:Mux$5133 [11] $auto$rtlil.cc:1906:Mux$5133 [12] $auto$rtlil.cc:1906:Mux$5133 [13] $auto$rtlil.cc:1906:Mux$5133 [14] $auto$rtlil.cc:1906:Mux$5133 [15] }
    New input vector for $reduce_or cell $techmap$techmap5424\U$$2.mem.0.3.0.$reduce_or$/usr/local/bin/../share/yosys/ice40/brams_map.v:222$5423: { $auto$rtlil.cc:1906:Mux$5146 [0] $auto$rtlil.cc:1906:Mux$5146 [1] $auto$rtlil.cc:1906:Mux$5146 [2] $auto$rtlil.cc:1906:Mux$5146 [3] $auto$rtlil.cc:1906:Mux$5146 [4] $auto$rtlil.cc:1906:Mux$5146 [5] $auto$rtlil.cc:1906:Mux$5146 [6] $auto$rtlil.cc:1906:Mux$5146 [7] $auto$rtlil.cc:1906:Mux$5146 [8] $auto$rtlil.cc:1906:Mux$5146 [9] $auto$rtlil.cc:1906:Mux$5146 [10] $auto$rtlil.cc:1906:Mux$5146 [11] $auto$rtlil.cc:1906:Mux$5146 [12] $auto$rtlil.cc:1906:Mux$5146 [13] $auto$rtlil.cc:1906:Mux$5146 [14] $auto$rtlil.cc:1906:Mux$5146 [15] }
    New input vector for $reduce_or cell $techmap$techmap5420\U$$2.mem.1.4.0.$reduce_or$/usr/local/bin/../share/yosys/ice40/brams_map.v:222$5419: { $auto$rtlil.cc:1906:Mux$5224 [0] $auto$rtlil.cc:1906:Mux$5224 [1] $auto$rtlil.cc:1906:Mux$5224 [2] $auto$rtlil.cc:1906:Mux$5224 [3] $auto$rtlil.cc:1906:Mux$5224 [4] $auto$rtlil.cc:1906:Mux$5224 [5] $auto$rtlil.cc:1906:Mux$5224 [6] $auto$rtlil.cc:1906:Mux$5224 [7] $auto$rtlil.cc:1906:Mux$5224 [8] $auto$rtlil.cc:1906:Mux$5224 [9] $auto$rtlil.cc:1906:Mux$5224 [10] $auto$rtlil.cc:1906:Mux$5224 [11] $auto$rtlil.cc:1906:Mux$5224 [12] $auto$rtlil.cc:1906:Mux$5224 [13] $auto$rtlil.cc:1906:Mux$5224 [14] $auto$rtlil.cc:1906:Mux$5224 [15] }
    New input vector for $reduce_or cell $techmap$techmap5417\U$$2.mem.1.2.0.$reduce_or$/usr/local/bin/../share/yosys/ice40/brams_map.v:222$5416: { $auto$rtlil.cc:1906:Mux$5198 [0] $auto$rtlil.cc:1906:Mux$5198 [1] $auto$rtlil.cc:1906:Mux$5198 [2] $auto$rtlil.cc:1906:Mux$5198 [3] $auto$rtlil.cc:1906:Mux$5198 [4] $auto$rtlil.cc:1906:Mux$5198 [5] $auto$rtlil.cc:1906:Mux$5198 [6] $auto$rtlil.cc:1906:Mux$5198 [7] $auto$rtlil.cc:1906:Mux$5198 [8] $auto$rtlil.cc:1906:Mux$5198 [9] $auto$rtlil.cc:1906:Mux$5198 [10] $auto$rtlil.cc:1906:Mux$5198 [11] $auto$rtlil.cc:1906:Mux$5198 [12] $auto$rtlil.cc:1906:Mux$5198 [13] $auto$rtlil.cc:1906:Mux$5198 [14] $auto$rtlil.cc:1906:Mux$5198 [15] }
    New input vector for $reduce_or cell $techmap$techmap5414\U$$2.mem.1.3.0.$reduce_or$/usr/local/bin/../share/yosys/ice40/brams_map.v:222$5413: { $auto$rtlil.cc:1906:Mux$5211 [0] $auto$rtlil.cc:1906:Mux$5211 [1] $auto$rtlil.cc:1906:Mux$5211 [2] $auto$rtlil.cc:1906:Mux$5211 [3] $auto$rtlil.cc:1906:Mux$5211 [4] $auto$rtlil.cc:1906:Mux$5211 [5] $auto$rtlil.cc:1906:Mux$5211 [6] $auto$rtlil.cc:1906:Mux$5211 [7] $auto$rtlil.cc:1906:Mux$5211 [8] $auto$rtlil.cc:1906:Mux$5211 [9] $auto$rtlil.cc:1906:Mux$5211 [10] $auto$rtlil.cc:1906:Mux$5211 [11] $auto$rtlil.cc:1906:Mux$5211 [12] $auto$rtlil.cc:1906:Mux$5211 [13] $auto$rtlil.cc:1906:Mux$5211 [14] $auto$rtlil.cc:1906:Mux$5211 [15] }
    New input vector for $reduce_or cell $techmap$techmap5409\U$$2.mem.1.0.0.$reduce_or$/usr/local/bin/../share/yosys/ice40/brams_map.v:222$5405: { $auto$rtlil.cc:1906:Mux$5172 [0] $auto$rtlil.cc:1906:Mux$5172 [1] $auto$rtlil.cc:1906:Mux$5172 [2] $auto$rtlil.cc:1906:Mux$5172 [3] $auto$rtlil.cc:1906:Mux$5172 [4] $auto$rtlil.cc:1906:Mux$5172 [5] $auto$rtlil.cc:1906:Mux$5172 [6] $auto$rtlil.cc:1906:Mux$5172 [7] $auto$rtlil.cc:1906:Mux$5172 [8] $auto$rtlil.cc:1906:Mux$5172 [9] $auto$rtlil.cc:1906:Mux$5172 [10] $auto$rtlil.cc:1906:Mux$5172 [11] $auto$rtlil.cc:1906:Mux$5172 [12] $auto$rtlil.cc:1906:Mux$5172 [13] $auto$rtlil.cc:1906:Mux$5172 [14] $auto$rtlil.cc:1906:Mux$5172 [15] }
    New input vector for $reduce_or cell $techmap$techmap5406\U$$2.mem.0.0.0.$reduce_or$/usr/local/bin/../share/yosys/ice40/brams_map.v:222$5405: { $auto$rtlil.cc:1906:Mux$5107 [0] $auto$rtlil.cc:1906:Mux$5107 [1] $auto$rtlil.cc:1906:Mux$5107 [2] $auto$rtlil.cc:1906:Mux$5107 [3] $auto$rtlil.cc:1906:Mux$5107 [4] $auto$rtlil.cc:1906:Mux$5107 [5] $auto$rtlil.cc:1906:Mux$5107 [6] $auto$rtlil.cc:1906:Mux$5107 [7] $auto$rtlil.cc:1906:Mux$5107 [8] $auto$rtlil.cc:1906:Mux$5107 [9] $auto$rtlil.cc:1906:Mux$5107 [10] $auto$rtlil.cc:1906:Mux$5107 [11] $auto$rtlil.cc:1906:Mux$5107 [12] $auto$rtlil.cc:1906:Mux$5107 [13] $auto$rtlil.cc:1906:Mux$5107 [14] $auto$rtlil.cc:1906:Mux$5107 [15] }
    New input vector for $reduce_or cell $techmap$techmap5398\U$$2.mem.0.4.0.$reduce_or$/usr/local/bin/../share/yosys/ice40/brams_map.v:222$5397: { $auto$rtlil.cc:1906:Mux$5159 [0] $auto$rtlil.cc:1906:Mux$5159 [1] $auto$rtlil.cc:1906:Mux$5159 [2] $auto$rtlil.cc:1906:Mux$5159 [3] $auto$rtlil.cc:1906:Mux$5159 [4] $auto$rtlil.cc:1906:Mux$5159 [5] $auto$rtlil.cc:1906:Mux$5159 [6] $auto$rtlil.cc:1906:Mux$5159 [7] $auto$rtlil.cc:1906:Mux$5159 [8] $auto$rtlil.cc:1906:Mux$5159 [9] $auto$rtlil.cc:1906:Mux$5159 [10] $auto$rtlil.cc:1906:Mux$5159 [11] $auto$rtlil.cc:1906:Mux$5159 [12] $auto$rtlil.cc:1906:Mux$5159 [13] $auto$rtlil.cc:1906:Mux$5159 [14] $auto$rtlil.cc:1906:Mux$5159 [15] }
    New input vector for $reduce_or cell $auto$opt_reduce.cc:126:opt_mux$4734: { \U$$2.picorv32.cpu_state [0] \U$$2.picorv32.cpu_state [1] \U$$2.picorv32.cpu_state [2] \U$$2.picorv32.cpu_state [4] \U$$2.picorv32.cpu_state [5] \U$$2.picorv32.cpu_state [6] }
    New input vector for $reduce_or cell $auto$opt_reduce.cc:126:opt_mux$4730: { \U$$2.picorv32.cpu_state [0] \U$$2.picorv32.cpu_state [1] \U$$2.picorv32.cpu_state [2] \U$$2.picorv32.cpu_state [3] \U$$2.picorv32.cpu_state [4] \U$$2.picorv32.cpu_state [6] }
    New input vector for $reduce_or cell $auto$fsm_map.cc:144:implement_pattern_cache$5086: { $auto$fsm_map.cc:118:implement_pattern_cache$5076 $auto$fsm_map.cc:118:implement_pattern_cache$5080 $auto$fsm_map.cc:118:implement_pattern_cache$5084 }
    New input vector for $reduce_or cell $auto$fsm_map.cc:144:implement_pattern_cache$5060: { $auto$fsm_map.cc:118:implement_pattern_cache$5050 $auto$fsm_map.cc:118:implement_pattern_cache$5058 $auto$fsm_map.cc:118:implement_pattern_cache$5054 }
    New input vector for $reduce_or cell $auto$fsm_map.cc:144:implement_pattern_cache$5047: { $auto$fsm_map.cc:118:implement_pattern_cache$5041 $auto$fsm_map.cc:118:implement_pattern_cache$5045 $auto$fsm_map.cc:118:implement_pattern_cache$5037 $auto$fsm_map.cc:118:implement_pattern_cache$5033 }
    New input vector for $reduce_or cell $auto$fsm_map.cc:144:implement_pattern_cache$5030: { $auto$fsm_map.cc:118:implement_pattern_cache$5024 $auto$fsm_map.cc:118:implement_pattern_cache$5028 }
    New input vector for $reduce_or cell $auto$fsm_map.cc:144:implement_pattern_cache$5021: { $auto$fsm_map.cc:118:implement_pattern_cache$4999 $auto$fsm_map.cc:118:implement_pattern_cache$4995 $auto$fsm_map.cc:74:implement_pattern_cache$4989 $auto$fsm_map.cc:118:implement_pattern_cache$5019 $auto$fsm_map.cc:118:implement_pattern_cache$5015 $auto$fsm_map.cc:118:implement_pattern_cache$5011 $auto$fsm_map.cc:118:implement_pattern_cache$5007 $auto$fsm_map.cc:118:implement_pattern_cache$5003 }
    New input vector for $reduce_or cell $auto$fsm_map.cc:144:implement_pattern_cache$4988: { $auto$fsm_map.cc:118:implement_pattern_cache$4984 $auto$fsm_map.cc:74:implement_pattern_cache$4986 }
    New input vector for $reduce_or cell $auto$fsm_map.cc:105:implement_pattern_cache$4994: { \U$$2.picorv32.cpu_state [5] \U$$2.picorv32.cpu_state [6] }
    Consolidated identical input bits for $mux cell $auto$memory_bram.cc:898:replace_cell$5106:
      Old ports: A=16'0000000000000000, B={ \U$$2.picorv32.mem_wstrb [1] \U$$2.picorv32.mem_wstrb [1] \U$$2.picorv32.mem_wstrb [1] \U$$2.picorv32.mem_wstrb [1] \U$$2.picorv32.mem_wstrb [1] \U$$2.picorv32.mem_wstrb [1] \U$$2.picorv32.mem_wstrb [1] \U$$2.picorv32.mem_wstrb [1:0] \U$$2.picorv32.mem_wstrb [0] \U$$2.picorv32.mem_wstrb [0] \U$$2.picorv32.mem_wstrb [0] \U$$2.picorv32.mem_wstrb [0] \U$$2.picorv32.mem_wstrb [0] \U$$2.picorv32.mem_wstrb [0] \U$$2.picorv32.mem_wstrb [0] }, Y=$auto$rtlil.cc:1906:Mux$5107
      New ports: A=2'00, B=\U$$2.picorv32.mem_wstrb [1:0], Y={ $auto$rtlil.cc:1906:Mux$5107 [8] $auto$rtlil.cc:1906:Mux$5107 [0] }
      New connections: { $auto$rtlil.cc:1906:Mux$5107 [15:9] $auto$rtlil.cc:1906:Mux$5107 [7:1] } = { $auto$rtlil.cc:1906:Mux$5107 [8] $auto$rtlil.cc:1906:Mux$5107 [8] $auto$rtlil.cc:1906:Mux$5107 [8] $auto$rtlil.cc:1906:Mux$5107 [8] $auto$rtlil.cc:1906:Mux$5107 [8] $auto$rtlil.cc:1906:Mux$5107 [8] $auto$rtlil.cc:1906:Mux$5107 [8] $auto$rtlil.cc:1906:Mux$5107 [0] $auto$rtlil.cc:1906:Mux$5107 [0] $auto$rtlil.cc:1906:Mux$5107 [0] $auto$rtlil.cc:1906:Mux$5107 [0] $auto$rtlil.cc:1906:Mux$5107 [0] $auto$rtlil.cc:1906:Mux$5107 [0] $auto$rtlil.cc:1906:Mux$5107 [0] }
    Consolidated identical input bits for $mux cell $auto$memory_bram.cc:898:replace_cell$5119:
      Old ports: A=16'0000000000000000, B={ \U$$2.picorv32.mem_wstrb [1] \U$$2.picorv32.mem_wstrb [1] \U$$2.picorv32.mem_wstrb [1] \U$$2.picorv32.mem_wstrb [1] \U$$2.picorv32.mem_wstrb [1] \U$$2.picorv32.mem_wstrb [1] \U$$2.picorv32.mem_wstrb [1] \U$$2.picorv32.mem_wstrb [1:0] \U$$2.picorv32.mem_wstrb [0] \U$$2.picorv32.mem_wstrb [0] \U$$2.picorv32.mem_wstrb [0] \U$$2.picorv32.mem_wstrb [0] \U$$2.picorv32.mem_wstrb [0] \U$$2.picorv32.mem_wstrb [0] \U$$2.picorv32.mem_wstrb [0] }, Y=$auto$rtlil.cc:1906:Mux$5120
      New ports: A=2'00, B=\U$$2.picorv32.mem_wstrb [1:0], Y={ $auto$rtlil.cc:1906:Mux$5120 [8] $auto$rtlil.cc:1906:Mux$5120 [0] }
      New connections: { $auto$rtlil.cc:1906:Mux$5120 [15:9] $auto$rtlil.cc:1906:Mux$5120 [7:1] } = { $auto$rtlil.cc:1906:Mux$5120 [8] $auto$rtlil.cc:1906:Mux$5120 [8] $auto$rtlil.cc:1906:Mux$5120 [8] $auto$rtlil.cc:1906:Mux$5120 [8] $auto$rtlil.cc:1906:Mux$5120 [8] $auto$rtlil.cc:1906:Mux$5120 [8] $auto$rtlil.cc:1906:Mux$5120 [8] $auto$rtlil.cc:1906:Mux$5120 [0] $auto$rtlil.cc:1906:Mux$5120 [0] $auto$rtlil.cc:1906:Mux$5120 [0] $auto$rtlil.cc:1906:Mux$5120 [0] $auto$rtlil.cc:1906:Mux$5120 [0] $auto$rtlil.cc:1906:Mux$5120 [0] $auto$rtlil.cc:1906:Mux$5120 [0] }
    Consolidated identical input bits for $mux cell $auto$memory_bram.cc:898:replace_cell$5132:
      Old ports: A=16'0000000000000000, B={ \U$$2.picorv32.mem_wstrb [1] \U$$2.picorv32.mem_wstrb [1] \U$$2.picorv32.mem_wstrb [1] \U$$2.picorv32.mem_wstrb [1] \U$$2.picorv32.mem_wstrb [1] \U$$2.picorv32.mem_wstrb [1] \U$$2.picorv32.mem_wstrb [1] \U$$2.picorv32.mem_wstrb [1:0] \U$$2.picorv32.mem_wstrb [0] \U$$2.picorv32.mem_wstrb [0] \U$$2.picorv32.mem_wstrb [0] \U$$2.picorv32.mem_wstrb [0] \U$$2.picorv32.mem_wstrb [0] \U$$2.picorv32.mem_wstrb [0] \U$$2.picorv32.mem_wstrb [0] }, Y=$auto$rtlil.cc:1906:Mux$5133
      New ports: A=2'00, B=\U$$2.picorv32.mem_wstrb [1:0], Y={ $auto$rtlil.cc:1906:Mux$5133 [8] $auto$rtlil.cc:1906:Mux$5133 [0] }
      New connections: { $auto$rtlil.cc:1906:Mux$5133 [15:9] $auto$rtlil.cc:1906:Mux$5133 [7:1] } = { $auto$rtlil.cc:1906:Mux$5133 [8] $auto$rtlil.cc:1906:Mux$5133 [8] $auto$rtlil.cc:1906:Mux$5133 [8] $auto$rtlil.cc:1906:Mux$5133 [8] $auto$rtlil.cc:1906:Mux$5133 [8] $auto$rtlil.cc:1906:Mux$5133 [8] $auto$rtlil.cc:1906:Mux$5133 [8] $auto$rtlil.cc:1906:Mux$5133 [0] $auto$rtlil.cc:1906:Mux$5133 [0] $auto$rtlil.cc:1906:Mux$5133 [0] $auto$rtlil.cc:1906:Mux$5133 [0] $auto$rtlil.cc:1906:Mux$5133 [0] $auto$rtlil.cc:1906:Mux$5133 [0] $auto$rtlil.cc:1906:Mux$5133 [0] }
    Consolidated identical input bits for $mux cell $auto$memory_bram.cc:898:replace_cell$5145:
      Old ports: A=16'0000000000000000, B={ \U$$2.picorv32.mem_wstrb [1] \U$$2.picorv32.mem_wstrb [1] \U$$2.picorv32.mem_wstrb [1] \U$$2.picorv32.mem_wstrb [1] \U$$2.picorv32.mem_wstrb [1] \U$$2.picorv32.mem_wstrb [1] \U$$2.picorv32.mem_wstrb [1] \U$$2.picorv32.mem_wstrb [1:0] \U$$2.picorv32.mem_wstrb [0] \U$$2.picorv32.mem_wstrb [0] \U$$2.picorv32.mem_wstrb [0] \U$$2.picorv32.mem_wstrb [0] \U$$2.picorv32.mem_wstrb [0] \U$$2.picorv32.mem_wstrb [0] \U$$2.picorv32.mem_wstrb [0] }, Y=$auto$rtlil.cc:1906:Mux$5146
      New ports: A=2'00, B=\U$$2.picorv32.mem_wstrb [1:0], Y={ $auto$rtlil.cc:1906:Mux$5146 [8] $auto$rtlil.cc:1906:Mux$5146 [0] }
      New connections: { $auto$rtlil.cc:1906:Mux$5146 [15:9] $auto$rtlil.cc:1906:Mux$5146 [7:1] } = { $auto$rtlil.cc:1906:Mux$5146 [8] $auto$rtlil.cc:1906:Mux$5146 [8] $auto$rtlil.cc:1906:Mux$5146 [8] $auto$rtlil.cc:1906:Mux$5146 [8] $auto$rtlil.cc:1906:Mux$5146 [8] $auto$rtlil.cc:1906:Mux$5146 [8] $auto$rtlil.cc:1906:Mux$5146 [8] $auto$rtlil.cc:1906:Mux$5146 [0] $auto$rtlil.cc:1906:Mux$5146 [0] $auto$rtlil.cc:1906:Mux$5146 [0] $auto$rtlil.cc:1906:Mux$5146 [0] $auto$rtlil.cc:1906:Mux$5146 [0] $auto$rtlil.cc:1906:Mux$5146 [0] $auto$rtlil.cc:1906:Mux$5146 [0] }
    Consolidated identical input bits for $mux cell $auto$memory_bram.cc:898:replace_cell$5158:
      Old ports: A=16'0000000000000000, B={ \U$$2.picorv32.mem_wstrb [1] \U$$2.picorv32.mem_wstrb [1] \U$$2.picorv32.mem_wstrb [1] \U$$2.picorv32.mem_wstrb [1] \U$$2.picorv32.mem_wstrb [1] \U$$2.picorv32.mem_wstrb [1] \U$$2.picorv32.mem_wstrb [1] \U$$2.picorv32.mem_wstrb [1:0] \U$$2.picorv32.mem_wstrb [0] \U$$2.picorv32.mem_wstrb [0] \U$$2.picorv32.mem_wstrb [0] \U$$2.picorv32.mem_wstrb [0] \U$$2.picorv32.mem_wstrb [0] \U$$2.picorv32.mem_wstrb [0] \U$$2.picorv32.mem_wstrb [0] }, Y=$auto$rtlil.cc:1906:Mux$5159
      New ports: A=2'00, B=\U$$2.picorv32.mem_wstrb [1:0], Y={ $auto$rtlil.cc:1906:Mux$5159 [8] $auto$rtlil.cc:1906:Mux$5159 [0] }
      New connections: { $auto$rtlil.cc:1906:Mux$5159 [15:9] $auto$rtlil.cc:1906:Mux$5159 [7:1] } = { $auto$rtlil.cc:1906:Mux$5159 [8] $auto$rtlil.cc:1906:Mux$5159 [8] $auto$rtlil.cc:1906:Mux$5159 [8] $auto$rtlil.cc:1906:Mux$5159 [8] $auto$rtlil.cc:1906:Mux$5159 [8] $auto$rtlil.cc:1906:Mux$5159 [8] $auto$rtlil.cc:1906:Mux$5159 [8] $auto$rtlil.cc:1906:Mux$5159 [0] $auto$rtlil.cc:1906:Mux$5159 [0] $auto$rtlil.cc:1906:Mux$5159 [0] $auto$rtlil.cc:1906:Mux$5159 [0] $auto$rtlil.cc:1906:Mux$5159 [0] $auto$rtlil.cc:1906:Mux$5159 [0] $auto$rtlil.cc:1906:Mux$5159 [0] }
    Consolidated identical input bits for $mux cell $auto$memory_bram.cc:898:replace_cell$5171:
      Old ports: A=16'0000000000000000, B={ \U$$2.picorv32.mem_wstrb [3] \U$$2.picorv32.mem_wstrb [3] \U$$2.picorv32.mem_wstrb [3] \U$$2.picorv32.mem_wstrb [3] \U$$2.picorv32.mem_wstrb [3] \U$$2.picorv32.mem_wstrb [3] \U$$2.picorv32.mem_wstrb [3] \U$$2.picorv32.mem_wstrb [3:2] \U$$2.picorv32.mem_wstrb [2] \U$$2.picorv32.mem_wstrb [2] \U$$2.picorv32.mem_wstrb [2] \U$$2.picorv32.mem_wstrb [2] \U$$2.picorv32.mem_wstrb [2] \U$$2.picorv32.mem_wstrb [2] \U$$2.picorv32.mem_wstrb [2] }, Y=$auto$rtlil.cc:1906:Mux$5172
      New ports: A=2'00, B=\U$$2.picorv32.mem_wstrb [3:2], Y={ $auto$rtlil.cc:1906:Mux$5172 [8] $auto$rtlil.cc:1906:Mux$5172 [0] }
      New connections: { $auto$rtlil.cc:1906:Mux$5172 [15:9] $auto$rtlil.cc:1906:Mux$5172 [7:1] } = { $auto$rtlil.cc:1906:Mux$5172 [8] $auto$rtlil.cc:1906:Mux$5172 [8] $auto$rtlil.cc:1906:Mux$5172 [8] $auto$rtlil.cc:1906:Mux$5172 [8] $auto$rtlil.cc:1906:Mux$5172 [8] $auto$rtlil.cc:1906:Mux$5172 [8] $auto$rtlil.cc:1906:Mux$5172 [8] $auto$rtlil.cc:1906:Mux$5172 [0] $auto$rtlil.cc:1906:Mux$5172 [0] $auto$rtlil.cc:1906:Mux$5172 [0] $auto$rtlil.cc:1906:Mux$5172 [0] $auto$rtlil.cc:1906:Mux$5172 [0] $auto$rtlil.cc:1906:Mux$5172 [0] $auto$rtlil.cc:1906:Mux$5172 [0] }
    Consolidated identical input bits for $mux cell $auto$memory_bram.cc:898:replace_cell$5184:
      Old ports: A=16'0000000000000000, B={ \U$$2.picorv32.mem_wstrb [3] \U$$2.picorv32.mem_wstrb [3] \U$$2.picorv32.mem_wstrb [3] \U$$2.picorv32.mem_wstrb [3] \U$$2.picorv32.mem_wstrb [3] \U$$2.picorv32.mem_wstrb [3] \U$$2.picorv32.mem_wstrb [3] \U$$2.picorv32.mem_wstrb [3:2] \U$$2.picorv32.mem_wstrb [2] \U$$2.picorv32.mem_wstrb [2] \U$$2.picorv32.mem_wstrb [2] \U$$2.picorv32.mem_wstrb [2] \U$$2.picorv32.mem_wstrb [2] \U$$2.picorv32.mem_wstrb [2] \U$$2.picorv32.mem_wstrb [2] }, Y=$auto$rtlil.cc:1906:Mux$5185
      New ports: A=2'00, B=\U$$2.picorv32.mem_wstrb [3:2], Y={ $auto$rtlil.cc:1906:Mux$5185 [8] $auto$rtlil.cc:1906:Mux$5185 [0] }
      New connections: { $auto$rtlil.cc:1906:Mux$5185 [15:9] $auto$rtlil.cc:1906:Mux$5185 [7:1] } = { $auto$rtlil.cc:1906:Mux$5185 [8] $auto$rtlil.cc:1906:Mux$5185 [8] $auto$rtlil.cc:1906:Mux$5185 [8] $auto$rtlil.cc:1906:Mux$5185 [8] $auto$rtlil.cc:1906:Mux$5185 [8] $auto$rtlil.cc:1906:Mux$5185 [8] $auto$rtlil.cc:1906:Mux$5185 [8] $auto$rtlil.cc:1906:Mux$5185 [0] $auto$rtlil.cc:1906:Mux$5185 [0] $auto$rtlil.cc:1906:Mux$5185 [0] $auto$rtlil.cc:1906:Mux$5185 [0] $auto$rtlil.cc:1906:Mux$5185 [0] $auto$rtlil.cc:1906:Mux$5185 [0] $auto$rtlil.cc:1906:Mux$5185 [0] }
    Consolidated identical input bits for $mux cell $auto$memory_bram.cc:898:replace_cell$5197:
      Old ports: A=16'0000000000000000, B={ \U$$2.picorv32.mem_wstrb [3] \U$$2.picorv32.mem_wstrb [3] \U$$2.picorv32.mem_wstrb [3] \U$$2.picorv32.mem_wstrb [3] \U$$2.picorv32.mem_wstrb [3] \U$$2.picorv32.mem_wstrb [3] \U$$2.picorv32.mem_wstrb [3] \U$$2.picorv32.mem_wstrb [3:2] \U$$2.picorv32.mem_wstrb [2] \U$$2.picorv32.mem_wstrb [2] \U$$2.picorv32.mem_wstrb [2] \U$$2.picorv32.mem_wstrb [2] \U$$2.picorv32.mem_wstrb [2] \U$$2.picorv32.mem_wstrb [2] \U$$2.picorv32.mem_wstrb [2] }, Y=$auto$rtlil.cc:1906:Mux$5198
      New ports: A=2'00, B=\U$$2.picorv32.mem_wstrb [3:2], Y={ $auto$rtlil.cc:1906:Mux$5198 [8] $auto$rtlil.cc:1906:Mux$5198 [0] }
      New connections: { $auto$rtlil.cc:1906:Mux$5198 [15:9] $auto$rtlil.cc:1906:Mux$5198 [7:1] } = { $auto$rtlil.cc:1906:Mux$5198 [8] $auto$rtlil.cc:1906:Mux$5198 [8] $auto$rtlil.cc:1906:Mux$5198 [8] $auto$rtlil.cc:1906:Mux$5198 [8] $auto$rtlil.cc:1906:Mux$5198 [8] $auto$rtlil.cc:1906:Mux$5198 [8] $auto$rtlil.cc:1906:Mux$5198 [8] $auto$rtlil.cc:1906:Mux$5198 [0] $auto$rtlil.cc:1906:Mux$5198 [0] $auto$rtlil.cc:1906:Mux$5198 [0] $auto$rtlil.cc:1906:Mux$5198 [0] $auto$rtlil.cc:1906:Mux$5198 [0] $auto$rtlil.cc:1906:Mux$5198 [0] $auto$rtlil.cc:1906:Mux$5198 [0] }
    Consolidated identical input bits for $mux cell $auto$memory_bram.cc:898:replace_cell$5210:
      Old ports: A=16'0000000000000000, B={ \U$$2.picorv32.mem_wstrb [3] \U$$2.picorv32.mem_wstrb [3] \U$$2.picorv32.mem_wstrb [3] \U$$2.picorv32.mem_wstrb [3] \U$$2.picorv32.mem_wstrb [3] \U$$2.picorv32.mem_wstrb [3] \U$$2.picorv32.mem_wstrb [3] \U$$2.picorv32.mem_wstrb [3:2] \U$$2.picorv32.mem_wstrb [2] \U$$2.picorv32.mem_wstrb [2] \U$$2.picorv32.mem_wstrb [2] \U$$2.picorv32.mem_wstrb [2] \U$$2.picorv32.mem_wstrb [2] \U$$2.picorv32.mem_wstrb [2] \U$$2.picorv32.mem_wstrb [2] }, Y=$auto$rtlil.cc:1906:Mux$5211
      New ports: A=2'00, B=\U$$2.picorv32.mem_wstrb [3:2], Y={ $auto$rtlil.cc:1906:Mux$5211 [8] $auto$rtlil.cc:1906:Mux$5211 [0] }
      New connections: { $auto$rtlil.cc:1906:Mux$5211 [15:9] $auto$rtlil.cc:1906:Mux$5211 [7:1] } = { $auto$rtlil.cc:1906:Mux$5211 [8] $auto$rtlil.cc:1906:Mux$5211 [8] $auto$rtlil.cc:1906:Mux$5211 [8] $auto$rtlil.cc:1906:Mux$5211 [8] $auto$rtlil.cc:1906:Mux$5211 [8] $auto$rtlil.cc:1906:Mux$5211 [8] $auto$rtlil.cc:1906:Mux$5211 [8] $auto$rtlil.cc:1906:Mux$5211 [0] $auto$rtlil.cc:1906:Mux$5211 [0] $auto$rtlil.cc:1906:Mux$5211 [0] $auto$rtlil.cc:1906:Mux$5211 [0] $auto$rtlil.cc:1906:Mux$5211 [0] $auto$rtlil.cc:1906:Mux$5211 [0] $auto$rtlil.cc:1906:Mux$5211 [0] }
    Consolidated identical input bits for $mux cell $auto$memory_bram.cc:898:replace_cell$5223:
      Old ports: A=16'0000000000000000, B={ \U$$2.picorv32.mem_wstrb [3] \U$$2.picorv32.mem_wstrb [3] \U$$2.picorv32.mem_wstrb [3] \U$$2.picorv32.mem_wstrb [3] \U$$2.picorv32.mem_wstrb [3] \U$$2.picorv32.mem_wstrb [3] \U$$2.picorv32.mem_wstrb [3] \U$$2.picorv32.mem_wstrb [3:2] \U$$2.picorv32.mem_wstrb [2] \U$$2.picorv32.mem_wstrb [2] \U$$2.picorv32.mem_wstrb [2] \U$$2.picorv32.mem_wstrb [2] \U$$2.picorv32.mem_wstrb [2] \U$$2.picorv32.mem_wstrb [2] \U$$2.picorv32.mem_wstrb [2] }, Y=$auto$rtlil.cc:1906:Mux$5224
      New ports: A=2'00, B=\U$$2.picorv32.mem_wstrb [3:2], Y={ $auto$rtlil.cc:1906:Mux$5224 [8] $auto$rtlil.cc:1906:Mux$5224 [0] }
      New connections: { $auto$rtlil.cc:1906:Mux$5224 [15:9] $auto$rtlil.cc:1906:Mux$5224 [7:1] } = { $auto$rtlil.cc:1906:Mux$5224 [8] $auto$rtlil.cc:1906:Mux$5224 [8] $auto$rtlil.cc:1906:Mux$5224 [8] $auto$rtlil.cc:1906:Mux$5224 [8] $auto$rtlil.cc:1906:Mux$5224 [8] $auto$rtlil.cc:1906:Mux$5224 [8] $auto$rtlil.cc:1906:Mux$5224 [8] $auto$rtlil.cc:1906:Mux$5224 [0] $auto$rtlil.cc:1906:Mux$5224 [0] $auto$rtlil.cc:1906:Mux$5224 [0] $auto$rtlil.cc:1906:Mux$5224 [0] $auto$rtlil.cc:1906:Mux$5224 [0] $auto$rtlil.cc:1906:Mux$5224 [0] $auto$rtlil.cc:1906:Mux$5224 [0] }
    Consolidated identical input bits for $mux cell $auto$memory_bram.cc:938:replace_cell$5316:
      Old ports: A=16'0000000000000000, B={ $auto$memory_bram.cc:837:replace_cell$5231 [15] $auto$memory_bram.cc:837:replace_cell$5231 [15] $auto$memory_bram.cc:837:replace_cell$5231 [15] $auto$memory_bram.cc:837:replace_cell$5231 [15] $auto$memory_bram.cc:837:replace_cell$5231 [15] $auto$memory_bram.cc:837:replace_cell$5231 [15] $auto$memory_bram.cc:837:replace_cell$5231 [15] $auto$memory_bram.cc:837:replace_cell$5231 [15] $auto$memory_bram.cc:837:replace_cell$5231 [15] $auto$memory_bram.cc:837:replace_cell$5231 [15] $auto$memory_bram.cc:837:replace_cell$5231 [15] $auto$memory_bram.cc:837:replace_cell$5231 [15] $auto$memory_bram.cc:837:replace_cell$5231 [15] $auto$memory_bram.cc:837:replace_cell$5231 [15] $auto$memory_bram.cc:837:replace_cell$5231 [15] $auto$memory_bram.cc:837:replace_cell$5231 [15] }, Y=$auto$rtlil.cc:1906:Mux$5236
      New ports: A=1'0, B=$auto$memory_bram.cc:837:replace_cell$5231 [15], Y=$auto$rtlil.cc:1906:Mux$5236 [0]
      New connections: $auto$rtlil.cc:1906:Mux$5236 [15:1] = { $auto$rtlil.cc:1906:Mux$5236 [0] $auto$rtlil.cc:1906:Mux$5236 [0] $auto$rtlil.cc:1906:Mux$5236 [0] $auto$rtlil.cc:1906:Mux$5236 [0] $auto$rtlil.cc:1906:Mux$5236 [0] $auto$rtlil.cc:1906:Mux$5236 [0] $auto$rtlil.cc:1906:Mux$5236 [0] $auto$rtlil.cc:1906:Mux$5236 [0] $auto$rtlil.cc:1906:Mux$5236 [0] $auto$rtlil.cc:1906:Mux$5236 [0] $auto$rtlil.cc:1906:Mux$5236 [0] $auto$rtlil.cc:1906:Mux$5236 [0] $auto$rtlil.cc:1906:Mux$5236 [0] $auto$rtlil.cc:1906:Mux$5236 [0] $auto$rtlil.cc:1906:Mux$5236 [0] }
    Consolidated identical input bits for $mux cell $auto$memory_bram.cc:938:replace_cell$5355:
      Old ports: A=16'0000000000000000, B={ $auto$memory_bram.cc:837:replace_cell$5231 [15] $auto$memory_bram.cc:837:replace_cell$5231 [15] $auto$memory_bram.cc:837:replace_cell$5231 [15] $auto$memory_bram.cc:837:replace_cell$5231 [15] $auto$memory_bram.cc:837:replace_cell$5231 [15] $auto$memory_bram.cc:837:replace_cell$5231 [15] $auto$memory_bram.cc:837:replace_cell$5231 [15] $auto$memory_bram.cc:837:replace_cell$5231 [15] $auto$memory_bram.cc:837:replace_cell$5231 [15] $auto$memory_bram.cc:837:replace_cell$5231 [15] $auto$memory_bram.cc:837:replace_cell$5231 [15] $auto$memory_bram.cc:837:replace_cell$5231 [15] $auto$memory_bram.cc:837:replace_cell$5231 [15] $auto$memory_bram.cc:837:replace_cell$5231 [15] $auto$memory_bram.cc:837:replace_cell$5231 [15] $auto$memory_bram.cc:837:replace_cell$5231 [15] }, Y=$auto$rtlil.cc:1906:Mux$5275
      New ports: A=1'0, B=$auto$memory_bram.cc:837:replace_cell$5231 [15], Y=$auto$rtlil.cc:1906:Mux$5275 [0]
      New connections: $auto$rtlil.cc:1906:Mux$5275 [15:1] = { $auto$rtlil.cc:1906:Mux$5275 [0] $auto$rtlil.cc:1906:Mux$5275 [0] $auto$rtlil.cc:1906:Mux$5275 [0] $auto$rtlil.cc:1906:Mux$5275 [0] $auto$rtlil.cc:1906:Mux$5275 [0] $auto$rtlil.cc:1906:Mux$5275 [0] $auto$rtlil.cc:1906:Mux$5275 [0] $auto$rtlil.cc:1906:Mux$5275 [0] $auto$rtlil.cc:1906:Mux$5275 [0] $auto$rtlil.cc:1906:Mux$5275 [0] $auto$rtlil.cc:1906:Mux$5275 [0] $auto$rtlil.cc:1906:Mux$5275 [0] $auto$rtlil.cc:1906:Mux$5275 [0] $auto$rtlil.cc:1906:Mux$5275 [0] $auto$rtlil.cc:1906:Mux$5275 [0] }
    Consolidated identical input bits for $pmux cell $techmap\U$$2.picorv32.$procmux$2347:
      Old ports: A=\U$$2.picorv32.mem_rdata_word, B={ \U$$2.picorv32.mem_rdata_word [15] \U$$2.picorv32.mem_rdata_word [15] \U$$2.picorv32.mem_rdata_word [15] \U$$2.picorv32.mem_rdata_word [15] \U$$2.picorv32.mem_rdata_word [15] \U$$2.picorv32.mem_rdata_word [15] \U$$2.picorv32.mem_rdata_word [15] \U$$2.picorv32.mem_rdata_word [15] \U$$2.picorv32.mem_rdata_word [15] \U$$2.picorv32.mem_rdata_word [15] \U$$2.picorv32.mem_rdata_word [15] \U$$2.picorv32.mem_rdata_word [15] \U$$2.picorv32.mem_rdata_word [15] \U$$2.picorv32.mem_rdata_word [15] \U$$2.picorv32.mem_rdata_word [15] \U$$2.picorv32.mem_rdata_word [15] \U$$2.picorv32.mem_rdata_word [15:0] \U$$2.picorv32.mem_rdata_word [7] \U$$2.picorv32.mem_rdata_word [7] \U$$2.picorv32.mem_rdata_word [7] \U$$2.picorv32.mem_rdata_word [7] \U$$2.picorv32.mem_rdata_word [7] \U$$2.picorv32.mem_rdata_word [7] \U$$2.picorv32.mem_rdata_word [7] \U$$2.picorv32.mem_rdata_word [7] \U$$2.picorv32.mem_rdata_word [7] \U$$2.picorv32.mem_rdata_word [7] \U$$2.picorv32.mem_rdata_word [7] \U$$2.picorv32.mem_rdata_word [7] \U$$2.picorv32.mem_rdata_word [7] \U$$2.picorv32.mem_rdata_word [7] \U$$2.picorv32.mem_rdata_word [7] \U$$2.picorv32.mem_rdata_word [7] \U$$2.picorv32.mem_rdata_word [7] \U$$2.picorv32.mem_rdata_word [7] \U$$2.picorv32.mem_rdata_word [7] \U$$2.picorv32.mem_rdata_word [7] \U$$2.picorv32.mem_rdata_word [7] \U$$2.picorv32.mem_rdata_word [7] \U$$2.picorv32.mem_rdata_word [7] \U$$2.picorv32.mem_rdata_word [7] \U$$2.picorv32.mem_rdata_word [7:0] }, Y=$techmap\U$$2.picorv32.$procmux$2347_Y
      New ports: A=\U$$2.picorv32.mem_rdata_word [31:8], B={ \U$$2.picorv32.mem_rdata_word [15] \U$$2.picorv32.mem_rdata_word [15] \U$$2.picorv32.mem_rdata_word [15] \U$$2.picorv32.mem_rdata_word [15] \U$$2.picorv32.mem_rdata_word [15] \U$$2.picorv32.mem_rdata_word [15] \U$$2.picorv32.mem_rdata_word [15] \U$$2.picorv32.mem_rdata_word [15] \U$$2.picorv32.mem_rdata_word [15] \U$$2.picorv32.mem_rdata_word [15] \U$$2.picorv32.mem_rdata_word [15] \U$$2.picorv32.mem_rdata_word [15] \U$$2.picorv32.mem_rdata_word [15] \U$$2.picorv32.mem_rdata_word [15] \U$$2.picorv32.mem_rdata_word [15] \U$$2.picorv32.mem_rdata_word [15] \U$$2.picorv32.mem_rdata_word [15:7] \U$$2.picorv32.mem_rdata_word [7] \U$$2.picorv32.mem_rdata_word [7] \U$$2.picorv32.mem_rdata_word [7] \U$$2.picorv32.mem_rdata_word [7] \U$$2.picorv32.mem_rdata_word [7] \U$$2.picorv32.mem_rdata_word [7] \U$$2.picorv32.mem_rdata_word [7] \U$$2.picorv32.mem_rdata_word [7] \U$$2.picorv32.mem_rdata_word [7] \U$$2.picorv32.mem_rdata_word [7] \U$$2.picorv32.mem_rdata_word [7] \U$$2.picorv32.mem_rdata_word [7] \U$$2.picorv32.mem_rdata_word [7] \U$$2.picorv32.mem_rdata_word [7] \U$$2.picorv32.mem_rdata_word [7] \U$$2.picorv32.mem_rdata_word [7] \U$$2.picorv32.mem_rdata_word [7] \U$$2.picorv32.mem_rdata_word [7] \U$$2.picorv32.mem_rdata_word [7] \U$$2.picorv32.mem_rdata_word [7] \U$$2.picorv32.mem_rdata_word [7] \U$$2.picorv32.mem_rdata_word [7] \U$$2.picorv32.mem_rdata_word [7] }, Y=$techmap\U$$2.picorv32.$procmux$2347_Y [31:8]
      New connections: $techmap\U$$2.picorv32.$procmux$2347_Y [7:0] = \U$$2.picorv32.mem_rdata_word [7:0]
    Consolidated identical input bits for $mux cell $techmap\U$$2.picorv32.$procmux$3405:
      Old ports: A={ \U$$2.picorv32.mem_rdata_latched [31] \U$$2.picorv32.mem_rdata_latched [31] \U$$2.picorv32.mem_rdata_latched [31] \U$$2.picorv32.mem_rdata_latched [31] \U$$2.picorv32.mem_rdata_latched [31] \U$$2.picorv32.mem_rdata_latched [31] \U$$2.picorv32.mem_rdata_latched [31] \U$$2.picorv32.mem_rdata_latched [31] \U$$2.picorv32.mem_rdata_latched [31] \U$$2.picorv32.mem_rdata_latched [31] \U$$2.picorv32.mem_rdata_latched [31] \U$$2.picorv32.mem_rdata_latched [31] }, B={ \U$$2.picorv32.mem_rdata_latched [12] \U$$2.picorv32.mem_rdata_latched [12] \U$$2.picorv32.mem_rdata_latched [12] \U$$2.picorv32.mem_rdata_latched [12] \U$$2.picorv32.mem_rdata_latched [12] \U$$2.picorv32.mem_rdata_latched [12] \U$$2.picorv32.mem_rdata_latched [12] \U$$2.picorv32.mem_rdata_latched [12] \U$$2.picorv32.mem_rdata_latched [12] \U$$2.picorv32.mem_rdata_latched [12] \U$$2.picorv32.mem_rdata_latched [12] \U$$2.picorv32.mem_rdata_latched [12] }, Y=$techmap\U$$2.picorv32.$procmux$3405_Y
      New ports: A=\U$$2.picorv32.mem_rdata_latched [31], B=\U$$2.picorv32.mem_rdata_latched [12], Y=$techmap\U$$2.picorv32.$procmux$3405_Y [0]
      New connections: $techmap\U$$2.picorv32.$procmux$3405_Y [11:1] = { $techmap\U$$2.picorv32.$procmux$3405_Y [0] $techmap\U$$2.picorv32.$procmux$3405_Y [0] $techmap\U$$2.picorv32.$procmux$3405_Y [0] $techmap\U$$2.picorv32.$procmux$3405_Y [0] $techmap\U$$2.picorv32.$procmux$3405_Y [0] $techmap\U$$2.picorv32.$procmux$3405_Y [0] $techmap\U$$2.picorv32.$procmux$3405_Y [0] $techmap\U$$2.picorv32.$procmux$3405_Y [0] $techmap\U$$2.picorv32.$procmux$3405_Y [0] $techmap\U$$2.picorv32.$procmux$3405_Y [0] $techmap\U$$2.picorv32.$procmux$3405_Y [0] }
    Consolidated identical input bits for $mux cell $techmap\U$$2.picorv32.$procmux$3433:
      Old ports: A=2'00, B=2'10, Y=$auto$wreduce.cc:455:run$4822 [1:0]
      New ports: A=1'0, B=1'1, Y=$auto$wreduce.cc:455:run$4822 [1]
      New connections: $auto$wreduce.cc:455:run$4822 [0] = 1'0
    Consolidated identical input bits for $mux cell $techmap\U$$2.picorv32.$procmux$3618:
      Old ports: A=\U$$2.picorv32.mem_rdata_latched [19:12], B={ \U$$2.picorv32.mem_rdata_latched [12] \U$$2.picorv32.mem_rdata_latched [12] \U$$2.picorv32.mem_rdata_latched [12] \U$$2.picorv32.mem_rdata_latched [12] \U$$2.picorv32.mem_rdata_latched [12] \U$$2.picorv32.mem_rdata_latched [12] \U$$2.picorv32.mem_rdata_latched [12] \U$$2.picorv32.mem_rdata_latched [12] }, Y=$techmap\U$$2.picorv32.$procmux$3618_Y
      New ports: A=\U$$2.picorv32.mem_rdata_latched [19:13], B={ \U$$2.picorv32.mem_rdata_latched [12] \U$$2.picorv32.mem_rdata_latched [12] \U$$2.picorv32.mem_rdata_latched [12] \U$$2.picorv32.mem_rdata_latched [12] \U$$2.picorv32.mem_rdata_latched [12] \U$$2.picorv32.mem_rdata_latched [12] \U$$2.picorv32.mem_rdata_latched [12] }, Y=$techmap\U$$2.picorv32.$procmux$3618_Y [7:1]
      New connections: $techmap\U$$2.picorv32.$procmux$3618_Y [0] = \U$$2.picorv32.mem_rdata_latched [12]
    Consolidated identical input bits for $mux cell $techmap\U$$2.picorv32.$procmux$4278:
      Old ports: A={ \U$$2.picorv32.mem_rdata_latched [12] \U$$2.picorv32.mem_rdata_latched [12] \U$$2.picorv32.mem_rdata_latched [12] \U$$2.picorv32.mem_rdata_latched [12] \U$$2.picorv32.mem_rdata_latched [12] }, B={ \U$$2.picorv32.mem_rdata_latched [6] 4'0000 }, Y=$techmap\U$$2.picorv32.$procmux$4278_Y
      New ports: A={ \U$$2.picorv32.mem_rdata_latched [12] \U$$2.picorv32.mem_rdata_latched [12] }, B={ \U$$2.picorv32.mem_rdata_latched [6] 1'0 }, Y={ $techmap\U$$2.picorv32.$procmux$4278_Y [4] $techmap\U$$2.picorv32.$procmux$4278_Y [0] }
      New connections: $techmap\U$$2.picorv32.$procmux$4278_Y [3:1] = { $techmap\U$$2.picorv32.$procmux$4278_Y [0] $techmap\U$$2.picorv32.$procmux$4278_Y [0] $techmap\U$$2.picorv32.$procmux$4278_Y [0] }
    Consolidated identical input bits for $pmux cell $techmap\U$$2.picorv32.$procmux$4445:
      Old ports: A=\U$$2.picorv32.reg_op2, B={ \U$$2.picorv32.reg_op2 [15:0] \U$$2.picorv32.reg_op2 [15:0] \U$$2.picorv32.reg_op2 [7:0] \U$$2.picorv32.reg_op2 [7:0] \U$$2.picorv32.reg_op2 [7:0] \U$$2.picorv32.reg_op2 [7:0] }, Y=\U$$2.picorv32.mem_la_wdata
      New ports: A=\U$$2.picorv32.reg_op2 [31:8], B={ \U$$2.picorv32.reg_op2 [15:0] \U$$2.picorv32.reg_op2 [15:0] \U$$2.picorv32.reg_op2 [7:0] \U$$2.picorv32.reg_op2 [7:0] }, Y=\U$$2.picorv32.mem_la_wdata [31:8]
      New connections: \U$$2.picorv32.mem_la_wdata [7:0] = \U$$2.picorv32.reg_op2 [7:0]
    Consolidated identical input bits for $mux cell $techmap\U$$2.picorv32.$ternary$picorv32.v:1312$1354:
      Old ports: A=3'100, B=3'010, Y=$auto$wreduce.cc:455:run$4823 [2:0]
      New ports: A=2'10, B=2'01, Y=$auto$wreduce.cc:455:run$4823 [2:1]
      New connections: $auto$wreduce.cc:455:run$4823 [0] = 1'0
    Consolidated identical input bits for $mux cell $techmap\U$$2.picorv32.$ternary$picorv32.v:1555$1435:
      Old ports: A=3'100, B=3'010, Y=$auto$wreduce.cc:455:run$4824 [2:0]
      New ports: A=2'10, B=2'01, Y=$auto$wreduce.cc:455:run$4824 [2:1]
      New connections: $auto$wreduce.cc:455:run$4824 [0] = 1'0
    Consolidated identical input bits for $mux cell $techmap\U$$2.picorv32.$ternary$picorv32.v:382$963:
      Old ports: A={ \U$$2.picorv32.reg_op1 [31:2] 2'00 }, B={ $techmap\U$$2.picorv32.$add$picorv32.v:382$962_Y 2'00 }, Y=\U$$2.picorv32.mem_la_addr
      New ports: A=\U$$2.picorv32.reg_op1 [31:2], B=$techmap\U$$2.picorv32.$add$picorv32.v:382$962_Y, Y=\U$$2.picorv32.mem_la_addr [31:2]
      New connections: \U$$2.picorv32.mem_la_addr [1:0] = 2'00
    Consolidated identical input bits for $mux cell $techmap\U$$2.picorv32.$ternary$picorv32.v:411$978:
      Old ports: A=4'0011, B=4'1100, Y=$techmap\U$$2.picorv32.$ternary$picorv32.v:411$978_Y
      New ports: A=2'01, B=2'10, Y={ $techmap\U$$2.picorv32.$ternary$picorv32.v:411$978_Y [2] $techmap\U$$2.picorv32.$ternary$picorv32.v:411$978_Y [0] }
      New connections: { $techmap\U$$2.picorv32.$ternary$picorv32.v:411$978_Y [3] $techmap\U$$2.picorv32.$ternary$picorv32.v:411$978_Y [1] } = { $techmap\U$$2.picorv32.$ternary$picorv32.v:411$978_Y [2] $techmap\U$$2.picorv32.$ternary$picorv32.v:411$978_Y [0] }
    Consolidated identical input bits for $mux cell $techmap\U$$2.picorv32.$ternary$picorv32.v:491$996:
      Old ports: A=6'000000, B=6'100000, Y=$auto$wreduce.cc:455:run$4825 [5:0]
      New ports: A=1'0, B=1'1, Y=$auto$wreduce.cc:455:run$4825 [5]
      New connections: $auto$wreduce.cc:455:run$4825 [4:0] = 5'00000
    Consolidated identical input bits for $mux cell $techmap\U$$2.picorv32.$ternary$picorv32.v:617$1040:
      Old ports: A=2'11, B=2'00, Y=$auto$wreduce.cc:455:run$4826 [1:0]
      New ports: A=1'1, B=1'0, Y=$auto$wreduce.cc:455:run$4826 [0]
      New connections: $auto$wreduce.cc:455:run$4826 [1] = $auto$wreduce.cc:455:run$4826 [0]
    Consolidated identical input bits for $mux cell $techmap\U$$2.picorv32.pcpi_mul.$procmux$4495:
      Old ports: A={ \U$$2.picorv32.pcpi_mul.next_rdt [59] 3'000 \U$$2.picorv32.pcpi_mul.next_rdt [55] 3'000 \U$$2.picorv32.pcpi_mul.next_rdt [51] 3'000 \U$$2.picorv32.pcpi_mul.next_rdt [47] 3'000 \U$$2.picorv32.pcpi_mul.next_rdt [43] 3'000 \U$$2.picorv32.pcpi_mul.next_rdt [39] 3'000 \U$$2.picorv32.pcpi_mul.next_rdt [35] 3'000 \U$$2.picorv32.pcpi_mul.next_rdt [31] 3'000 \U$$2.picorv32.pcpi_mul.next_rdt [27] 3'000 \U$$2.picorv32.pcpi_mul.next_rdt [23] 3'000 \U$$2.picorv32.pcpi_mul.next_rdt [19] 3'000 \U$$2.picorv32.pcpi_mul.next_rdt [15] 3'000 \U$$2.picorv32.pcpi_mul.next_rdt [11] 3'000 \U$$2.picorv32.pcpi_mul.next_rdt [7] 3'000 \U$$2.picorv32.pcpi_mul.next_rdt [3] 4'0000 }, B=61'0000000000000000000000000000000000000000000000000000000000000, Y=$auto$wreduce.cc:455:run$4828 [60:0]
      New ports: A={ \U$$2.picorv32.pcpi_mul.next_rdt [59] \U$$2.picorv32.pcpi_mul.next_rdt [55] \U$$2.picorv32.pcpi_mul.next_rdt [51] \U$$2.picorv32.pcpi_mul.next_rdt [47] \U$$2.picorv32.pcpi_mul.next_rdt [43] \U$$2.picorv32.pcpi_mul.next_rdt [39] \U$$2.picorv32.pcpi_mul.next_rdt [35] \U$$2.picorv32.pcpi_mul.next_rdt [31] \U$$2.picorv32.pcpi_mul.next_rdt [27] \U$$2.picorv32.pcpi_mul.next_rdt [23] \U$$2.picorv32.pcpi_mul.next_rdt [19] \U$$2.picorv32.pcpi_mul.next_rdt [15] \U$$2.picorv32.pcpi_mul.next_rdt [11] \U$$2.picorv32.pcpi_mul.next_rdt [7] \U$$2.picorv32.pcpi_mul.next_rdt [3] }, B=15'000000000000000, Y={ $auto$wreduce.cc:455:run$4828 [60] $auto$wreduce.cc:455:run$4828 [56] $auto$wreduce.cc:455:run$4828 [52] $auto$wreduce.cc:455:run$4828 [48] $auto$wreduce.cc:455:run$4828 [44] $auto$wreduce.cc:455:run$4828 [40] $auto$wreduce.cc:455:run$4828 [36] $auto$wreduce.cc:455:run$4828 [32] $auto$wreduce.cc:455:run$4828 [28] $auto$wreduce.cc:455:run$4828 [24] $auto$wreduce.cc:455:run$4828 [20] $auto$wreduce.cc:455:run$4828 [16] $auto$wreduce.cc:455:run$4828 [12] $auto$wreduce.cc:455:run$4828 [8] $auto$wreduce.cc:455:run$4828 [4] }
      New connections: { $auto$wreduce.cc:455:run$4828 [59:57] $auto$wreduce.cc:455:run$4828 [55:53] $auto$wreduce.cc:455:run$4828 [51:49] $auto$wreduce.cc:455:run$4828 [47:45] $auto$wreduce.cc:455:run$4828 [43:41] $auto$wreduce.cc:455:run$4828 [39:37] $auto$wreduce.cc:455:run$4828 [35:33] $auto$wreduce.cc:455:run$4828 [31:29] $auto$wreduce.cc:455:run$4828 [27:25] $auto$wreduce.cc:455:run$4828 [23:21] $auto$wreduce.cc:455:run$4828 [19:17] $auto$wreduce.cc:455:run$4828 [15:13] $auto$wreduce.cc:455:run$4828 [11:9] $auto$wreduce.cc:455:run$4828 [7:5] $auto$wreduce.cc:455:run$4828 [3:0] } = 46'0000000000000000000000000000000000000000000000
    Consolidated identical input bits for $mux cell $techmap\U$$2.picorv32.pcpi_mul.$procmux$4508:
      Old ports: A={ 32'00000000000000000000000000000000 \U$$2.picorv32.reg_op2 }, B={ \U$$2.picorv32.reg_op2 [31] \U$$2.picorv32.reg_op2 [31] \U$$2.picorv32.reg_op2 [31] \U$$2.picorv32.reg_op2 [31] \U$$2.picorv32.reg_op2 [31] \U$$2.picorv32.reg_op2 [31] \U$$2.picorv32.reg_op2 [31] \U$$2.picorv32.reg_op2 [31] \U$$2.picorv32.reg_op2 [31] \U$$2.picorv32.reg_op2 [31] \U$$2.picorv32.reg_op2 [31] \U$$2.picorv32.reg_op2 [31] \U$$2.picorv32.reg_op2 [31] \U$$2.picorv32.reg_op2 [31] \U$$2.picorv32.reg_op2 [31] \U$$2.picorv32.reg_op2 [31] \U$$2.picorv32.reg_op2 [31] \U$$2.picorv32.reg_op2 [31] \U$$2.picorv32.reg_op2 [31] \U$$2.picorv32.reg_op2 [31] \U$$2.picorv32.reg_op2 [31] \U$$2.picorv32.reg_op2 [31] \U$$2.picorv32.reg_op2 [31] \U$$2.picorv32.reg_op2 [31] \U$$2.picorv32.reg_op2 [31] \U$$2.picorv32.reg_op2 [31] \U$$2.picorv32.reg_op2 [31] \U$$2.picorv32.reg_op2 [31] \U$$2.picorv32.reg_op2 [31] \U$$2.picorv32.reg_op2 [31] \U$$2.picorv32.reg_op2 [31] \U$$2.picorv32.reg_op2 [31] \U$$2.picorv32.reg_op2 }, Y=$auto$wreduce.cc:455:run$4830
      New ports: A=1'0, B=\U$$2.picorv32.reg_op2 [31], Y=$auto$wreduce.cc:455:run$4830 [32]
      New connections: { $auto$wreduce.cc:455:run$4830 [63:33] $auto$wreduce.cc:455:run$4830 [31:0] } = { $auto$wreduce.cc:455:run$4830 [32] $auto$wreduce.cc:455:run$4830 [32] $auto$wreduce.cc:455:run$4830 [32] $auto$wreduce.cc:455:run$4830 [32] $auto$wreduce.cc:455:run$4830 [32] $auto$wreduce.cc:455:run$4830 [32] $auto$wreduce.cc:455:run$4830 [32] $auto$wreduce.cc:455:run$4830 [32] $auto$wreduce.cc:455:run$4830 [32] $auto$wreduce.cc:455:run$4830 [32] $auto$wreduce.cc:455:run$4830 [32] $auto$wreduce.cc:455:run$4830 [32] $auto$wreduce.cc:455:run$4830 [32] $auto$wreduce.cc:455:run$4830 [32] $auto$wreduce.cc:455:run$4830 [32] $auto$wreduce.cc:455:run$4830 [32] $auto$wreduce.cc:455:run$4830 [32] $auto$wreduce.cc:455:run$4830 [32] $auto$wreduce.cc:455:run$4830 [32] $auto$wreduce.cc:455:run$4830 [32] $auto$wreduce.cc:455:run$4830 [32] $auto$wreduce.cc:455:run$4830 [32] $auto$wreduce.cc:455:run$4830 [32] $auto$wreduce.cc:455:run$4830 [32] $auto$wreduce.cc:455:run$4830 [32] $auto$wreduce.cc:455:run$4830 [32] $auto$wreduce.cc:455:run$4830 [32] $auto$wreduce.cc:455:run$4830 [32] $auto$wreduce.cc:455:run$4830 [32] $auto$wreduce.cc:455:run$4830 [32] $auto$wreduce.cc:455:run$4830 [32] \U$$2.picorv32.reg_op2 }
    Consolidated identical input bits for $mux cell $techmap\U$$2.picorv32.pcpi_mul.$procmux$4517:
      Old ports: A={ 32'00000000000000000000000000000000 \U$$2.picorv32.reg_op1 }, B={ \U$$2.picorv32.reg_op1 [31] \U$$2.picorv32.reg_op1 [31] \U$$2.picorv32.reg_op1 [31] \U$$2.picorv32.reg_op1 [31] \U$$2.picorv32.reg_op1 [31] \U$$2.picorv32.reg_op1 [31] \U$$2.picorv32.reg_op1 [31] \U$$2.picorv32.reg_op1 [31] \U$$2.picorv32.reg_op1 [31] \U$$2.picorv32.reg_op1 [31] \U$$2.picorv32.reg_op1 [31] \U$$2.picorv32.reg_op1 [31] \U$$2.picorv32.reg_op1 [31] \U$$2.picorv32.reg_op1 [31] \U$$2.picorv32.reg_op1 [31] \U$$2.picorv32.reg_op1 [31] \U$$2.picorv32.reg_op1 [31] \U$$2.picorv32.reg_op1 [31] \U$$2.picorv32.reg_op1 [31] \U$$2.picorv32.reg_op1 [31] \U$$2.picorv32.reg_op1 [31] \U$$2.picorv32.reg_op1 [31] \U$$2.picorv32.reg_op1 [31] \U$$2.picorv32.reg_op1 [31] \U$$2.picorv32.reg_op1 [31] \U$$2.picorv32.reg_op1 [31] \U$$2.picorv32.reg_op1 [31] \U$$2.picorv32.reg_op1 [31] \U$$2.picorv32.reg_op1 [31] \U$$2.picorv32.reg_op1 [31] \U$$2.picorv32.reg_op1 [31] \U$$2.picorv32.reg_op1 [31] \U$$2.picorv32.reg_op1 }, Y=$techmap\U$$2.picorv32.pcpi_mul.$procmux$4517_Y
      New ports: A=1'0, B=\U$$2.picorv32.reg_op1 [31], Y=$techmap\U$$2.picorv32.pcpi_mul.$procmux$4517_Y [32]
      New connections: { $techmap\U$$2.picorv32.pcpi_mul.$procmux$4517_Y [63:33] $techmap\U$$2.picorv32.pcpi_mul.$procmux$4517_Y [31:0] } = { $techmap\U$$2.picorv32.pcpi_mul.$procmux$4517_Y [32] $techmap\U$$2.picorv32.pcpi_mul.$procmux$4517_Y [32] $techmap\U$$2.picorv32.pcpi_mul.$procmux$4517_Y [32] $techmap\U$$2.picorv32.pcpi_mul.$procmux$4517_Y [32] $techmap\U$$2.picorv32.pcpi_mul.$procmux$4517_Y [32] $techmap\U$$2.picorv32.pcpi_mul.$procmux$4517_Y [32] $techmap\U$$2.picorv32.pcpi_mul.$procmux$4517_Y [32] $techmap\U$$2.picorv32.pcpi_mul.$procmux$4517_Y [32] $techmap\U$$2.picorv32.pcpi_mul.$procmux$4517_Y [32] $techmap\U$$2.picorv32.pcpi_mul.$procmux$4517_Y [32] $techmap\U$$2.picorv32.pcpi_mul.$procmux$4517_Y [32] $techmap\U$$2.picorv32.pcpi_mul.$procmux$4517_Y [32] $techmap\U$$2.picorv32.pcpi_mul.$procmux$4517_Y [32] $techmap\U$$2.picorv32.pcpi_mul.$procmux$4517_Y [32] $techmap\U$$2.picorv32.pcpi_mul.$procmux$4517_Y [32] $techmap\U$$2.picorv32.pcpi_mul.$procmux$4517_Y [32] $techmap\U$$2.picorv32.pcpi_mul.$procmux$4517_Y [32] $techmap\U$$2.picorv32.pcpi_mul.$procmux$4517_Y [32] $techmap\U$$2.picorv32.pcpi_mul.$procmux$4517_Y [32] $techmap\U$$2.picorv32.pcpi_mul.$procmux$4517_Y [32] $techmap\U$$2.picorv32.pcpi_mul.$procmux$4517_Y [32] $techmap\U$$2.picorv32.pcpi_mul.$procmux$4517_Y [32] $techmap\U$$2.picorv32.pcpi_mul.$procmux$4517_Y [32] $techmap\U$$2.picorv32.pcpi_mul.$procmux$4517_Y [32] $techmap\U$$2.picorv32.pcpi_mul.$procmux$4517_Y [32] $techmap\U$$2.picorv32.pcpi_mul.$procmux$4517_Y [32] $techmap\U$$2.picorv32.pcpi_mul.$procmux$4517_Y [32] $techmap\U$$2.picorv32.pcpi_mul.$procmux$4517_Y [32] $techmap\U$$2.picorv32.pcpi_mul.$procmux$4517_Y [32] $techmap\U$$2.picorv32.pcpi_mul.$procmux$4517_Y [32] $techmap\U$$2.picorv32.pcpi_mul.$procmux$4517_Y [32] \U$$2.picorv32.reg_op1 }
    Consolidated identical input bits for $mux cell $techmap\U$$2.picorv32.pcpi_mul.$ternary$picorv32.v:2286$768:
      Old ports: A=6'011110, B=6'111110, Y=$auto$wreduce.cc:455:run$4832 [5:0]
      New ports: A=1'0, B=1'1, Y=$auto$wreduce.cc:455:run$4832 [5]
      New connections: $auto$wreduce.cc:455:run$4832 [4:0] = 5'11110
  Optimizing cells in module \top.
    New input vector for $reduce_or cell $techmap$techmap5435\U$$2.mem.1.1.0.$reduce_or$/usr/local/bin/../share/yosys/ice40/brams_map.v:222$5434: { $auto$rtlil.cc:1906:Mux$5185 [0] $auto$rtlil.cc:1906:Mux$5185 [8] }
    New input vector for $reduce_or cell $techmap$techmap5432\U$$2.mem.0.1.0.$reduce_or$/usr/local/bin/../share/yosys/ice40/brams_map.v:222$5431: { $auto$rtlil.cc:1906:Mux$5120 [0] $auto$rtlil.cc:1906:Mux$5120 [8] }
    New input vector for $reduce_or cell $techmap$techmap5429\U$$2.mem.0.2.0.$reduce_or$/usr/local/bin/../share/yosys/ice40/brams_map.v:222$5428: { $auto$rtlil.cc:1906:Mux$5133 [0] $auto$rtlil.cc:1906:Mux$5133 [8] }
    New input vector for $reduce_or cell $techmap$techmap5424\U$$2.mem.0.3.0.$reduce_or$/usr/local/bin/../share/yosys/ice40/brams_map.v:222$5423: { $auto$rtlil.cc:1906:Mux$5146 [0] $auto$rtlil.cc:1906:Mux$5146 [8] }
    New input vector for $reduce_or cell $techmap$techmap5420\U$$2.mem.1.4.0.$reduce_or$/usr/local/bin/../share/yosys/ice40/brams_map.v:222$5419: { $auto$rtlil.cc:1906:Mux$5224 [0] $auto$rtlil.cc:1906:Mux$5224 [8] }
    New input vector for $reduce_or cell $techmap$techmap5417\U$$2.mem.1.2.0.$reduce_or$/usr/local/bin/../share/yosys/ice40/brams_map.v:222$5416: { $auto$rtlil.cc:1906:Mux$5198 [0] $auto$rtlil.cc:1906:Mux$5198 [8] }
    New input vector for $reduce_or cell $techmap$techmap5414\U$$2.mem.1.3.0.$reduce_or$/usr/local/bin/../share/yosys/ice40/brams_map.v:222$5413: { $auto$rtlil.cc:1906:Mux$5211 [0] $auto$rtlil.cc:1906:Mux$5211 [8] }
    New input vector for $reduce_or cell $techmap$techmap5409\U$$2.mem.1.0.0.$reduce_or$/usr/local/bin/../share/yosys/ice40/brams_map.v:222$5405: { $auto$rtlil.cc:1906:Mux$5172 [0] $auto$rtlil.cc:1906:Mux$5172 [8] }
    New input vector for $reduce_or cell $techmap$techmap5406\U$$2.mem.0.0.0.$reduce_or$/usr/local/bin/../share/yosys/ice40/brams_map.v:222$5405: { $auto$rtlil.cc:1906:Mux$5107 [0] $auto$rtlil.cc:1906:Mux$5107 [8] }
    New input vector for $reduce_or cell $techmap$techmap5398\U$$2.mem.0.4.0.$reduce_or$/usr/local/bin/../share/yosys/ice40/brams_map.v:222$5397: { $auto$rtlil.cc:1906:Mux$5159 [0] $auto$rtlil.cc:1906:Mux$5159 [8] }
  Optimizing cells in module \top.
Performed a total of 57 changes.

3.29.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\top'.
Removed a total of 0 cells.

3.29.6. Executing OPT_RMDFF pass (remove dff with constant values).

3.29.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \top..
Removed 1 unused cells and 3 unused wires.
<suppressed ~2 debug messages>

3.29.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module top.
<suppressed ~30 debug messages>

3.29.9. Rerunning OPT passes. (Maybe there is more to do..)

3.29.10. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \top..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~186 debug messages>

3.29.11. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \top.
Performed a total of 0 changes.

3.29.12. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\top'.
Removed a total of 0 cells.

3.29.13. Executing OPT_RMDFF pass (remove dff with constant values).

3.29.14. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \top..
Removed 0 unused cells and 10 unused wires.
<suppressed ~1 debug messages>

3.29.15. Executing OPT_EXPR pass (perform const folding).
Optimizing module top.

3.29.16. Finished OPT passes. (There is nothing left to do.)

3.30. Executing TECHMAP pass (map to technology primitives).

3.30.1. Executing Verilog-2005 frontend: /usr/local/bin/../share/yosys/techmap.v
Parsing Verilog input from `/usr/local/bin/../share/yosys/techmap.v' to AST representation.
Generating RTLIL representation for module `\_90_simplemap_bool_ops'.
Generating RTLIL representation for module `\_90_simplemap_reduce_ops'.
Generating RTLIL representation for module `\_90_simplemap_logic_ops'.
Generating RTLIL representation for module `\_90_simplemap_compare_ops'.
Generating RTLIL representation for module `\_90_simplemap_various'.
Generating RTLIL representation for module `\_90_simplemap_registers'.
Generating RTLIL representation for module `\_90_shift_ops_shr_shl_sshl_sshr'.
Generating RTLIL representation for module `\_90_shift_shiftx'.
Generating RTLIL representation for module `\_90_fa'.
Generating RTLIL representation for module `\_90_lcu'.
Generating RTLIL representation for module `\_90_alu'.
Generating RTLIL representation for module `\_90_macc'.
Generating RTLIL representation for module `\_90_alumacc'.
Generating RTLIL representation for module `\$__div_mod_u'.
Generating RTLIL representation for module `\$__div_mod'.
Generating RTLIL representation for module `\_90_div'.
Generating RTLIL representation for module `\_90_mod'.
Generating RTLIL representation for module `\_90_pow'.
Generating RTLIL representation for module `\_90_pmux'.
Generating RTLIL representation for module `\_90_lut'.
Successfully finished Verilog frontend.

3.30.2. Executing Verilog-2005 frontend: /usr/local/bin/../share/yosys/ice40/arith_map.v
Parsing Verilog input from `/usr/local/bin/../share/yosys/ice40/arith_map.v' to AST representation.
Generating RTLIL representation for module `\_80_ice40_alu'.
Successfully finished Verilog frontend.

3.30.3. Continuing TECHMAP pass.
Using extmapper simplemap for cells of type $mux.
Using extmapper simplemap for cells of type $eq.
Using extmapper simplemap for cells of type $lut.
Using extmapper simplemap for cells of type $dff.
Using template $paramod\_80_ice40_alu\A_SIGNED=0\B_SIGNED=0\A_WIDTH=32\B_WIDTH=32\Y_WIDTH=32 for cells of type $alu.
Using template $paramod\_80_ice40_alu\A_SIGNED=0\B_SIGNED=0\A_WIDTH=3\B_WIDTH=4\Y_WIDTH=5 for cells of type $alu.
Using template $paramod\_80_ice40_alu\A_SIGNED=0\B_SIGNED=0\A_WIDTH=1\B_WIDTH=30\Y_WIDTH=30 for cells of type $alu.
Using extmapper simplemap for cells of type $and.
Using extmapper simplemap for cells of type $not.
Using extmapper simplemap for cells of type $reduce_bool.
Using extmapper simplemap for cells of type $reduce_or.
Using extmapper simplemap for cells of type $logic_not.
Using template $paramod\_80_ice40_alu\A_SIGNED=0\B_SIGNED=0\A_WIDTH=1\B_WIDTH=8\Y_WIDTH=8 for cells of type $alu.
Using template $paramod\_80_ice40_alu\A_SIGNED=0\B_SIGNED=0\A_WIDTH=7\B_WIDTH=1\Y_WIDTH=7 for cells of type $alu.
Using template $paramod\_90_pmux\WIDTH=16\S_WIDTH=4 for cells of type $pmux.
Using extmapper maccmap for cells of type $macc.
  add \U$$2.picorv32.pcpi_mul.rd [31:28] (4 bits, unsigned)
  add \U$$2.picorv32.pcpi_mul.this_rs2 [31:28] (4 bits, unsigned)
  add \U$$2.picorv32.pcpi_mul.rdx [31:28] (4 bits, unsigned)
  add \U$$2.picorv32.pcpi_mul.rd [59:56] (4 bits, unsigned)
  add \U$$2.picorv32.pcpi_mul.this_rs2 [59:56] (4 bits, unsigned)
  add \U$$2.picorv32.pcpi_mul.rdx [59:56] (4 bits, unsigned)
  add \U$$2.picorv32.pcpi_mul.rd [7:4] (4 bits, unsigned)
  add \U$$2.picorv32.pcpi_mul.this_rs2 [7:4] (4 bits, unsigned)
  add \U$$2.picorv32.pcpi_mul.rdx [7:4] (4 bits, unsigned)
  add \U$$2.picorv32.pcpi_mul.rd [3:0] (4 bits, unsigned)
  add \U$$2.picorv32.pcpi_mul.this_rs2 [3:0] (4 bits, unsigned)
  add \U$$2.picorv32.pcpi_mul.rdx [3:0] (4 bits, unsigned)
  add \U$$2.picorv32.pcpi_mul.rd [43:40] (4 bits, unsigned)
  add \U$$2.picorv32.pcpi_mul.this_rs2 [43:40] (4 bits, unsigned)
  add \U$$2.picorv32.pcpi_mul.rdx [43:40] (4 bits, unsigned)
  add \U$$2.picorv32.pcpi_mul.rd [15:12] (4 bits, unsigned)
  add \U$$2.picorv32.pcpi_mul.this_rs2 [15:12] (4 bits, unsigned)
  add \U$$2.picorv32.pcpi_mul.rdx [15:12] (4 bits, unsigned)
  add \U$$2.picorv32.pcpi_mul.rd [39:36] (4 bits, unsigned)
  add \U$$2.picorv32.pcpi_mul.this_rs2 [39:36] (4 bits, unsigned)
  add \U$$2.picorv32.pcpi_mul.rdx [39:36] (4 bits, unsigned)
  add \U$$2.picorv32.pcpi_mul.rd [63:60] (4 bits, unsigned)
  add \U$$2.picorv32.pcpi_mul.this_rs2 [63:60] (4 bits, unsigned)
  add \U$$2.picorv32.pcpi_mul.rdx [63:60] (4 bits, unsigned)
  add \U$$2.picorv32.pcpi_mul.rd [11:8] (4 bits, unsigned)
  add \U$$2.picorv32.pcpi_mul.this_rs2 [11:8] (4 bits, unsigned)
  add \U$$2.picorv32.pcpi_mul.rdx [11:8] (4 bits, unsigned)
  add \U$$2.picorv32.pcpi_mul.rd [27:24] (4 bits, unsigned)
  add \U$$2.picorv32.pcpi_mul.this_rs2 [27:24] (4 bits, unsigned)
  add \U$$2.picorv32.pcpi_mul.rdx [27:24] (4 bits, unsigned)
  add \U$$2.picorv32.pcpi_mul.rd [23:20] (4 bits, unsigned)
  add \U$$2.picorv32.pcpi_mul.this_rs2 [23:20] (4 bits, unsigned)
  add \U$$2.picorv32.pcpi_mul.rdx [23:20] (4 bits, unsigned)
  add \U$$2.picorv32.pcpi_mul.rd [55:52] (4 bits, unsigned)
  add \U$$2.picorv32.pcpi_mul.this_rs2 [55:52] (4 bits, unsigned)
  add \U$$2.picorv32.pcpi_mul.rdx [55:52] (4 bits, unsigned)
  add \U$$2.picorv32.pcpi_mul.rd [51:48] (4 bits, unsigned)
  add \U$$2.picorv32.pcpi_mul.this_rs2 [51:48] (4 bits, unsigned)
  add \U$$2.picorv32.pcpi_mul.rdx [51:48] (4 bits, unsigned)
  add \U$$2.picorv32.pcpi_mul.rd [47:44] (4 bits, unsigned)
  add \U$$2.picorv32.pcpi_mul.this_rs2 [47:44] (4 bits, unsigned)
  add \U$$2.picorv32.pcpi_mul.rdx [47:44] (4 bits, unsigned)
  add \U$$2.picorv32.pcpi_mul.rd [35:32] (4 bits, unsigned)
  add \U$$2.picorv32.pcpi_mul.this_rs2 [35:32] (4 bits, unsigned)
  add \U$$2.picorv32.pcpi_mul.rdx [35:32] (4 bits, unsigned)
Using template $paramod\_80_ice40_alu\A_SIGNED=0\B_SIGNED=0\A_WIDTH=11\B_WIDTH=30\Y_WIDTH=30 for cells of type $alu.
  add \U$$2.picorv32.pcpi_mul.rd [19:16] (4 bits, unsigned)
  add \U$$2.picorv32.pcpi_mul.this_rs2 [19:16] (4 bits, unsigned)
  add \U$$2.picorv32.pcpi_mul.rdx [19:16] (4 bits, unsigned)
Using extmapper simplemap for cells of type $reduce_and.
Using extmapper simplemap for cells of type $or.
Using template $paramod\_80_ice40_alu\A_SIGNED=0\B_SIGNED=0\A_WIDTH=12\B_WIDTH=12\Y_WIDTH=13 for cells of type $alu.
Using template $paramod\_90_pmux\WIDTH=24\S_WIDTH=2 for cells of type $pmux.
Using template $paramod$constmap:66d421c313e4e958be776b99540ac2de3b59fdbc$paramod$9b74a473ccd678a23e1df4cc12019cbbece20051\_90_shift_ops_shr_shl_sshl_sshr for cells of type $shl.
Using template $paramod\_90_pmux\WIDTH=4\S_WIDTH=2 for cells of type $pmux.
Using template $paramod\_90_pmux\WIDTH=8\S_WIDTH=3 for cells of type $pmux.
Using template $paramod\_90_pmux\WIDTH=32\S_WIDTH=2 for cells of type $pmux.
Using extmapper simplemap for cells of type $xor.
Using template $paramod\_90_pmux\WIDTH=6\S_WIDTH=2 for cells of type $pmux.
Using template $paramod\_90_pmux\WIDTH=6\S_WIDTH=4 for cells of type $pmux.
Using template $paramod\_90_pmux\WIDTH=6\S_WIDTH=3 for cells of type $pmux.
Using template $paramod\_90_pmux\WIDTH=4\S_WIDTH=3 for cells of type $pmux.
Using template $paramod\_90_pmux\WIDTH=3\S_WIDTH=2 for cells of type $pmux.
Using template $paramod\_90_pmux\WIDTH=3\S_WIDTH=4 for cells of type $pmux.
Using template $paramod\_90_pmux\WIDTH=3\S_WIDTH=3 for cells of type $pmux.
Using template $paramod\_90_pmux\WIDTH=5\S_WIDTH=2 for cells of type $pmux.
Using template $paramod\_90_pmux\WIDTH=5\S_WIDTH=3 for cells of type $pmux.
Using template $paramod\_90_pmux\WIDTH=1\S_WIDTH=2 for cells of type $pmux.
Using template $paramod\_90_pmux\WIDTH=1\S_WIDTH=3 for cells of type $pmux.
Using template $paramod\_90_pmux\WIDTH=2\S_WIDTH=4 for cells of type $pmux.
Using template $paramod\_80_ice40_alu\A_SIGNED=0\B_SIGNED=0\A_WIDTH=5\B_WIDTH=1\Y_WIDTH=5 for cells of type $alu.
Using template $paramod\_90_pmux\WIDTH=5\S_WIDTH=4 for cells of type $pmux.
Using template $paramod\_90_pmux\WIDTH=32\S_WIDTH=5 for cells of type $pmux.
Using template $paramod\_90_pmux\WIDTH=4\S_WIDTH=4 for cells of type $pmux.
Using template $paramod\_90_pmux\WIDTH=1\S_WIDTH=4 for cells of type $pmux.
Using template $paramod\_90_pmux\WIDTH=1\S_WIDTH=5 for cells of type $pmux.
Using template $paramod\_90_pmux\WIDTH=32\S_WIDTH=4 for cells of type $pmux.
Using template $paramod\_90_pmux\WIDTH=2\S_WIDTH=2 for cells of type $pmux.
Using template $paramod\_90_pmux\WIDTH=2\S_WIDTH=3 for cells of type $pmux.
Using template $paramod\_90_pmux\WIDTH=32\S_WIDTH=3 for cells of type $pmux.
Using extmapper simplemap for cells of type $logic_or.
Using extmapper simplemap for cells of type $logic_and.
Using template $paramod\_80_ice40_alu\A_SIGNED=1\B_SIGNED=1\A_WIDTH=32\B_WIDTH=32\Y_WIDTH=32 for cells of type $alu.
Using extmapper simplemap for cells of type $pos.
Using template $paramod\_90_fa\WIDTH=4 for cells of type $fa.
Using template $paramod\_80_ice40_alu\A_SIGNED=0\B_SIGNED=0\A_WIDTH=5\B_WIDTH=5\Y_WIDTH=5 for cells of type $alu.
Using template $paramod\_80_ice40_alu\A_SIGNED=0\B_SIGNED=0\A_WIDTH=4\B_WIDTH=4\Y_WIDTH=4 for cells of type $alu.
No more expansions possible.
<suppressed ~2664 debug messages>

3.31. Executing ICE40_OPT pass (performing simple optimizations).

3.31.1. Running ICE40 specific optimizations.

3.31.2. Executing OPT_EXPR pass (perform const folding).
Optimizing module top.
<suppressed ~1432 debug messages>

3.31.3. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\top'.
<suppressed ~1917 debug messages>
Removed a total of 639 cells.

3.31.4. Executing OPT_RMDFF pass (remove dff with constant values).
Removing $auto$simplemap.cc:420:simplemap_dff$7346 ($_DFF_P_) from module top.
Replaced 1 DFF cells.

3.31.5. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \top..
Removed 565 unused cells and 2486 unused wires.
<suppressed ~566 debug messages>

3.31.6. Rerunning OPT passes. (Removed registers in this run.)

3.31.7. Running ICE40 specific optimizations.
Optimized away SB_CARRY cell top.$auto$alumacc.cc:474:replace_alu$4901.slice[0].carry: CO=1'1
Optimized away SB_CARRY cell top.$auto$alumacc.cc:474:replace_alu$4918.slice[0].carry: CO=1'0
Optimized away SB_CARRY cell top.$auto$alumacc.cc:474:replace_alu$4921.slice[0].carry: CO=1'0
Optimized away SB_CARRY cell top.$auto$alumacc.cc:474:replace_alu$4927.slice[0].carry: CO=1'0
Optimized away SB_CARRY cell top.$auto$alumacc.cc:474:replace_alu$4936.slice[0].carry: CO=1'0
Optimized away SB_CARRY cell top.$auto$alumacc.cc:474:replace_alu$4936.slice[3].carry: CO=$auto$alumacc.cc:474:replace_alu$4936.C [3]
Optimized away SB_CARRY cell top.$auto$alumacc.cc:474:replace_alu$4939.slice[0].carry: CO=1'0
Optimized away SB_CARRY cell top.$auto$alumacc.cc:474:replace_alu$4939.slice[3].carry: CO=$auto$alumacc.cc:474:replace_alu$4939.C [3]
Optimized away SB_CARRY cell top.$auto$alumacc.cc:474:replace_alu$4959.slice[0].carry: CO=\U$$2.picorv32.reg_sh [0]
Optimized away SB_CARRY cell top.$auto$alumacc.cc:474:replace_alu$4962.slice[0].carry: CO=\cd_sync.timer [0]
Optimized away SB_CARRY cell top.$auto$alumacc.cc:474:replace_alu$4965.slice[0].carry: CO=\U$$2.picorv32.pcpi_mul.mul_counter [0]
Optimized away SB_CARRY cell top.$auto$maccmap.cc:240:synth$6504.slice[0].carry: CO=1'0
Optimized away SB_CARRY cell top.$auto$maccmap.cc:240:synth$6563.slice[0].carry: CO=1'0
Optimized away SB_CARRY cell top.$auto$maccmap.cc:240:synth$6572.slice[0].carry: CO=1'0
Optimized away SB_CARRY cell top.$auto$maccmap.cc:240:synth$6579.slice[0].carry: CO=1'0
Optimized away SB_CARRY cell top.$auto$maccmap.cc:240:synth$6606.slice[0].carry: CO=1'0
Optimized away SB_CARRY cell top.$auto$maccmap.cc:240:synth$6613.slice[0].carry: CO=1'0
Optimized away SB_CARRY cell top.$auto$maccmap.cc:240:synth$6620.slice[0].carry: CO=1'0
Optimized away SB_CARRY cell top.$auto$maccmap.cc:240:synth$6627.slice[0].carry: CO=1'0
Optimized away SB_CARRY cell top.$auto$maccmap.cc:240:synth$6634.slice[0].carry: CO=1'0
Optimized away SB_CARRY cell top.$auto$maccmap.cc:240:synth$6641.slice[0].carry: CO=1'0
Optimized away SB_CARRY cell top.$auto$maccmap.cc:240:synth$6648.slice[0].carry: CO=1'0
Optimized away SB_CARRY cell top.$auto$maccmap.cc:240:synth$6655.slice[0].carry: CO=1'0
Optimized away SB_CARRY cell top.$auto$maccmap.cc:240:synth$6662.slice[0].carry: CO=1'0
Optimized away SB_CARRY cell top.$auto$maccmap.cc:240:synth$6670.slice[0].carry: CO=1'0
Optimized away SB_CARRY cell top.$auto$maccmap.cc:240:synth$6677.slice[0].carry: CO=1'0
Optimized away SB_CARRY cell top.$auto$maccmap.cc:240:synth$6692.slice[0].carry: CO=1'0
Mapping SB_LUT4 cell top.$auto$alumacc.cc:474:replace_alu$4918.slice[0].adder back to logic.
Mapping SB_LUT4 cell top.$auto$alumacc.cc:474:replace_alu$4918.slice[1].adder back to logic.
Mapping SB_LUT4 cell top.$auto$alumacc.cc:474:replace_alu$4921.slice[1].adder back to logic.
Mapping SB_LUT4 cell top.$auto$alumacc.cc:474:replace_alu$4927.slice[1].adder back to logic.
Mapping SB_LUT4 cell top.$auto$alumacc.cc:474:replace_alu$4936.slice[1].adder back to logic.
Mapping SB_LUT4 cell top.$auto$alumacc.cc:474:replace_alu$4936.slice[4].adder back to logic.
Mapping SB_LUT4 cell top.$auto$alumacc.cc:474:replace_alu$4939.slice[1].adder back to logic.
Mapping SB_LUT4 cell top.$auto$alumacc.cc:474:replace_alu$4939.slice[4].adder back to logic.
Mapping SB_LUT4 cell top.$auto$alumacc.cc:474:replace_alu$4959.slice[1].adder back to logic.
Mapping SB_LUT4 cell top.$auto$alumacc.cc:474:replace_alu$4962.slice[1].adder back to logic.
Mapping SB_LUT4 cell top.$auto$alumacc.cc:474:replace_alu$4965.slice[1].adder back to logic.
Mapping SB_LUT4 cell top.$auto$maccmap.cc:240:synth$6504.slice[1].adder back to logic.
Mapping SB_LUT4 cell top.$auto$maccmap.cc:240:synth$6563.slice[1].adder back to logic.
Mapping SB_LUT4 cell top.$auto$maccmap.cc:240:synth$6572.slice[1].adder back to logic.
Mapping SB_LUT4 cell top.$auto$maccmap.cc:240:synth$6579.slice[1].adder back to logic.
Mapping SB_LUT4 cell top.$auto$maccmap.cc:240:synth$6606.slice[1].adder back to logic.
Mapping SB_LUT4 cell top.$auto$maccmap.cc:240:synth$6613.slice[1].adder back to logic.
Mapping SB_LUT4 cell top.$auto$maccmap.cc:240:synth$6620.slice[1].adder back to logic.
Mapping SB_LUT4 cell top.$auto$maccmap.cc:240:synth$6627.slice[1].adder back to logic.
Mapping SB_LUT4 cell top.$auto$maccmap.cc:240:synth$6634.slice[1].adder back to logic.
Mapping SB_LUT4 cell top.$auto$maccmap.cc:240:synth$6641.slice[1].adder back to logic.
Mapping SB_LUT4 cell top.$auto$maccmap.cc:240:synth$6648.slice[1].adder back to logic.
Mapping SB_LUT4 cell top.$auto$maccmap.cc:240:synth$6655.slice[1].adder back to logic.
Mapping SB_LUT4 cell top.$auto$maccmap.cc:240:synth$6662.slice[1].adder back to logic.
Mapping SB_LUT4 cell top.$auto$maccmap.cc:240:synth$6670.slice[1].adder back to logic.
Mapping SB_LUT4 cell top.$auto$maccmap.cc:240:synth$6677.slice[1].adder back to logic.
Mapping SB_LUT4 cell top.$auto$maccmap.cc:240:synth$6692.slice[1].adder back to logic.

3.31.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module top.
<suppressed ~336 debug messages>

3.31.9. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\top'.
<suppressed ~69 debug messages>
Removed a total of 23 cells.

3.31.10. Executing OPT_RMDFF pass (remove dff with constant values).

3.31.11. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \top..
Removed 21 unused cells and 80 unused wires.
<suppressed ~22 debug messages>

3.31.12. Rerunning OPT passes. (Removed registers in this run.)

3.31.13. Running ICE40 specific optimizations.
Optimized away SB_CARRY cell top.$auto$alumacc.cc:474:replace_alu$4901.slice[1].carry: CO=1'1
Optimized away SB_CARRY cell top.$auto$alumacc.cc:474:replace_alu$4924.slice[0].carry: CO=1'0
Optimized away SB_CARRY cell top.$auto$alumacc.cc:474:replace_alu$4936.slice[1].carry: CO=1'0
Optimized away SB_CARRY cell top.$auto$alumacc.cc:474:replace_alu$4939.slice[1].carry: CO=1'0
Mapping SB_LUT4 cell top.$auto$alumacc.cc:474:replace_alu$4924.slice[1].adder back to logic.
Mapping SB_LUT4 cell top.$auto$alumacc.cc:474:replace_alu$4936.slice[2].adder back to logic.
Mapping SB_LUT4 cell top.$auto$alumacc.cc:474:replace_alu$4939.slice[2].adder back to logic.

3.31.14. Executing OPT_EXPR pass (perform const folding).
Optimizing module top.
<suppressed ~37 debug messages>

3.31.15. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\top'.
<suppressed ~9 debug messages>
Removed a total of 3 cells.

3.31.16. Executing OPT_RMDFF pass (remove dff with constant values).

3.31.17. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \top..
Removed 3 unused cells and 10 unused wires.
<suppressed ~4 debug messages>

3.31.18. Rerunning OPT passes. (Removed registers in this run.)

3.31.19. Running ICE40 specific optimizations.
Optimized away SB_CARRY cell top.$auto$alumacc.cc:474:replace_alu$4901.slice[2].carry: CO=1'1
Optimized away SB_CARRY cell top.$auto$alumacc.cc:474:replace_alu$4936.slice[2].carry: CO=1'0
Optimized away SB_CARRY cell top.$auto$alumacc.cc:474:replace_alu$4939.slice[2].carry: CO=1'0
Mapping SB_LUT4 cell top.$auto$alumacc.cc:474:replace_alu$4936.slice[3].adder back to logic.
Mapping SB_LUT4 cell top.$auto$alumacc.cc:474:replace_alu$4939.slice[3].adder back to logic.

3.31.20. Executing OPT_EXPR pass (perform const folding).
Optimizing module top.
<suppressed ~52 debug messages>

3.31.21. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\top'.
Removed a total of 0 cells.

3.31.22. Executing OPT_RMDFF pass (remove dff with constant values).

3.31.23. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \top..
Removed 0 unused cells and 21 unused wires.
<suppressed ~1 debug messages>

3.31.24. Rerunning OPT passes. (Removed registers in this run.)

3.31.25. Running ICE40 specific optimizations.
Optimized away SB_CARRY cell top.$auto$alumacc.cc:474:replace_alu$4901.slice[3].carry: CO=$auto$alumacc.cc:474:replace_alu$4901.BB [3]

3.31.26. Executing OPT_EXPR pass (perform const folding).
Optimizing module top.

3.31.27. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\top'.
Removed a total of 0 cells.

3.31.28. Executing OPT_RMDFF pass (remove dff with constant values).

3.31.29. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \top..

3.31.30. Rerunning OPT passes. (Removed registers in this run.)

3.31.31. Running ICE40 specific optimizations.

3.31.32. Executing OPT_EXPR pass (perform const folding).
Optimizing module top.

3.31.33. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\top'.
Removed a total of 0 cells.

3.31.34. Executing OPT_RMDFF pass (remove dff with constant values).

3.31.35. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \top..

3.31.36. Finished OPT passes. (There is nothing left to do.)

3.32. Executing DFFSR2DFF pass (mapping DFFSR cells to simpler FFs).

3.33. Executing DFF2DFFE pass (transform $dff to $dffe where applicable).
Selected cell types for direct conversion:
  $_DFF_PP1_ -> $__DFFE_PP1
  $_DFF_PP0_ -> $__DFFE_PP0
  $_DFF_PN1_ -> $__DFFE_PN1
  $_DFF_PN0_ -> $__DFFE_PN0
  $_DFF_NP1_ -> $__DFFE_NP1
  $_DFF_NP0_ -> $__DFFE_NP0
  $_DFF_NN1_ -> $__DFFE_NN1
  $_DFF_NN0_ -> $__DFFE_NN0
  $_DFF_N_ -> $_DFFE_NP_
  $_DFF_P_ -> $_DFFE_PP_
Transforming FF to FF+Enable cells in module top:
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$10283 to $_DFFE_PP_ for $auto$rtlil.cc:1906:Mux$5102 -> $auto$memory_bram.cc:960:replace_cell$5100.
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$10924 to $_DFFE_PP_ for $techmap\U$$2.picorv32.pcpi_mul.$0\mul_counter[6:0] [0] -> \U$$2.picorv32.pcpi_mul.mul_counter [0].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$10925 to $_DFFE_PP_ for $techmap\U$$2.picorv32.pcpi_mul.$0\mul_counter[6:0] [1] -> \U$$2.picorv32.pcpi_mul.mul_counter [1].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$10926 to $_DFFE_PP_ for $techmap\U$$2.picorv32.pcpi_mul.$0\mul_counter[6:0] [2] -> \U$$2.picorv32.pcpi_mul.mul_counter [2].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$10927 to $_DFFE_PP_ for $techmap\U$$2.picorv32.pcpi_mul.$0\mul_counter[6:0] [3] -> \U$$2.picorv32.pcpi_mul.mul_counter [3].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$10928 to $_DFFE_PP_ for $techmap\U$$2.picorv32.pcpi_mul.$0\mul_counter[6:0] [4] -> \U$$2.picorv32.pcpi_mul.mul_counter [4].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$10929 to $_DFFE_PP_ for $techmap\U$$2.picorv32.pcpi_mul.$0\mul_counter[6:0] [5] -> \U$$2.picorv32.pcpi_mul.mul_counter [5].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$10930 to $_DFFE_PP_ for $techmap\U$$2.picorv32.pcpi_mul.$0\mul_counter[6:0] [6] -> \U$$2.picorv32.pcpi_mul.mul_counter [6].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$10931 to $_DFFE_PP_ for $techmap\U$$2.picorv32.pcpi_mul.$0\rdx[63:0] [0] -> \U$$2.picorv32.pcpi_mul.rdx [0].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$10932 to $_DFFE_PP_ for $techmap\U$$2.picorv32.pcpi_mul.$0\rdx[63:0] [1] -> \U$$2.picorv32.pcpi_mul.rdx [1].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$10933 to $_DFFE_PP_ for $techmap\U$$2.picorv32.pcpi_mul.$0\rdx[63:0] [2] -> \U$$2.picorv32.pcpi_mul.rdx [2].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$10934 to $_DFFE_PP_ for $techmap\U$$2.picorv32.pcpi_mul.$0\rdx[63:0] [3] -> \U$$2.picorv32.pcpi_mul.rdx [3].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$10935 to $_DFFE_PP_ for $techmap\U$$2.picorv32.pcpi_mul.$0\rdx[63:0] [4] -> \U$$2.picorv32.pcpi_mul.rdx [4].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$10936 to $_DFFE_PP_ for $techmap\U$$2.picorv32.pcpi_mul.$0\rdx[63:0] [5] -> \U$$2.picorv32.pcpi_mul.rdx [5].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$10937 to $_DFFE_PP_ for $techmap\U$$2.picorv32.pcpi_mul.$0\rdx[63:0] [6] -> \U$$2.picorv32.pcpi_mul.rdx [6].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$10938 to $_DFFE_PP_ for $techmap\U$$2.picorv32.pcpi_mul.$0\rdx[63:0] [7] -> \U$$2.picorv32.pcpi_mul.rdx [7].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$10939 to $_DFFE_PP_ for $techmap\U$$2.picorv32.pcpi_mul.$0\rdx[63:0] [8] -> \U$$2.picorv32.pcpi_mul.rdx [8].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$10940 to $_DFFE_PP_ for $techmap\U$$2.picorv32.pcpi_mul.$0\rdx[63:0] [9] -> \U$$2.picorv32.pcpi_mul.rdx [9].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$10941 to $_DFFE_PP_ for $techmap\U$$2.picorv32.pcpi_mul.$0\rdx[63:0] [10] -> \U$$2.picorv32.pcpi_mul.rdx [10].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$10942 to $_DFFE_PP_ for $techmap\U$$2.picorv32.pcpi_mul.$0\rdx[63:0] [11] -> \U$$2.picorv32.pcpi_mul.rdx [11].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$10943 to $_DFFE_PP_ for $techmap\U$$2.picorv32.pcpi_mul.$0\rdx[63:0] [12] -> \U$$2.picorv32.pcpi_mul.rdx [12].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$10944 to $_DFFE_PP_ for $techmap\U$$2.picorv32.pcpi_mul.$0\rdx[63:0] [13] -> \U$$2.picorv32.pcpi_mul.rdx [13].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$10945 to $_DFFE_PP_ for $techmap\U$$2.picorv32.pcpi_mul.$0\rdx[63:0] [14] -> \U$$2.picorv32.pcpi_mul.rdx [14].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$10946 to $_DFFE_PP_ for $techmap\U$$2.picorv32.pcpi_mul.$0\rdx[63:0] [15] -> \U$$2.picorv32.pcpi_mul.rdx [15].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$10947 to $_DFFE_PP_ for $techmap\U$$2.picorv32.pcpi_mul.$0\rdx[63:0] [16] -> \U$$2.picorv32.pcpi_mul.rdx [16].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$10948 to $_DFFE_PP_ for $techmap\U$$2.picorv32.pcpi_mul.$0\rdx[63:0] [17] -> \U$$2.picorv32.pcpi_mul.rdx [17].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$10949 to $_DFFE_PP_ for $techmap\U$$2.picorv32.pcpi_mul.$0\rdx[63:0] [18] -> \U$$2.picorv32.pcpi_mul.rdx [18].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$10950 to $_DFFE_PP_ for $techmap\U$$2.picorv32.pcpi_mul.$0\rdx[63:0] [19] -> \U$$2.picorv32.pcpi_mul.rdx [19].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$10951 to $_DFFE_PP_ for $techmap\U$$2.picorv32.pcpi_mul.$0\rdx[63:0] [20] -> \U$$2.picorv32.pcpi_mul.rdx [20].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$10952 to $_DFFE_PP_ for $techmap\U$$2.picorv32.pcpi_mul.$0\rdx[63:0] [21] -> \U$$2.picorv32.pcpi_mul.rdx [21].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$10953 to $_DFFE_PP_ for $techmap\U$$2.picorv32.pcpi_mul.$0\rdx[63:0] [22] -> \U$$2.picorv32.pcpi_mul.rdx [22].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$10954 to $_DFFE_PP_ for $techmap\U$$2.picorv32.pcpi_mul.$0\rdx[63:0] [23] -> \U$$2.picorv32.pcpi_mul.rdx [23].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$10955 to $_DFFE_PP_ for $techmap\U$$2.picorv32.pcpi_mul.$0\rdx[63:0] [24] -> \U$$2.picorv32.pcpi_mul.rdx [24].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$10956 to $_DFFE_PP_ for $techmap\U$$2.picorv32.pcpi_mul.$0\rdx[63:0] [25] -> \U$$2.picorv32.pcpi_mul.rdx [25].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$10957 to $_DFFE_PP_ for $techmap\U$$2.picorv32.pcpi_mul.$0\rdx[63:0] [26] -> \U$$2.picorv32.pcpi_mul.rdx [26].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$10958 to $_DFFE_PP_ for $techmap\U$$2.picorv32.pcpi_mul.$0\rdx[63:0] [27] -> \U$$2.picorv32.pcpi_mul.rdx [27].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$10959 to $_DFFE_PP_ for $techmap\U$$2.picorv32.pcpi_mul.$0\rdx[63:0] [28] -> \U$$2.picorv32.pcpi_mul.rdx [28].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$10960 to $_DFFE_PP_ for $techmap\U$$2.picorv32.pcpi_mul.$0\rdx[63:0] [29] -> \U$$2.picorv32.pcpi_mul.rdx [29].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$10961 to $_DFFE_PP_ for $techmap\U$$2.picorv32.pcpi_mul.$0\rdx[63:0] [30] -> \U$$2.picorv32.pcpi_mul.rdx [30].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$10962 to $_DFFE_PP_ for $techmap\U$$2.picorv32.pcpi_mul.$0\rdx[63:0] [31] -> \U$$2.picorv32.pcpi_mul.rdx [31].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$10963 to $_DFFE_PP_ for $techmap\U$$2.picorv32.pcpi_mul.$0\rdx[63:0] [32] -> \U$$2.picorv32.pcpi_mul.rdx [32].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$10964 to $_DFFE_PP_ for $techmap\U$$2.picorv32.pcpi_mul.$0\rdx[63:0] [33] -> \U$$2.picorv32.pcpi_mul.rdx [33].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$10965 to $_DFFE_PP_ for $techmap\U$$2.picorv32.pcpi_mul.$0\rdx[63:0] [34] -> \U$$2.picorv32.pcpi_mul.rdx [34].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$10966 to $_DFFE_PP_ for $techmap\U$$2.picorv32.pcpi_mul.$0\rdx[63:0] [35] -> \U$$2.picorv32.pcpi_mul.rdx [35].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$10967 to $_DFFE_PP_ for $techmap\U$$2.picorv32.pcpi_mul.$0\rdx[63:0] [36] -> \U$$2.picorv32.pcpi_mul.rdx [36].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$10968 to $_DFFE_PP_ for $techmap\U$$2.picorv32.pcpi_mul.$0\rdx[63:0] [37] -> \U$$2.picorv32.pcpi_mul.rdx [37].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$10969 to $_DFFE_PP_ for $techmap\U$$2.picorv32.pcpi_mul.$0\rdx[63:0] [38] -> \U$$2.picorv32.pcpi_mul.rdx [38].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$10970 to $_DFFE_PP_ for $techmap\U$$2.picorv32.pcpi_mul.$0\rdx[63:0] [39] -> \U$$2.picorv32.pcpi_mul.rdx [39].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$10971 to $_DFFE_PP_ for $techmap\U$$2.picorv32.pcpi_mul.$0\rdx[63:0] [40] -> \U$$2.picorv32.pcpi_mul.rdx [40].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$10972 to $_DFFE_PP_ for $techmap\U$$2.picorv32.pcpi_mul.$0\rdx[63:0] [41] -> \U$$2.picorv32.pcpi_mul.rdx [41].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$10973 to $_DFFE_PP_ for $techmap\U$$2.picorv32.pcpi_mul.$0\rdx[63:0] [42] -> \U$$2.picorv32.pcpi_mul.rdx [42].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$10974 to $_DFFE_PP_ for $techmap\U$$2.picorv32.pcpi_mul.$0\rdx[63:0] [43] -> \U$$2.picorv32.pcpi_mul.rdx [43].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$10975 to $_DFFE_PP_ for $techmap\U$$2.picorv32.pcpi_mul.$0\rdx[63:0] [44] -> \U$$2.picorv32.pcpi_mul.rdx [44].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$10976 to $_DFFE_PP_ for $techmap\U$$2.picorv32.pcpi_mul.$0\rdx[63:0] [45] -> \U$$2.picorv32.pcpi_mul.rdx [45].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$10977 to $_DFFE_PP_ for $techmap\U$$2.picorv32.pcpi_mul.$0\rdx[63:0] [46] -> \U$$2.picorv32.pcpi_mul.rdx [46].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$10978 to $_DFFE_PP_ for $techmap\U$$2.picorv32.pcpi_mul.$0\rdx[63:0] [47] -> \U$$2.picorv32.pcpi_mul.rdx [47].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$10979 to $_DFFE_PP_ for $techmap\U$$2.picorv32.pcpi_mul.$0\rdx[63:0] [48] -> \U$$2.picorv32.pcpi_mul.rdx [48].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$10980 to $_DFFE_PP_ for $techmap\U$$2.picorv32.pcpi_mul.$0\rdx[63:0] [49] -> \U$$2.picorv32.pcpi_mul.rdx [49].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$10981 to $_DFFE_PP_ for $techmap\U$$2.picorv32.pcpi_mul.$0\rdx[63:0] [50] -> \U$$2.picorv32.pcpi_mul.rdx [50].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$10982 to $_DFFE_PP_ for $techmap\U$$2.picorv32.pcpi_mul.$0\rdx[63:0] [51] -> \U$$2.picorv32.pcpi_mul.rdx [51].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$10983 to $_DFFE_PP_ for $techmap\U$$2.picorv32.pcpi_mul.$0\rdx[63:0] [52] -> \U$$2.picorv32.pcpi_mul.rdx [52].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$10984 to $_DFFE_PP_ for $techmap\U$$2.picorv32.pcpi_mul.$0\rdx[63:0] [53] -> \U$$2.picorv32.pcpi_mul.rdx [53].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$10985 to $_DFFE_PP_ for $techmap\U$$2.picorv32.pcpi_mul.$0\rdx[63:0] [54] -> \U$$2.picorv32.pcpi_mul.rdx [54].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$10986 to $_DFFE_PP_ for $techmap\U$$2.picorv32.pcpi_mul.$0\rdx[63:0] [55] -> \U$$2.picorv32.pcpi_mul.rdx [55].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$10987 to $_DFFE_PP_ for $techmap\U$$2.picorv32.pcpi_mul.$0\rdx[63:0] [56] -> \U$$2.picorv32.pcpi_mul.rdx [56].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$10988 to $_DFFE_PP_ for $techmap\U$$2.picorv32.pcpi_mul.$0\rdx[63:0] [57] -> \U$$2.picorv32.pcpi_mul.rdx [57].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$10989 to $_DFFE_PP_ for $techmap\U$$2.picorv32.pcpi_mul.$0\rdx[63:0] [58] -> \U$$2.picorv32.pcpi_mul.rdx [58].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$10990 to $_DFFE_PP_ for $techmap\U$$2.picorv32.pcpi_mul.$0\rdx[63:0] [59] -> \U$$2.picorv32.pcpi_mul.rdx [59].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$10991 to $_DFFE_PP_ for $techmap\U$$2.picorv32.pcpi_mul.$0\rdx[63:0] [60] -> \U$$2.picorv32.pcpi_mul.rdx [60].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$10992 to $_DFFE_PP_ for $techmap\U$$2.picorv32.pcpi_mul.$0\rdx[63:0] [61] -> \U$$2.picorv32.pcpi_mul.rdx [61].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$10993 to $_DFFE_PP_ for $techmap\U$$2.picorv32.pcpi_mul.$0\rdx[63:0] [62] -> \U$$2.picorv32.pcpi_mul.rdx [62].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$10994 to $_DFFE_PP_ for $techmap\U$$2.picorv32.pcpi_mul.$0\rdx[63:0] [63] -> \U$$2.picorv32.pcpi_mul.rdx [63].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$10995 to $_DFFE_PP_ for $techmap\U$$2.picorv32.pcpi_mul.$0\rd[63:0] [0] -> \U$$2.picorv32.pcpi_mul.rd [0].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$10996 to $_DFFE_PP_ for $techmap\U$$2.picorv32.pcpi_mul.$0\rd[63:0] [1] -> \U$$2.picorv32.pcpi_mul.rd [1].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$10997 to $_DFFE_PP_ for $techmap\U$$2.picorv32.pcpi_mul.$0\rd[63:0] [2] -> \U$$2.picorv32.pcpi_mul.rd [2].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$10998 to $_DFFE_PP_ for $techmap\U$$2.picorv32.pcpi_mul.$0\rd[63:0] [3] -> \U$$2.picorv32.pcpi_mul.rd [3].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$10999 to $_DFFE_PP_ for $techmap\U$$2.picorv32.pcpi_mul.$0\rd[63:0] [4] -> \U$$2.picorv32.pcpi_mul.rd [4].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11000 to $_DFFE_PP_ for $techmap\U$$2.picorv32.pcpi_mul.$0\rd[63:0] [5] -> \U$$2.picorv32.pcpi_mul.rd [5].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11001 to $_DFFE_PP_ for $techmap\U$$2.picorv32.pcpi_mul.$0\rd[63:0] [6] -> \U$$2.picorv32.pcpi_mul.rd [6].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11002 to $_DFFE_PP_ for $techmap\U$$2.picorv32.pcpi_mul.$0\rd[63:0] [7] -> \U$$2.picorv32.pcpi_mul.rd [7].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11003 to $_DFFE_PP_ for $techmap\U$$2.picorv32.pcpi_mul.$0\rd[63:0] [8] -> \U$$2.picorv32.pcpi_mul.rd [8].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11004 to $_DFFE_PP_ for $techmap\U$$2.picorv32.pcpi_mul.$0\rd[63:0] [9] -> \U$$2.picorv32.pcpi_mul.rd [9].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11005 to $_DFFE_PP_ for $techmap\U$$2.picorv32.pcpi_mul.$0\rd[63:0] [10] -> \U$$2.picorv32.pcpi_mul.rd [10].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11006 to $_DFFE_PP_ for $techmap\U$$2.picorv32.pcpi_mul.$0\rd[63:0] [11] -> \U$$2.picorv32.pcpi_mul.rd [11].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11007 to $_DFFE_PP_ for $techmap\U$$2.picorv32.pcpi_mul.$0\rd[63:0] [12] -> \U$$2.picorv32.pcpi_mul.rd [12].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11008 to $_DFFE_PP_ for $techmap\U$$2.picorv32.pcpi_mul.$0\rd[63:0] [13] -> \U$$2.picorv32.pcpi_mul.rd [13].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11009 to $_DFFE_PP_ for $techmap\U$$2.picorv32.pcpi_mul.$0\rd[63:0] [14] -> \U$$2.picorv32.pcpi_mul.rd [14].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11010 to $_DFFE_PP_ for $techmap\U$$2.picorv32.pcpi_mul.$0\rd[63:0] [15] -> \U$$2.picorv32.pcpi_mul.rd [15].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11011 to $_DFFE_PP_ for $techmap\U$$2.picorv32.pcpi_mul.$0\rd[63:0] [16] -> \U$$2.picorv32.pcpi_mul.rd [16].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11012 to $_DFFE_PP_ for $techmap\U$$2.picorv32.pcpi_mul.$0\rd[63:0] [17] -> \U$$2.picorv32.pcpi_mul.rd [17].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11013 to $_DFFE_PP_ for $techmap\U$$2.picorv32.pcpi_mul.$0\rd[63:0] [18] -> \U$$2.picorv32.pcpi_mul.rd [18].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11014 to $_DFFE_PP_ for $techmap\U$$2.picorv32.pcpi_mul.$0\rd[63:0] [19] -> \U$$2.picorv32.pcpi_mul.rd [19].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11015 to $_DFFE_PP_ for $techmap\U$$2.picorv32.pcpi_mul.$0\rd[63:0] [20] -> \U$$2.picorv32.pcpi_mul.rd [20].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11016 to $_DFFE_PP_ for $techmap\U$$2.picorv32.pcpi_mul.$0\rd[63:0] [21] -> \U$$2.picorv32.pcpi_mul.rd [21].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11017 to $_DFFE_PP_ for $techmap\U$$2.picorv32.pcpi_mul.$0\rd[63:0] [22] -> \U$$2.picorv32.pcpi_mul.rd [22].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11018 to $_DFFE_PP_ for $techmap\U$$2.picorv32.pcpi_mul.$0\rd[63:0] [23] -> \U$$2.picorv32.pcpi_mul.rd [23].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11019 to $_DFFE_PP_ for $techmap\U$$2.picorv32.pcpi_mul.$0\rd[63:0] [24] -> \U$$2.picorv32.pcpi_mul.rd [24].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11020 to $_DFFE_PP_ for $techmap\U$$2.picorv32.pcpi_mul.$0\rd[63:0] [25] -> \U$$2.picorv32.pcpi_mul.rd [25].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11021 to $_DFFE_PP_ for $techmap\U$$2.picorv32.pcpi_mul.$0\rd[63:0] [26] -> \U$$2.picorv32.pcpi_mul.rd [26].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11022 to $_DFFE_PP_ for $techmap\U$$2.picorv32.pcpi_mul.$0\rd[63:0] [27] -> \U$$2.picorv32.pcpi_mul.rd [27].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11023 to $_DFFE_PP_ for $techmap\U$$2.picorv32.pcpi_mul.$0\rd[63:0] [28] -> \U$$2.picorv32.pcpi_mul.rd [28].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11024 to $_DFFE_PP_ for $techmap\U$$2.picorv32.pcpi_mul.$0\rd[63:0] [29] -> \U$$2.picorv32.pcpi_mul.rd [29].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11025 to $_DFFE_PP_ for $techmap\U$$2.picorv32.pcpi_mul.$0\rd[63:0] [30] -> \U$$2.picorv32.pcpi_mul.rd [30].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11026 to $_DFFE_PP_ for $techmap\U$$2.picorv32.pcpi_mul.$0\rd[63:0] [31] -> \U$$2.picorv32.pcpi_mul.rd [31].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11027 to $_DFFE_PP_ for $techmap\U$$2.picorv32.pcpi_mul.$0\rd[63:0] [32] -> \U$$2.picorv32.pcpi_mul.rd [32].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11028 to $_DFFE_PP_ for $techmap\U$$2.picorv32.pcpi_mul.$0\rd[63:0] [33] -> \U$$2.picorv32.pcpi_mul.rd [33].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11029 to $_DFFE_PP_ for $techmap\U$$2.picorv32.pcpi_mul.$0\rd[63:0] [34] -> \U$$2.picorv32.pcpi_mul.rd [34].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11030 to $_DFFE_PP_ for $techmap\U$$2.picorv32.pcpi_mul.$0\rd[63:0] [35] -> \U$$2.picorv32.pcpi_mul.rd [35].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11031 to $_DFFE_PP_ for $techmap\U$$2.picorv32.pcpi_mul.$0\rd[63:0] [36] -> \U$$2.picorv32.pcpi_mul.rd [36].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11032 to $_DFFE_PP_ for $techmap\U$$2.picorv32.pcpi_mul.$0\rd[63:0] [37] -> \U$$2.picorv32.pcpi_mul.rd [37].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11033 to $_DFFE_PP_ for $techmap\U$$2.picorv32.pcpi_mul.$0\rd[63:0] [38] -> \U$$2.picorv32.pcpi_mul.rd [38].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11034 to $_DFFE_PP_ for $techmap\U$$2.picorv32.pcpi_mul.$0\rd[63:0] [39] -> \U$$2.picorv32.pcpi_mul.rd [39].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11035 to $_DFFE_PP_ for $techmap\U$$2.picorv32.pcpi_mul.$0\rd[63:0] [40] -> \U$$2.picorv32.pcpi_mul.rd [40].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11036 to $_DFFE_PP_ for $techmap\U$$2.picorv32.pcpi_mul.$0\rd[63:0] [41] -> \U$$2.picorv32.pcpi_mul.rd [41].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11037 to $_DFFE_PP_ for $techmap\U$$2.picorv32.pcpi_mul.$0\rd[63:0] [42] -> \U$$2.picorv32.pcpi_mul.rd [42].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11038 to $_DFFE_PP_ for $techmap\U$$2.picorv32.pcpi_mul.$0\rd[63:0] [43] -> \U$$2.picorv32.pcpi_mul.rd [43].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11039 to $_DFFE_PP_ for $techmap\U$$2.picorv32.pcpi_mul.$0\rd[63:0] [44] -> \U$$2.picorv32.pcpi_mul.rd [44].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11040 to $_DFFE_PP_ for $techmap\U$$2.picorv32.pcpi_mul.$0\rd[63:0] [45] -> \U$$2.picorv32.pcpi_mul.rd [45].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11041 to $_DFFE_PP_ for $techmap\U$$2.picorv32.pcpi_mul.$0\rd[63:0] [46] -> \U$$2.picorv32.pcpi_mul.rd [46].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11042 to $_DFFE_PP_ for $techmap\U$$2.picorv32.pcpi_mul.$0\rd[63:0] [47] -> \U$$2.picorv32.pcpi_mul.rd [47].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11043 to $_DFFE_PP_ for $techmap\U$$2.picorv32.pcpi_mul.$0\rd[63:0] [48] -> \U$$2.picorv32.pcpi_mul.rd [48].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11044 to $_DFFE_PP_ for $techmap\U$$2.picorv32.pcpi_mul.$0\rd[63:0] [49] -> \U$$2.picorv32.pcpi_mul.rd [49].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11045 to $_DFFE_PP_ for $techmap\U$$2.picorv32.pcpi_mul.$0\rd[63:0] [50] -> \U$$2.picorv32.pcpi_mul.rd [50].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11046 to $_DFFE_PP_ for $techmap\U$$2.picorv32.pcpi_mul.$0\rd[63:0] [51] -> \U$$2.picorv32.pcpi_mul.rd [51].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11047 to $_DFFE_PP_ for $techmap\U$$2.picorv32.pcpi_mul.$0\rd[63:0] [52] -> \U$$2.picorv32.pcpi_mul.rd [52].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11048 to $_DFFE_PP_ for $techmap\U$$2.picorv32.pcpi_mul.$0\rd[63:0] [53] -> \U$$2.picorv32.pcpi_mul.rd [53].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11049 to $_DFFE_PP_ for $techmap\U$$2.picorv32.pcpi_mul.$0\rd[63:0] [54] -> \U$$2.picorv32.pcpi_mul.rd [54].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11050 to $_DFFE_PP_ for $techmap\U$$2.picorv32.pcpi_mul.$0\rd[63:0] [55] -> \U$$2.picorv32.pcpi_mul.rd [55].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11051 to $_DFFE_PP_ for $techmap\U$$2.picorv32.pcpi_mul.$0\rd[63:0] [56] -> \U$$2.picorv32.pcpi_mul.rd [56].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11052 to $_DFFE_PP_ for $techmap\U$$2.picorv32.pcpi_mul.$0\rd[63:0] [57] -> \U$$2.picorv32.pcpi_mul.rd [57].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11053 to $_DFFE_PP_ for $techmap\U$$2.picorv32.pcpi_mul.$0\rd[63:0] [58] -> \U$$2.picorv32.pcpi_mul.rd [58].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11054 to $_DFFE_PP_ for $techmap\U$$2.picorv32.pcpi_mul.$0\rd[63:0] [59] -> \U$$2.picorv32.pcpi_mul.rd [59].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11055 to $_DFFE_PP_ for $techmap\U$$2.picorv32.pcpi_mul.$0\rd[63:0] [60] -> \U$$2.picorv32.pcpi_mul.rd [60].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11056 to $_DFFE_PP_ for $techmap\U$$2.picorv32.pcpi_mul.$0\rd[63:0] [61] -> \U$$2.picorv32.pcpi_mul.rd [61].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11057 to $_DFFE_PP_ for $techmap\U$$2.picorv32.pcpi_mul.$0\rd[63:0] [62] -> \U$$2.picorv32.pcpi_mul.rd [62].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11058 to $_DFFE_PP_ for $techmap\U$$2.picorv32.pcpi_mul.$0\rd[63:0] [63] -> \U$$2.picorv32.pcpi_mul.rd [63].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11059 to $_DFFE_PP_ for $techmap\U$$2.picorv32.pcpi_mul.$0\rs2[63:0] [0] -> \U$$2.picorv32.pcpi_mul.rs2 [0].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11060 to $_DFFE_PP_ for $techmap\U$$2.picorv32.pcpi_mul.$0\rs2[63:0] [1] -> \U$$2.picorv32.pcpi_mul.rs2 [1].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11061 to $_DFFE_PP_ for $techmap\U$$2.picorv32.pcpi_mul.$0\rs2[63:0] [2] -> \U$$2.picorv32.pcpi_mul.rs2 [2].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11062 to $_DFFE_PP_ for $techmap\U$$2.picorv32.pcpi_mul.$0\rs2[63:0] [3] -> \U$$2.picorv32.pcpi_mul.rs2 [3].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11063 to $_DFFE_PP_ for $techmap\U$$2.picorv32.pcpi_mul.$0\rs2[63:0] [4] -> \U$$2.picorv32.pcpi_mul.rs2 [4].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11064 to $_DFFE_PP_ for $techmap\U$$2.picorv32.pcpi_mul.$0\rs2[63:0] [5] -> \U$$2.picorv32.pcpi_mul.rs2 [5].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11065 to $_DFFE_PP_ for $techmap\U$$2.picorv32.pcpi_mul.$0\rs2[63:0] [6] -> \U$$2.picorv32.pcpi_mul.rs2 [6].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11066 to $_DFFE_PP_ for $techmap\U$$2.picorv32.pcpi_mul.$0\rs2[63:0] [7] -> \U$$2.picorv32.pcpi_mul.rs2 [7].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11067 to $_DFFE_PP_ for $techmap\U$$2.picorv32.pcpi_mul.$0\rs2[63:0] [8] -> \U$$2.picorv32.pcpi_mul.rs2 [8].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11068 to $_DFFE_PP_ for $techmap\U$$2.picorv32.pcpi_mul.$0\rs2[63:0] [9] -> \U$$2.picorv32.pcpi_mul.rs2 [9].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11069 to $_DFFE_PP_ for $techmap\U$$2.picorv32.pcpi_mul.$0\rs2[63:0] [10] -> \U$$2.picorv32.pcpi_mul.rs2 [10].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11070 to $_DFFE_PP_ for $techmap\U$$2.picorv32.pcpi_mul.$0\rs2[63:0] [11] -> \U$$2.picorv32.pcpi_mul.rs2 [11].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11071 to $_DFFE_PP_ for $techmap\U$$2.picorv32.pcpi_mul.$0\rs2[63:0] [12] -> \U$$2.picorv32.pcpi_mul.rs2 [12].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11072 to $_DFFE_PP_ for $techmap\U$$2.picorv32.pcpi_mul.$0\rs2[63:0] [13] -> \U$$2.picorv32.pcpi_mul.rs2 [13].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11073 to $_DFFE_PP_ for $techmap\U$$2.picorv32.pcpi_mul.$0\rs2[63:0] [14] -> \U$$2.picorv32.pcpi_mul.rs2 [14].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11074 to $_DFFE_PP_ for $techmap\U$$2.picorv32.pcpi_mul.$0\rs2[63:0] [15] -> \U$$2.picorv32.pcpi_mul.rs2 [15].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11075 to $_DFFE_PP_ for $techmap\U$$2.picorv32.pcpi_mul.$0\rs2[63:0] [16] -> \U$$2.picorv32.pcpi_mul.rs2 [16].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11076 to $_DFFE_PP_ for $techmap\U$$2.picorv32.pcpi_mul.$0\rs2[63:0] [17] -> \U$$2.picorv32.pcpi_mul.rs2 [17].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11077 to $_DFFE_PP_ for $techmap\U$$2.picorv32.pcpi_mul.$0\rs2[63:0] [18] -> \U$$2.picorv32.pcpi_mul.rs2 [18].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11078 to $_DFFE_PP_ for $techmap\U$$2.picorv32.pcpi_mul.$0\rs2[63:0] [19] -> \U$$2.picorv32.pcpi_mul.rs2 [19].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11079 to $_DFFE_PP_ for $techmap\U$$2.picorv32.pcpi_mul.$0\rs2[63:0] [20] -> \U$$2.picorv32.pcpi_mul.rs2 [20].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11080 to $_DFFE_PP_ for $techmap\U$$2.picorv32.pcpi_mul.$0\rs2[63:0] [21] -> \U$$2.picorv32.pcpi_mul.rs2 [21].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11081 to $_DFFE_PP_ for $techmap\U$$2.picorv32.pcpi_mul.$0\rs2[63:0] [22] -> \U$$2.picorv32.pcpi_mul.rs2 [22].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11082 to $_DFFE_PP_ for $techmap\U$$2.picorv32.pcpi_mul.$0\rs2[63:0] [23] -> \U$$2.picorv32.pcpi_mul.rs2 [23].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11083 to $_DFFE_PP_ for $techmap\U$$2.picorv32.pcpi_mul.$0\rs2[63:0] [24] -> \U$$2.picorv32.pcpi_mul.rs2 [24].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11084 to $_DFFE_PP_ for $techmap\U$$2.picorv32.pcpi_mul.$0\rs2[63:0] [25] -> \U$$2.picorv32.pcpi_mul.rs2 [25].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11085 to $_DFFE_PP_ for $techmap\U$$2.picorv32.pcpi_mul.$0\rs2[63:0] [26] -> \U$$2.picorv32.pcpi_mul.rs2 [26].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11086 to $_DFFE_PP_ for $techmap\U$$2.picorv32.pcpi_mul.$0\rs2[63:0] [27] -> \U$$2.picorv32.pcpi_mul.rs2 [27].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11087 to $_DFFE_PP_ for $techmap\U$$2.picorv32.pcpi_mul.$0\rs2[63:0] [28] -> \U$$2.picorv32.pcpi_mul.rs2 [28].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11088 to $_DFFE_PP_ for $techmap\U$$2.picorv32.pcpi_mul.$0\rs2[63:0] [29] -> \U$$2.picorv32.pcpi_mul.rs2 [29].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11089 to $_DFFE_PP_ for $techmap\U$$2.picorv32.pcpi_mul.$0\rs2[63:0] [30] -> \U$$2.picorv32.pcpi_mul.rs2 [30].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11090 to $_DFFE_PP_ for $techmap\U$$2.picorv32.pcpi_mul.$0\rs2[63:0] [31] -> \U$$2.picorv32.pcpi_mul.rs2 [31].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11091 to $_DFFE_PP_ for $techmap\U$$2.picorv32.pcpi_mul.$0\rs2[63:0] [32] -> \U$$2.picorv32.pcpi_mul.rs2 [32].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11092 to $_DFFE_PP_ for $techmap\U$$2.picorv32.pcpi_mul.$0\rs2[63:0] [33] -> \U$$2.picorv32.pcpi_mul.rs2 [33].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11093 to $_DFFE_PP_ for $techmap\U$$2.picorv32.pcpi_mul.$0\rs2[63:0] [34] -> \U$$2.picorv32.pcpi_mul.rs2 [34].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11094 to $_DFFE_PP_ for $techmap\U$$2.picorv32.pcpi_mul.$0\rs2[63:0] [35] -> \U$$2.picorv32.pcpi_mul.rs2 [35].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11095 to $_DFFE_PP_ for $techmap\U$$2.picorv32.pcpi_mul.$0\rs2[63:0] [36] -> \U$$2.picorv32.pcpi_mul.rs2 [36].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11096 to $_DFFE_PP_ for $techmap\U$$2.picorv32.pcpi_mul.$0\rs2[63:0] [37] -> \U$$2.picorv32.pcpi_mul.rs2 [37].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11097 to $_DFFE_PP_ for $techmap\U$$2.picorv32.pcpi_mul.$0\rs2[63:0] [38] -> \U$$2.picorv32.pcpi_mul.rs2 [38].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11098 to $_DFFE_PP_ for $techmap\U$$2.picorv32.pcpi_mul.$0\rs2[63:0] [39] -> \U$$2.picorv32.pcpi_mul.rs2 [39].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11099 to $_DFFE_PP_ for $techmap\U$$2.picorv32.pcpi_mul.$0\rs2[63:0] [40] -> \U$$2.picorv32.pcpi_mul.rs2 [40].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11100 to $_DFFE_PP_ for $techmap\U$$2.picorv32.pcpi_mul.$0\rs2[63:0] [41] -> \U$$2.picorv32.pcpi_mul.rs2 [41].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11101 to $_DFFE_PP_ for $techmap\U$$2.picorv32.pcpi_mul.$0\rs2[63:0] [42] -> \U$$2.picorv32.pcpi_mul.rs2 [42].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11102 to $_DFFE_PP_ for $techmap\U$$2.picorv32.pcpi_mul.$0\rs2[63:0] [43] -> \U$$2.picorv32.pcpi_mul.rs2 [43].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11103 to $_DFFE_PP_ for $techmap\U$$2.picorv32.pcpi_mul.$0\rs2[63:0] [44] -> \U$$2.picorv32.pcpi_mul.rs2 [44].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11104 to $_DFFE_PP_ for $techmap\U$$2.picorv32.pcpi_mul.$0\rs2[63:0] [45] -> \U$$2.picorv32.pcpi_mul.rs2 [45].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11105 to $_DFFE_PP_ for $techmap\U$$2.picorv32.pcpi_mul.$0\rs2[63:0] [46] -> \U$$2.picorv32.pcpi_mul.rs2 [46].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11106 to $_DFFE_PP_ for $techmap\U$$2.picorv32.pcpi_mul.$0\rs2[63:0] [47] -> \U$$2.picorv32.pcpi_mul.rs2 [47].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11107 to $_DFFE_PP_ for $techmap\U$$2.picorv32.pcpi_mul.$0\rs2[63:0] [48] -> \U$$2.picorv32.pcpi_mul.rs2 [48].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11108 to $_DFFE_PP_ for $techmap\U$$2.picorv32.pcpi_mul.$0\rs2[63:0] [49] -> \U$$2.picorv32.pcpi_mul.rs2 [49].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11109 to $_DFFE_PP_ for $techmap\U$$2.picorv32.pcpi_mul.$0\rs2[63:0] [50] -> \U$$2.picorv32.pcpi_mul.rs2 [50].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11110 to $_DFFE_PP_ for $techmap\U$$2.picorv32.pcpi_mul.$0\rs2[63:0] [51] -> \U$$2.picorv32.pcpi_mul.rs2 [51].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11111 to $_DFFE_PP_ for $techmap\U$$2.picorv32.pcpi_mul.$0\rs2[63:0] [52] -> \U$$2.picorv32.pcpi_mul.rs2 [52].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11112 to $_DFFE_PP_ for $techmap\U$$2.picorv32.pcpi_mul.$0\rs2[63:0] [53] -> \U$$2.picorv32.pcpi_mul.rs2 [53].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11113 to $_DFFE_PP_ for $techmap\U$$2.picorv32.pcpi_mul.$0\rs2[63:0] [54] -> \U$$2.picorv32.pcpi_mul.rs2 [54].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11114 to $_DFFE_PP_ for $techmap\U$$2.picorv32.pcpi_mul.$0\rs2[63:0] [55] -> \U$$2.picorv32.pcpi_mul.rs2 [55].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11115 to $_DFFE_PP_ for $techmap\U$$2.picorv32.pcpi_mul.$0\rs2[63:0] [56] -> \U$$2.picorv32.pcpi_mul.rs2 [56].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11116 to $_DFFE_PP_ for $techmap\U$$2.picorv32.pcpi_mul.$0\rs2[63:0] [57] -> \U$$2.picorv32.pcpi_mul.rs2 [57].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11117 to $_DFFE_PP_ for $techmap\U$$2.picorv32.pcpi_mul.$0\rs2[63:0] [58] -> \U$$2.picorv32.pcpi_mul.rs2 [58].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11118 to $_DFFE_PP_ for $techmap\U$$2.picorv32.pcpi_mul.$0\rs2[63:0] [59] -> \U$$2.picorv32.pcpi_mul.rs2 [59].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11119 to $_DFFE_PP_ for $techmap\U$$2.picorv32.pcpi_mul.$0\rs2[63:0] [60] -> \U$$2.picorv32.pcpi_mul.rs2 [60].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11120 to $_DFFE_PP_ for $techmap\U$$2.picorv32.pcpi_mul.$0\rs2[63:0] [61] -> \U$$2.picorv32.pcpi_mul.rs2 [61].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11121 to $_DFFE_PP_ for $techmap\U$$2.picorv32.pcpi_mul.$0\rs2[63:0] [62] -> \U$$2.picorv32.pcpi_mul.rs2 [62].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11122 to $_DFFE_PP_ for $techmap\U$$2.picorv32.pcpi_mul.$0\rs2[63:0] [63] -> \U$$2.picorv32.pcpi_mul.rs2 [63].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11123 to $_DFFE_PP_ for $techmap\U$$2.picorv32.pcpi_mul.$0\rs1[63:0] [0] -> \U$$2.picorv32.pcpi_mul.rs1 [0].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11124 to $_DFFE_PP_ for $techmap\U$$2.picorv32.pcpi_mul.$0\rs1[63:0] [1] -> \U$$2.picorv32.pcpi_mul.rs1 [1].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11125 to $_DFFE_PP_ for $techmap\U$$2.picorv32.pcpi_mul.$0\rs1[63:0] [2] -> \U$$2.picorv32.pcpi_mul.rs1 [2].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11126 to $_DFFE_PP_ for $techmap\U$$2.picorv32.pcpi_mul.$0\rs1[63:0] [3] -> \U$$2.picorv32.pcpi_mul.rs1 [3].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11127 to $_DFFE_PP_ for $techmap\U$$2.picorv32.pcpi_mul.$0\rs1[63:0] [4] -> \U$$2.picorv32.pcpi_mul.rs1 [4].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11128 to $_DFFE_PP_ for $techmap\U$$2.picorv32.pcpi_mul.$0\rs1[63:0] [5] -> \U$$2.picorv32.pcpi_mul.rs1 [5].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11129 to $_DFFE_PP_ for $techmap\U$$2.picorv32.pcpi_mul.$0\rs1[63:0] [6] -> \U$$2.picorv32.pcpi_mul.rs1 [6].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11130 to $_DFFE_PP_ for $techmap\U$$2.picorv32.pcpi_mul.$0\rs1[63:0] [7] -> \U$$2.picorv32.pcpi_mul.rs1 [7].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11131 to $_DFFE_PP_ for $techmap\U$$2.picorv32.pcpi_mul.$0\rs1[63:0] [8] -> \U$$2.picorv32.pcpi_mul.rs1 [8].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11132 to $_DFFE_PP_ for $techmap\U$$2.picorv32.pcpi_mul.$0\rs1[63:0] [9] -> \U$$2.picorv32.pcpi_mul.rs1 [9].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11133 to $_DFFE_PP_ for $techmap\U$$2.picorv32.pcpi_mul.$0\rs1[63:0] [10] -> \U$$2.picorv32.pcpi_mul.rs1 [10].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11134 to $_DFFE_PP_ for $techmap\U$$2.picorv32.pcpi_mul.$0\rs1[63:0] [11] -> \U$$2.picorv32.pcpi_mul.rs1 [11].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11135 to $_DFFE_PP_ for $techmap\U$$2.picorv32.pcpi_mul.$0\rs1[63:0] [12] -> \U$$2.picorv32.pcpi_mul.rs1 [12].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11136 to $_DFFE_PP_ for $techmap\U$$2.picorv32.pcpi_mul.$0\rs1[63:0] [13] -> \U$$2.picorv32.pcpi_mul.rs1 [13].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11137 to $_DFFE_PP_ for $techmap\U$$2.picorv32.pcpi_mul.$0\rs1[63:0] [14] -> \U$$2.picorv32.pcpi_mul.rs1 [14].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11138 to $_DFFE_PP_ for $techmap\U$$2.picorv32.pcpi_mul.$0\rs1[63:0] [15] -> \U$$2.picorv32.pcpi_mul.rs1 [15].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11139 to $_DFFE_PP_ for $techmap\U$$2.picorv32.pcpi_mul.$0\rs1[63:0] [16] -> \U$$2.picorv32.pcpi_mul.rs1 [16].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11140 to $_DFFE_PP_ for $techmap\U$$2.picorv32.pcpi_mul.$0\rs1[63:0] [17] -> \U$$2.picorv32.pcpi_mul.rs1 [17].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11141 to $_DFFE_PP_ for $techmap\U$$2.picorv32.pcpi_mul.$0\rs1[63:0] [18] -> \U$$2.picorv32.pcpi_mul.rs1 [18].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11142 to $_DFFE_PP_ for $techmap\U$$2.picorv32.pcpi_mul.$0\rs1[63:0] [19] -> \U$$2.picorv32.pcpi_mul.rs1 [19].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11143 to $_DFFE_PP_ for $techmap\U$$2.picorv32.pcpi_mul.$0\rs1[63:0] [20] -> \U$$2.picorv32.pcpi_mul.rs1 [20].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11144 to $_DFFE_PP_ for $techmap\U$$2.picorv32.pcpi_mul.$0\rs1[63:0] [21] -> \U$$2.picorv32.pcpi_mul.rs1 [21].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11145 to $_DFFE_PP_ for $techmap\U$$2.picorv32.pcpi_mul.$0\rs1[63:0] [22] -> \U$$2.picorv32.pcpi_mul.rs1 [22].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11146 to $_DFFE_PP_ for $techmap\U$$2.picorv32.pcpi_mul.$0\rs1[63:0] [23] -> \U$$2.picorv32.pcpi_mul.rs1 [23].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11147 to $_DFFE_PP_ for $techmap\U$$2.picorv32.pcpi_mul.$0\rs1[63:0] [24] -> \U$$2.picorv32.pcpi_mul.rs1 [24].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11148 to $_DFFE_PP_ for $techmap\U$$2.picorv32.pcpi_mul.$0\rs1[63:0] [25] -> \U$$2.picorv32.pcpi_mul.rs1 [25].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11149 to $_DFFE_PP_ for $techmap\U$$2.picorv32.pcpi_mul.$0\rs1[63:0] [26] -> \U$$2.picorv32.pcpi_mul.rs1 [26].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11150 to $_DFFE_PP_ for $techmap\U$$2.picorv32.pcpi_mul.$0\rs1[63:0] [27] -> \U$$2.picorv32.pcpi_mul.rs1 [27].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11151 to $_DFFE_PP_ for $techmap\U$$2.picorv32.pcpi_mul.$0\rs1[63:0] [28] -> \U$$2.picorv32.pcpi_mul.rs1 [28].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11152 to $_DFFE_PP_ for $techmap\U$$2.picorv32.pcpi_mul.$0\rs1[63:0] [29] -> \U$$2.picorv32.pcpi_mul.rs1 [29].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11153 to $_DFFE_PP_ for $techmap\U$$2.picorv32.pcpi_mul.$0\rs1[63:0] [30] -> \U$$2.picorv32.pcpi_mul.rs1 [30].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11154 to $_DFFE_PP_ for $techmap\U$$2.picorv32.pcpi_mul.$0\rs1[63:0] [31] -> \U$$2.picorv32.pcpi_mul.rs1 [31].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11155 to $_DFFE_PP_ for $techmap\U$$2.picorv32.pcpi_mul.$0\rs1[63:0] [32] -> \U$$2.picorv32.pcpi_mul.rs1 [32].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11156 to $_DFFE_PP_ for $techmap\U$$2.picorv32.pcpi_mul.$0\rs1[63:0] [33] -> \U$$2.picorv32.pcpi_mul.rs1 [33].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11157 to $_DFFE_PP_ for $techmap\U$$2.picorv32.pcpi_mul.$0\rs1[63:0] [34] -> \U$$2.picorv32.pcpi_mul.rs1 [34].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11158 to $_DFFE_PP_ for $techmap\U$$2.picorv32.pcpi_mul.$0\rs1[63:0] [35] -> \U$$2.picorv32.pcpi_mul.rs1 [35].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11159 to $_DFFE_PP_ for $techmap\U$$2.picorv32.pcpi_mul.$0\rs1[63:0] [36] -> \U$$2.picorv32.pcpi_mul.rs1 [36].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11160 to $_DFFE_PP_ for $techmap\U$$2.picorv32.pcpi_mul.$0\rs1[63:0] [37] -> \U$$2.picorv32.pcpi_mul.rs1 [37].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11161 to $_DFFE_PP_ for $techmap\U$$2.picorv32.pcpi_mul.$0\rs1[63:0] [38] -> \U$$2.picorv32.pcpi_mul.rs1 [38].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11162 to $_DFFE_PP_ for $techmap\U$$2.picorv32.pcpi_mul.$0\rs1[63:0] [39] -> \U$$2.picorv32.pcpi_mul.rs1 [39].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11163 to $_DFFE_PP_ for $techmap\U$$2.picorv32.pcpi_mul.$0\rs1[63:0] [40] -> \U$$2.picorv32.pcpi_mul.rs1 [40].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11164 to $_DFFE_PP_ for $techmap\U$$2.picorv32.pcpi_mul.$0\rs1[63:0] [41] -> \U$$2.picorv32.pcpi_mul.rs1 [41].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11165 to $_DFFE_PP_ for $techmap\U$$2.picorv32.pcpi_mul.$0\rs1[63:0] [42] -> \U$$2.picorv32.pcpi_mul.rs1 [42].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11166 to $_DFFE_PP_ for $techmap\U$$2.picorv32.pcpi_mul.$0\rs1[63:0] [43] -> \U$$2.picorv32.pcpi_mul.rs1 [43].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11167 to $_DFFE_PP_ for $techmap\U$$2.picorv32.pcpi_mul.$0\rs1[63:0] [44] -> \U$$2.picorv32.pcpi_mul.rs1 [44].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11168 to $_DFFE_PP_ for $techmap\U$$2.picorv32.pcpi_mul.$0\rs1[63:0] [45] -> \U$$2.picorv32.pcpi_mul.rs1 [45].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11169 to $_DFFE_PP_ for $techmap\U$$2.picorv32.pcpi_mul.$0\rs1[63:0] [46] -> \U$$2.picorv32.pcpi_mul.rs1 [46].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11170 to $_DFFE_PP_ for $techmap\U$$2.picorv32.pcpi_mul.$0\rs1[63:0] [47] -> \U$$2.picorv32.pcpi_mul.rs1 [47].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11171 to $_DFFE_PP_ for $techmap\U$$2.picorv32.pcpi_mul.$0\rs1[63:0] [48] -> \U$$2.picorv32.pcpi_mul.rs1 [48].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11172 to $_DFFE_PP_ for $techmap\U$$2.picorv32.pcpi_mul.$0\rs1[63:0] [49] -> \U$$2.picorv32.pcpi_mul.rs1 [49].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11173 to $_DFFE_PP_ for $techmap\U$$2.picorv32.pcpi_mul.$0\rs1[63:0] [50] -> \U$$2.picorv32.pcpi_mul.rs1 [50].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11174 to $_DFFE_PP_ for $techmap\U$$2.picorv32.pcpi_mul.$0\rs1[63:0] [51] -> \U$$2.picorv32.pcpi_mul.rs1 [51].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11175 to $_DFFE_PP_ for $techmap\U$$2.picorv32.pcpi_mul.$0\rs1[63:0] [52] -> \U$$2.picorv32.pcpi_mul.rs1 [52].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11176 to $_DFFE_PP_ for $techmap\U$$2.picorv32.pcpi_mul.$0\rs1[63:0] [53] -> \U$$2.picorv32.pcpi_mul.rs1 [53].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11177 to $_DFFE_PP_ for $techmap\U$$2.picorv32.pcpi_mul.$0\rs1[63:0] [54] -> \U$$2.picorv32.pcpi_mul.rs1 [54].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11178 to $_DFFE_PP_ for $techmap\U$$2.picorv32.pcpi_mul.$0\rs1[63:0] [55] -> \U$$2.picorv32.pcpi_mul.rs1 [55].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11179 to $_DFFE_PP_ for $techmap\U$$2.picorv32.pcpi_mul.$0\rs1[63:0] [56] -> \U$$2.picorv32.pcpi_mul.rs1 [56].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11180 to $_DFFE_PP_ for $techmap\U$$2.picorv32.pcpi_mul.$0\rs1[63:0] [57] -> \U$$2.picorv32.pcpi_mul.rs1 [57].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11181 to $_DFFE_PP_ for $techmap\U$$2.picorv32.pcpi_mul.$0\rs1[63:0] [58] -> \U$$2.picorv32.pcpi_mul.rs1 [58].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11182 to $_DFFE_PP_ for $techmap\U$$2.picorv32.pcpi_mul.$0\rs1[63:0] [59] -> \U$$2.picorv32.pcpi_mul.rs1 [59].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11183 to $_DFFE_PP_ for $techmap\U$$2.picorv32.pcpi_mul.$0\rs1[63:0] [60] -> \U$$2.picorv32.pcpi_mul.rs1 [60].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11184 to $_DFFE_PP_ for $techmap\U$$2.picorv32.pcpi_mul.$0\rs1[63:0] [61] -> \U$$2.picorv32.pcpi_mul.rs1 [61].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11185 to $_DFFE_PP_ for $techmap\U$$2.picorv32.pcpi_mul.$0\rs1[63:0] [62] -> \U$$2.picorv32.pcpi_mul.rs1 [62].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11186 to $_DFFE_PP_ for $techmap\U$$2.picorv32.pcpi_mul.$0\rs1[63:0] [63] -> \U$$2.picorv32.pcpi_mul.rs1 [63].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11189 to $_DFFE_PP_ for $techmap\U$$2.picorv32.pcpi_mul.$0\pcpi_rd[31:0] [0] -> \U$$2.picorv32.pcpi_mul.pcpi_rd [0].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11190 to $_DFFE_PP_ for $techmap\U$$2.picorv32.pcpi_mul.$0\pcpi_rd[31:0] [1] -> \U$$2.picorv32.pcpi_mul.pcpi_rd [1].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11191 to $_DFFE_PP_ for $techmap\U$$2.picorv32.pcpi_mul.$0\pcpi_rd[31:0] [2] -> \U$$2.picorv32.pcpi_mul.pcpi_rd [2].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11192 to $_DFFE_PP_ for $techmap\U$$2.picorv32.pcpi_mul.$0\pcpi_rd[31:0] [3] -> \U$$2.picorv32.pcpi_mul.pcpi_rd [3].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11193 to $_DFFE_PP_ for $techmap\U$$2.picorv32.pcpi_mul.$0\pcpi_rd[31:0] [4] -> \U$$2.picorv32.pcpi_mul.pcpi_rd [4].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11194 to $_DFFE_PP_ for $techmap\U$$2.picorv32.pcpi_mul.$0\pcpi_rd[31:0] [5] -> \U$$2.picorv32.pcpi_mul.pcpi_rd [5].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11195 to $_DFFE_PP_ for $techmap\U$$2.picorv32.pcpi_mul.$0\pcpi_rd[31:0] [6] -> \U$$2.picorv32.pcpi_mul.pcpi_rd [6].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11196 to $_DFFE_PP_ for $techmap\U$$2.picorv32.pcpi_mul.$0\pcpi_rd[31:0] [7] -> \U$$2.picorv32.pcpi_mul.pcpi_rd [7].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11197 to $_DFFE_PP_ for $techmap\U$$2.picorv32.pcpi_mul.$0\pcpi_rd[31:0] [8] -> \U$$2.picorv32.pcpi_mul.pcpi_rd [8].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11198 to $_DFFE_PP_ for $techmap\U$$2.picorv32.pcpi_mul.$0\pcpi_rd[31:0] [9] -> \U$$2.picorv32.pcpi_mul.pcpi_rd [9].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11199 to $_DFFE_PP_ for $techmap\U$$2.picorv32.pcpi_mul.$0\pcpi_rd[31:0] [10] -> \U$$2.picorv32.pcpi_mul.pcpi_rd [10].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11200 to $_DFFE_PP_ for $techmap\U$$2.picorv32.pcpi_mul.$0\pcpi_rd[31:0] [11] -> \U$$2.picorv32.pcpi_mul.pcpi_rd [11].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11201 to $_DFFE_PP_ for $techmap\U$$2.picorv32.pcpi_mul.$0\pcpi_rd[31:0] [12] -> \U$$2.picorv32.pcpi_mul.pcpi_rd [12].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11202 to $_DFFE_PP_ for $techmap\U$$2.picorv32.pcpi_mul.$0\pcpi_rd[31:0] [13] -> \U$$2.picorv32.pcpi_mul.pcpi_rd [13].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11203 to $_DFFE_PP_ for $techmap\U$$2.picorv32.pcpi_mul.$0\pcpi_rd[31:0] [14] -> \U$$2.picorv32.pcpi_mul.pcpi_rd [14].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11204 to $_DFFE_PP_ for $techmap\U$$2.picorv32.pcpi_mul.$0\pcpi_rd[31:0] [15] -> \U$$2.picorv32.pcpi_mul.pcpi_rd [15].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11205 to $_DFFE_PP_ for $techmap\U$$2.picorv32.pcpi_mul.$0\pcpi_rd[31:0] [16] -> \U$$2.picorv32.pcpi_mul.pcpi_rd [16].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11206 to $_DFFE_PP_ for $techmap\U$$2.picorv32.pcpi_mul.$0\pcpi_rd[31:0] [17] -> \U$$2.picorv32.pcpi_mul.pcpi_rd [17].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11207 to $_DFFE_PP_ for $techmap\U$$2.picorv32.pcpi_mul.$0\pcpi_rd[31:0] [18] -> \U$$2.picorv32.pcpi_mul.pcpi_rd [18].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11208 to $_DFFE_PP_ for $techmap\U$$2.picorv32.pcpi_mul.$0\pcpi_rd[31:0] [19] -> \U$$2.picorv32.pcpi_mul.pcpi_rd [19].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11209 to $_DFFE_PP_ for $techmap\U$$2.picorv32.pcpi_mul.$0\pcpi_rd[31:0] [20] -> \U$$2.picorv32.pcpi_mul.pcpi_rd [20].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11210 to $_DFFE_PP_ for $techmap\U$$2.picorv32.pcpi_mul.$0\pcpi_rd[31:0] [21] -> \U$$2.picorv32.pcpi_mul.pcpi_rd [21].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11211 to $_DFFE_PP_ for $techmap\U$$2.picorv32.pcpi_mul.$0\pcpi_rd[31:0] [22] -> \U$$2.picorv32.pcpi_mul.pcpi_rd [22].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11212 to $_DFFE_PP_ for $techmap\U$$2.picorv32.pcpi_mul.$0\pcpi_rd[31:0] [23] -> \U$$2.picorv32.pcpi_mul.pcpi_rd [23].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11213 to $_DFFE_PP_ for $techmap\U$$2.picorv32.pcpi_mul.$0\pcpi_rd[31:0] [24] -> \U$$2.picorv32.pcpi_mul.pcpi_rd [24].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11214 to $_DFFE_PP_ for $techmap\U$$2.picorv32.pcpi_mul.$0\pcpi_rd[31:0] [25] -> \U$$2.picorv32.pcpi_mul.pcpi_rd [25].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11215 to $_DFFE_PP_ for $techmap\U$$2.picorv32.pcpi_mul.$0\pcpi_rd[31:0] [26] -> \U$$2.picorv32.pcpi_mul.pcpi_rd [26].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11216 to $_DFFE_PP_ for $techmap\U$$2.picorv32.pcpi_mul.$0\pcpi_rd[31:0] [27] -> \U$$2.picorv32.pcpi_mul.pcpi_rd [27].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11217 to $_DFFE_PP_ for $techmap\U$$2.picorv32.pcpi_mul.$0\pcpi_rd[31:0] [28] -> \U$$2.picorv32.pcpi_mul.pcpi_rd [28].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11218 to $_DFFE_PP_ for $techmap\U$$2.picorv32.pcpi_mul.$0\pcpi_rd[31:0] [29] -> \U$$2.picorv32.pcpi_mul.pcpi_rd [29].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11219 to $_DFFE_PP_ for $techmap\U$$2.picorv32.pcpi_mul.$0\pcpi_rd[31:0] [30] -> \U$$2.picorv32.pcpi_mul.pcpi_rd [30].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11220 to $_DFFE_PP_ for $techmap\U$$2.picorv32.pcpi_mul.$0\pcpi_rd[31:0] [31] -> \U$$2.picorv32.pcpi_mul.pcpi_rd [31].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$5578 to $_DFFE_PP_ for \cd_sync.ready$next -> \cd_sync.ready.
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$5579 to $_DFFE_PP_ for \cd_sync.timer$next [0] -> \cd_sync.timer [0].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$5580 to $_DFFE_PP_ for \cd_sync.timer$next [1] -> \cd_sync.timer [1].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$5581 to $_DFFE_PP_ for \cd_sync.timer$next [2] -> \cd_sync.timer [2].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$5582 to $_DFFE_PP_ for \cd_sync.timer$next [3] -> \cd_sync.timer [3].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$5583 to $_DFFE_PP_ for \cd_sync.timer$next [4] -> \cd_sync.timer [4].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$5584 to $_DFFE_PP_ for \cd_sync.timer$next [5] -> \cd_sync.timer [5].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$5585 to $_DFFE_PP_ for \cd_sync.timer$next [6] -> \cd_sync.timer [6].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$5586 to $_DFFE_PP_ for \cd_sync.timer$next [7] -> \cd_sync.timer [7].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$5652 to $_DFFE_PP_ for \U$$2.led$next -> \U$$2.led.
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$5653 to $_DFFE_PP_ for \U$$2.nco_ctrl__enable$next -> \U$$2.nco_ctrl__enable.
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$5654 to $_DFFE_PP_ for \U$$2.phase_step$next [0] -> \U$$2.phase_step [0].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$5655 to $_DFFE_PP_ for \U$$2.phase_step$next [1] -> \U$$2.phase_step [1].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$5656 to $_DFFE_PP_ for \U$$2.phase_step$next [2] -> \U$$2.phase_step [2].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$5657 to $_DFFE_PP_ for \U$$2.phase_step$next [3] -> \U$$2.phase_step [3].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$5658 to $_DFFE_PP_ for \U$$2.phase_step$next [4] -> \U$$2.phase_step [4].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$5659 to $_DFFE_PP_ for \U$$2.phase_step$next [5] -> \U$$2.phase_step [5].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$5660 to $_DFFE_PP_ for \U$$2.phase_step$next [6] -> \U$$2.phase_step [6].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$5661 to $_DFFE_PP_ for \U$$2.phase_step$next [7] -> \U$$2.phase_step [7].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$5662 to $_DFFE_PP_ for \U$$2.phase_step$next [8] -> \U$$2.phase_step [8].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$5663 to $_DFFE_PP_ for \U$$2.phase_step$next [9] -> \U$$2.phase_step [9].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$5664 to $_DFFE_PP_ for \U$$2.phase_step$next [10] -> \U$$2.phase_step [10].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$5665 to $_DFFE_PP_ for \U$$2.phase_step$next [11] -> \U$$2.phase_step [11].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$5666 to $_DFFE_PP_ for \U$$2.phase_step$next [12] -> \U$$2.phase_step [12].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$5667 to $_DFFE_PP_ for \U$$2.phase_step$next [13] -> \U$$2.phase_step [13].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$5668 to $_DFFE_PP_ for \U$$2.phase_step$next [14] -> \U$$2.phase_step [14].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$5669 to $_DFFE_PP_ for \U$$2.phase_step$next [15] -> \U$$2.phase_step [15].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$5670 to $_DFFE_PP_ for \U$$2.phase_step$next [16] -> \U$$2.phase_step [16].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$5671 to $_DFFE_PP_ for \U$$2.phase_step$next [17] -> \U$$2.phase_step [17].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$5672 to $_DFFE_PP_ for \U$$2.phase_step$next [18] -> \U$$2.phase_step [18].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$5673 to $_DFFE_PP_ for \U$$2.phase_step$next [19] -> \U$$2.phase_step [19].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$5674 to $_DFFE_PP_ for \U$$2.phase_step$next [20] -> \U$$2.phase_step [20].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$5675 to $_DFFE_PP_ for \U$$2.phase_step$next [21] -> \U$$2.phase_step [21].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$5676 to $_DFFE_PP_ for \U$$2.phase_step$next [22] -> \U$$2.phase_step [22].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$5677 to $_DFFE_PP_ for \U$$2.phase_step$next [23] -> \U$$2.phase_step [23].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$5678 to $_DFFE_PP_ for \U$$2.phase_step$next [24] -> \U$$2.phase_step [24].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$5679 to $_DFFE_PP_ for \U$$2.phase_step$next [25] -> \U$$2.phase_step [25].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$5680 to $_DFFE_PP_ for \U$$2.phase_step$next [26] -> \U$$2.phase_step [26].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$5681 to $_DFFE_PP_ for \U$$2.phase_step$next [27] -> \U$$2.phase_step [27].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$5682 to $_DFFE_PP_ for \U$$2.phase_step$next [28] -> \U$$2.phase_step [28].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$5683 to $_DFFE_PP_ for \U$$2.phase_step$next [29] -> \U$$2.phase_step [29].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$5684 to $_DFFE_PP_ for \U$$2.phase_step$next [30] -> \U$$2.phase_step [30].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$5685 to $_DFFE_PP_ for \U$$2.phase_step$next [31] -> \U$$2.phase_step [31].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$6523 to $_DFFE_PP_ for $auto$rtlil.cc:1906:Mux$5193 -> $auto$memory_bram.cc:960:replace_cell$5191.
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$6557 to $_DFFE_PP_ for $auto$rtlil.cc:1906:Mux$5180 -> $auto$memory_bram.cc:960:replace_cell$5178.
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$6785 to $_DFFE_PP_ for $auto$rtlil.cc:1906:Mux$5206 -> $auto$memory_bram.cc:960:replace_cell$5204.
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$6797 to $_DFFE_PP_ for $techmap\U$$2.picorv32.$0\mem_rdata_q[31:0] [0] -> \U$$2.picorv32.mem_rdata_q [0].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$6798 to $_DFFE_PP_ for $techmap\U$$2.picorv32.$0\mem_rdata_q[31:0] [1] -> \U$$2.picorv32.mem_rdata_q [1].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$6799 to $_DFFE_PP_ for $techmap\U$$2.picorv32.$0\mem_rdata_q[31:0] [2] -> \U$$2.picorv32.mem_rdata_q [2].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$6800 to $_DFFE_PP_ for $techmap\U$$2.picorv32.$0\mem_rdata_q[31:0] [3] -> \U$$2.picorv32.mem_rdata_q [3].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$6801 to $_DFFE_PP_ for $techmap\U$$2.picorv32.$0\mem_rdata_q[31:0] [4] -> \U$$2.picorv32.mem_rdata_q [4].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$6802 to $_DFFE_PP_ for $techmap\U$$2.picorv32.$0\mem_rdata_q[31:0] [5] -> \U$$2.picorv32.mem_rdata_q [5].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$6803 to $_DFFE_PP_ for $techmap\U$$2.picorv32.$0\mem_rdata_q[31:0] [6] -> \U$$2.picorv32.mem_rdata_q [6].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$6863 to $_DFFE_PP_ for $techmap\U$$2.picorv32.$0\mem_16bit_buffer[15:0] [0] -> \U$$2.picorv32.mem_16bit_buffer [0].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$6864 to $_DFFE_PP_ for $techmap\U$$2.picorv32.$0\mem_16bit_buffer[15:0] [1] -> \U$$2.picorv32.mem_16bit_buffer [1].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$6865 to $_DFFE_PP_ for $techmap\U$$2.picorv32.$0\mem_16bit_buffer[15:0] [2] -> \U$$2.picorv32.mem_16bit_buffer [2].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$6866 to $_DFFE_PP_ for $techmap\U$$2.picorv32.$0\mem_16bit_buffer[15:0] [3] -> \U$$2.picorv32.mem_16bit_buffer [3].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$6867 to $_DFFE_PP_ for $techmap\U$$2.picorv32.$0\mem_16bit_buffer[15:0] [4] -> \U$$2.picorv32.mem_16bit_buffer [4].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$6868 to $_DFFE_PP_ for $techmap\U$$2.picorv32.$0\mem_16bit_buffer[15:0] [5] -> \U$$2.picorv32.mem_16bit_buffer [5].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$6869 to $_DFFE_PP_ for $techmap\U$$2.picorv32.$0\mem_16bit_buffer[15:0] [6] -> \U$$2.picorv32.mem_16bit_buffer [6].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$6870 to $_DFFE_PP_ for $techmap\U$$2.picorv32.$0\mem_16bit_buffer[15:0] [7] -> \U$$2.picorv32.mem_16bit_buffer [7].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$6871 to $_DFFE_PP_ for $techmap\U$$2.picorv32.$0\mem_16bit_buffer[15:0] [8] -> \U$$2.picorv32.mem_16bit_buffer [8].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$6872 to $_DFFE_PP_ for $techmap\U$$2.picorv32.$0\mem_16bit_buffer[15:0] [9] -> \U$$2.picorv32.mem_16bit_buffer [9].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$6873 to $_DFFE_PP_ for $techmap\U$$2.picorv32.$0\mem_16bit_buffer[15:0] [10] -> \U$$2.picorv32.mem_16bit_buffer [10].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$6874 to $_DFFE_PP_ for $techmap\U$$2.picorv32.$0\mem_16bit_buffer[15:0] [11] -> \U$$2.picorv32.mem_16bit_buffer [11].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$6875 to $_DFFE_PP_ for $techmap\U$$2.picorv32.$0\mem_16bit_buffer[15:0] [12] -> \U$$2.picorv32.mem_16bit_buffer [12].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$6876 to $_DFFE_PP_ for $techmap\U$$2.picorv32.$0\mem_16bit_buffer[15:0] [13] -> \U$$2.picorv32.mem_16bit_buffer [13].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$6877 to $_DFFE_PP_ for $techmap\U$$2.picorv32.$0\mem_16bit_buffer[15:0] [14] -> \U$$2.picorv32.mem_16bit_buffer [14].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$6878 to $_DFFE_PP_ for $techmap\U$$2.picorv32.$0\mem_16bit_buffer[15:0] [15] -> \U$$2.picorv32.mem_16bit_buffer [15].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$6879 to $_DFFE_PP_ for $techmap\U$$2.picorv32.$0\prefetched_high_word[0:0] -> \U$$2.picorv32.prefetched_high_word.
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$6880 to $_DFFE_PP_ for $techmap\U$$2.picorv32.$0\mem_la_secondword[0:0] -> \U$$2.picorv32.mem_la_secondword.
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$6881 to $_DFFE_PP_ for $techmap\U$$2.picorv32.$0\mem_state[1:0] [0] -> \U$$2.picorv32.mem_state [0].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$6882 to $_DFFE_PP_ for $techmap\U$$2.picorv32.$0\mem_state[1:0] [1] -> \U$$2.picorv32.mem_state [1].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$6883 to $_DFFE_PP_ for $techmap\U$$2.picorv32.$0\mem_wstrb[3:0] [0] -> \U$$2.picorv32.mem_wstrb [0].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$6884 to $_DFFE_PP_ for $techmap\U$$2.picorv32.$0\mem_wstrb[3:0] [1] -> \U$$2.picorv32.mem_wstrb [1].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$6885 to $_DFFE_PP_ for $techmap\U$$2.picorv32.$0\mem_wstrb[3:0] [2] -> \U$$2.picorv32.mem_wstrb [2].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$6886 to $_DFFE_PP_ for $techmap\U$$2.picorv32.$0\mem_wstrb[3:0] [3] -> \U$$2.picorv32.mem_wstrb [3].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$6887 to $_DFFE_PP_ for $techmap\U$$2.picorv32.$0\mem_wdata[31:0] [0] -> \U$$2.picorv32.mem_wdata [0].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$6888 to $_DFFE_PP_ for $techmap\U$$2.picorv32.$0\mem_wdata[31:0] [1] -> \U$$2.picorv32.mem_wdata [1].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$6889 to $_DFFE_PP_ for $techmap\U$$2.picorv32.$0\mem_wdata[31:0] [2] -> \U$$2.picorv32.mem_wdata [2].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$6890 to $_DFFE_PP_ for $techmap\U$$2.picorv32.$0\mem_wdata[31:0] [3] -> \U$$2.picorv32.mem_wdata [3].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$6891 to $_DFFE_PP_ for $techmap\U$$2.picorv32.$0\mem_wdata[31:0] [4] -> \U$$2.picorv32.mem_wdata [4].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$6892 to $_DFFE_PP_ for $techmap\U$$2.picorv32.$0\mem_wdata[31:0] [5] -> \U$$2.picorv32.mem_wdata [5].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$6893 to $_DFFE_PP_ for $techmap\U$$2.picorv32.$0\mem_wdata[31:0] [6] -> \U$$2.picorv32.mem_wdata [6].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$6894 to $_DFFE_PP_ for $techmap\U$$2.picorv32.$0\mem_wdata[31:0] [7] -> \U$$2.picorv32.mem_wdata [7].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$6895 to $_DFFE_PP_ for $techmap\U$$2.picorv32.$0\mem_wdata[31:0] [8] -> \U$$2.picorv32.mem_wdata [8].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$6896 to $_DFFE_PP_ for $techmap\U$$2.picorv32.$0\mem_wdata[31:0] [9] -> \U$$2.picorv32.mem_wdata [9].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$6897 to $_DFFE_PP_ for $techmap\U$$2.picorv32.$0\mem_wdata[31:0] [10] -> \U$$2.picorv32.mem_wdata [10].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$6898 to $_DFFE_PP_ for $techmap\U$$2.picorv32.$0\mem_wdata[31:0] [11] -> \U$$2.picorv32.mem_wdata [11].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$6899 to $_DFFE_PP_ for $techmap\U$$2.picorv32.$0\mem_wdata[31:0] [12] -> \U$$2.picorv32.mem_wdata [12].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$6900 to $_DFFE_PP_ for $techmap\U$$2.picorv32.$0\mem_wdata[31:0] [13] -> \U$$2.picorv32.mem_wdata [13].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$6901 to $_DFFE_PP_ for $techmap\U$$2.picorv32.$0\mem_wdata[31:0] [14] -> \U$$2.picorv32.mem_wdata [14].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$6902 to $_DFFE_PP_ for $techmap\U$$2.picorv32.$0\mem_wdata[31:0] [15] -> \U$$2.picorv32.mem_wdata [15].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$6903 to $_DFFE_PP_ for $techmap\U$$2.picorv32.$0\mem_wdata[31:0] [16] -> \U$$2.picorv32.mem_wdata [16].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$6904 to $_DFFE_PP_ for $techmap\U$$2.picorv32.$0\mem_wdata[31:0] [17] -> \U$$2.picorv32.mem_wdata [17].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$6905 to $_DFFE_PP_ for $techmap\U$$2.picorv32.$0\mem_wdata[31:0] [18] -> \U$$2.picorv32.mem_wdata [18].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$6906 to $_DFFE_PP_ for $techmap\U$$2.picorv32.$0\mem_wdata[31:0] [19] -> \U$$2.picorv32.mem_wdata [19].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$6907 to $_DFFE_PP_ for $techmap\U$$2.picorv32.$0\mem_wdata[31:0] [20] -> \U$$2.picorv32.mem_wdata [20].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$6908 to $_DFFE_PP_ for $techmap\U$$2.picorv32.$0\mem_wdata[31:0] [21] -> \U$$2.picorv32.mem_wdata [21].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$6909 to $_DFFE_PP_ for $techmap\U$$2.picorv32.$0\mem_wdata[31:0] [22] -> \U$$2.picorv32.mem_wdata [22].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$6910 to $_DFFE_PP_ for $techmap\U$$2.picorv32.$0\mem_wdata[31:0] [23] -> \U$$2.picorv32.mem_wdata [23].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$6911 to $_DFFE_PP_ for $techmap\U$$2.picorv32.$0\mem_wdata[31:0] [24] -> \U$$2.picorv32.mem_wdata [24].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$6912 to $_DFFE_PP_ for $techmap\U$$2.picorv32.$0\mem_wdata[31:0] [25] -> \U$$2.picorv32.mem_wdata [25].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$6913 to $_DFFE_PP_ for $techmap\U$$2.picorv32.$0\mem_wdata[31:0] [26] -> \U$$2.picorv32.mem_wdata [26].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$6914 to $_DFFE_PP_ for $techmap\U$$2.picorv32.$0\mem_wdata[31:0] [27] -> \U$$2.picorv32.mem_wdata [27].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$6915 to $_DFFE_PP_ for $techmap\U$$2.picorv32.$0\mem_wdata[31:0] [28] -> \U$$2.picorv32.mem_wdata [28].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$6916 to $_DFFE_PP_ for $techmap\U$$2.picorv32.$0\mem_wdata[31:0] [29] -> \U$$2.picorv32.mem_wdata [29].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$6917 to $_DFFE_PP_ for $techmap\U$$2.picorv32.$0\mem_wdata[31:0] [30] -> \U$$2.picorv32.mem_wdata [30].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$6918 to $_DFFE_PP_ for $techmap\U$$2.picorv32.$0\mem_wdata[31:0] [31] -> \U$$2.picorv32.mem_wdata [31].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$6919 to $_DFFE_PP_ for $techmap\U$$2.picorv32.$0\mem_addr[31:0] [0] -> \U$$2.picorv32.mem_addr [0].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$6920 to $_DFFE_PP_ for $techmap\U$$2.picorv32.$0\mem_addr[31:0] [1] -> \U$$2.picorv32.mem_addr [1].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$6921 to $_DFFE_PP_ for $techmap\U$$2.picorv32.$0\mem_addr[31:0] [2] -> \U$$2.picorv32.mem_addr [2].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$6922 to $_DFFE_PP_ for $techmap\U$$2.picorv32.$0\mem_addr[31:0] [3] -> \U$$2.picorv32.mem_addr [3].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$6923 to $_DFFE_PP_ for $techmap\U$$2.picorv32.$0\mem_addr[31:0] [4] -> \U$$2.picorv32.mem_addr [4].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$6924 to $_DFFE_PP_ for $techmap\U$$2.picorv32.$0\mem_addr[31:0] [5] -> \U$$2.picorv32.mem_addr [5].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$6925 to $_DFFE_PP_ for $techmap\U$$2.picorv32.$0\mem_addr[31:0] [6] -> \U$$2.picorv32.mem_addr [6].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$6926 to $_DFFE_PP_ for $techmap\U$$2.picorv32.$0\mem_addr[31:0] [7] -> \U$$2.picorv32.mem_addr [7].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$6927 to $_DFFE_PP_ for $techmap\U$$2.picorv32.$0\mem_addr[31:0] [8] -> \U$$2.picorv32.mem_addr [8].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$6928 to $_DFFE_PP_ for $techmap\U$$2.picorv32.$0\mem_addr[31:0] [9] -> \U$$2.picorv32.mem_addr [9].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$6929 to $_DFFE_PP_ for $techmap\U$$2.picorv32.$0\mem_addr[31:0] [10] -> \U$$2.picorv32.mem_addr [10].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$6930 to $_DFFE_PP_ for $techmap\U$$2.picorv32.$0\mem_addr[31:0] [11] -> \U$$2.picorv32.mem_addr [11].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$6931 to $_DFFE_PP_ for $techmap\U$$2.picorv32.$0\mem_addr[31:0] [12] -> \U$$2.picorv32.mem_addr [12].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$6932 to $_DFFE_PP_ for $techmap\U$$2.picorv32.$0\mem_addr[31:0] [13] -> \U$$2.picorv32.mem_addr [13].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$6933 to $_DFFE_PP_ for $techmap\U$$2.picorv32.$0\mem_addr[31:0] [14] -> \U$$2.picorv32.mem_addr [14].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$6934 to $_DFFE_PP_ for $techmap\U$$2.picorv32.$0\mem_addr[31:0] [15] -> \U$$2.picorv32.mem_addr [15].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$6935 to $_DFFE_PP_ for $techmap\U$$2.picorv32.$0\mem_addr[31:0] [16] -> \U$$2.picorv32.mem_addr [16].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$6936 to $_DFFE_PP_ for $techmap\U$$2.picorv32.$0\mem_addr[31:0] [17] -> \U$$2.picorv32.mem_addr [17].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$6937 to $_DFFE_PP_ for $techmap\U$$2.picorv32.$0\mem_addr[31:0] [18] -> \U$$2.picorv32.mem_addr [18].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$6938 to $_DFFE_PP_ for $techmap\U$$2.picorv32.$0\mem_addr[31:0] [19] -> \U$$2.picorv32.mem_addr [19].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$6939 to $_DFFE_PP_ for $techmap\U$$2.picorv32.$0\mem_addr[31:0] [20] -> \U$$2.picorv32.mem_addr [20].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$6940 to $_DFFE_PP_ for $techmap\U$$2.picorv32.$0\mem_addr[31:0] [21] -> \U$$2.picorv32.mem_addr [21].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$6941 to $_DFFE_PP_ for $techmap\U$$2.picorv32.$0\mem_addr[31:0] [22] -> \U$$2.picorv32.mem_addr [22].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$6942 to $_DFFE_PP_ for $techmap\U$$2.picorv32.$0\mem_addr[31:0] [23] -> \U$$2.picorv32.mem_addr [23].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$6943 to $_DFFE_PP_ for $techmap\U$$2.picorv32.$0\mem_addr[31:0] [24] -> \U$$2.picorv32.mem_addr [24].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$6944 to $_DFFE_PP_ for $techmap\U$$2.picorv32.$0\mem_addr[31:0] [25] -> \U$$2.picorv32.mem_addr [25].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$6945 to $_DFFE_PP_ for $techmap\U$$2.picorv32.$0\mem_addr[31:0] [26] -> \U$$2.picorv32.mem_addr [26].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$6946 to $_DFFE_PP_ for $techmap\U$$2.picorv32.$0\mem_addr[31:0] [27] -> \U$$2.picorv32.mem_addr [27].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$6947 to $_DFFE_PP_ for $techmap\U$$2.picorv32.$0\mem_addr[31:0] [28] -> \U$$2.picorv32.mem_addr [28].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$6948 to $_DFFE_PP_ for $techmap\U$$2.picorv32.$0\mem_addr[31:0] [29] -> \U$$2.picorv32.mem_addr [29].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$6949 to $_DFFE_PP_ for $techmap\U$$2.picorv32.$0\mem_addr[31:0] [30] -> \U$$2.picorv32.mem_addr [30].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$6950 to $_DFFE_PP_ for $techmap\U$$2.picorv32.$0\mem_addr[31:0] [31] -> \U$$2.picorv32.mem_addr [31].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$6951 to $_DFFE_PP_ for $techmap\U$$2.picorv32.$0\mem_valid[0:0] -> \U$$2.picorv32.mem_valid.
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$6953 to $_DFFE_PP_ for $techmap\U$$2.picorv32.$0\is_alu_reg_reg[0:0] -> \U$$2.picorv32.is_alu_reg_reg.
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$6954 to $_DFFE_PP_ for $techmap\U$$2.picorv32.$0\is_alu_reg_imm[0:0] -> \U$$2.picorv32.is_alu_reg_imm.
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$6955 to $_DFFE_PP_ for $techmap\U$$2.picorv32.$0\is_beq_bne_blt_bge_bltu_bgeu[0:0] -> \U$$2.picorv32.is_beq_bne_blt_bge_bltu_bgeu.
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$6958 to $_DFFE_PP_ for $techmap\U$$2.picorv32.$0\is_sll_srl_sra[0:0] -> \U$$2.picorv32.is_sll_srl_sra.
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$6959 to $_DFFE_PP_ for $techmap\U$$2.picorv32.$0\is_sb_sh_sw[0:0] -> \U$$2.picorv32.is_sb_sh_sw.
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$6960 to $_DFFE_PP_ for $techmap\U$$2.picorv32.$0\is_jalr_addi_slti_sltiu_xori_ori_andi[0:0] -> \U$$2.picorv32.is_jalr_addi_slti_sltiu_xori_ori_andi.
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$6961 to $_DFFE_PP_ for $techmap\U$$2.picorv32.$0\is_slli_srli_srai[0:0] -> \U$$2.picorv32.is_slli_srli_srai.
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$6962 to $_DFFE_PP_ for $techmap\U$$2.picorv32.$0\is_lb_lh_lw_lbu_lhu[0:0] -> \U$$2.picorv32.is_lb_lh_lw_lbu_lhu.
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$6964 to $_DFFE_PP_ for $techmap\U$$2.picorv32.$0\compressed_instr[0:0] -> \U$$2.picorv32.compressed_instr.
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$6965 to $_DFFE_PP_ for $techmap\U$$2.picorv32.$0\decoded_imm_j[31:0] [0] -> \U$$2.picorv32.decoded_imm_j [0].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$6966 to $_DFFE_PP_ for $techmap\U$$2.picorv32.$0\decoded_imm_j[31:0] [1] -> \U$$2.picorv32.decoded_imm_j [1].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$6967 to $_DFFE_PP_ for $techmap\U$$2.picorv32.$0\decoded_imm_j[31:0] [2] -> \U$$2.picorv32.decoded_imm_j [2].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$6968 to $_DFFE_PP_ for $techmap\U$$2.picorv32.$0\decoded_imm_j[31:0] [3] -> \U$$2.picorv32.decoded_imm_j [3].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$6969 to $_DFFE_PP_ for $techmap\U$$2.picorv32.$0\decoded_imm_j[31:0] [4] -> \U$$2.picorv32.decoded_imm_j [4].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$6970 to $_DFFE_PP_ for $techmap\U$$2.picorv32.$0\decoded_imm_j[31:0] [5] -> \U$$2.picorv32.decoded_imm_j [5].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$6971 to $_DFFE_PP_ for $techmap\U$$2.picorv32.$0\decoded_imm_j[31:0] [6] -> \U$$2.picorv32.decoded_imm_j [6].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$6972 to $_DFFE_PP_ for $techmap\U$$2.picorv32.$0\decoded_imm_j[31:0] [7] -> \U$$2.picorv32.decoded_imm_j [7].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$6973 to $_DFFE_PP_ for $techmap\U$$2.picorv32.$0\decoded_imm_j[31:0] [8] -> \U$$2.picorv32.decoded_imm_j [8].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$6974 to $_DFFE_PP_ for $techmap\U$$2.picorv32.$0\decoded_imm_j[31:0] [9] -> \U$$2.picorv32.decoded_imm_j [9].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$6975 to $_DFFE_PP_ for $techmap\U$$2.picorv32.$0\decoded_imm_j[31:0] [10] -> \U$$2.picorv32.decoded_imm_j [10].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$6976 to $_DFFE_PP_ for $techmap\U$$2.picorv32.$0\decoded_imm_j[31:0] [11] -> \U$$2.picorv32.decoded_imm_j [11].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$6977 to $_DFFE_PP_ for $techmap\U$$2.picorv32.$0\decoded_imm_j[31:0] [12] -> \U$$2.picorv32.decoded_imm_j [12].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$6978 to $_DFFE_PP_ for $techmap\U$$2.picorv32.$0\decoded_imm_j[31:0] [13] -> \U$$2.picorv32.decoded_imm_j [13].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$6979 to $_DFFE_PP_ for $techmap\U$$2.picorv32.$0\decoded_imm_j[31:0] [14] -> \U$$2.picorv32.decoded_imm_j [14].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$6980 to $_DFFE_PP_ for $techmap\U$$2.picorv32.$0\decoded_imm_j[31:0] [15] -> \U$$2.picorv32.decoded_imm_j [15].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$6981 to $_DFFE_PP_ for $techmap\U$$2.picorv32.$0\decoded_imm_j[31:0] [16] -> \U$$2.picorv32.decoded_imm_j [16].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$6982 to $_DFFE_PP_ for $techmap\U$$2.picorv32.$0\decoded_imm_j[31:0] [17] -> \U$$2.picorv32.decoded_imm_j [17].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$6983 to $_DFFE_PP_ for $techmap\U$$2.picorv32.$0\decoded_imm_j[31:0] [18] -> \U$$2.picorv32.decoded_imm_j [18].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$6984 to $_DFFE_PP_ for $techmap\U$$2.picorv32.$0\decoded_imm_j[31:0] [19] -> \U$$2.picorv32.decoded_imm_j [19].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$6985 to $_DFFE_PP_ for $techmap\U$$2.picorv32.$0\decoded_imm_j[31:0] [20] -> \U$$2.picorv32.decoded_imm_j [20].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$6986 to $_DFFE_PP_ for $techmap\U$$2.picorv32.$0\decoded_imm_j[31:0] [21] -> \U$$2.picorv32.decoded_imm_j [21].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$6987 to $_DFFE_PP_ for $techmap\U$$2.picorv32.$0\decoded_imm_j[31:0] [22] -> \U$$2.picorv32.decoded_imm_j [22].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$6988 to $_DFFE_PP_ for $techmap\U$$2.picorv32.$0\decoded_imm_j[31:0] [23] -> \U$$2.picorv32.decoded_imm_j [23].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$6989 to $_DFFE_PP_ for $techmap\U$$2.picorv32.$0\decoded_imm_j[31:0] [24] -> \U$$2.picorv32.decoded_imm_j [24].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$6990 to $_DFFE_PP_ for $techmap\U$$2.picorv32.$0\decoded_imm_j[31:0] [25] -> \U$$2.picorv32.decoded_imm_j [25].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$6991 to $_DFFE_PP_ for $techmap\U$$2.picorv32.$0\decoded_imm_j[31:0] [26] -> \U$$2.picorv32.decoded_imm_j [26].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$6992 to $_DFFE_PP_ for $techmap\U$$2.picorv32.$0\decoded_imm_j[31:0] [27] -> \U$$2.picorv32.decoded_imm_j [27].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$6993 to $_DFFE_PP_ for $techmap\U$$2.picorv32.$0\decoded_imm_j[31:0] [28] -> \U$$2.picorv32.decoded_imm_j [28].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$6994 to $_DFFE_PP_ for $techmap\U$$2.picorv32.$0\decoded_imm_j[31:0] [29] -> \U$$2.picorv32.decoded_imm_j [29].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$6995 to $_DFFE_PP_ for $techmap\U$$2.picorv32.$0\decoded_imm_j[31:0] [30] -> \U$$2.picorv32.decoded_imm_j [30].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$6996 to $_DFFE_PP_ for $techmap\U$$2.picorv32.$0\decoded_imm_j[31:0] [31] -> \U$$2.picorv32.decoded_imm_j [31].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$6997 to $_DFFE_PP_ for $techmap\U$$2.picorv32.$0\decoded_imm[31:0] [0] -> \U$$2.picorv32.decoded_imm [0].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$6998 to $_DFFE_PP_ for $techmap\U$$2.picorv32.$0\decoded_imm[31:0] [1] -> \U$$2.picorv32.decoded_imm [1].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$6999 to $_DFFE_PP_ for $techmap\U$$2.picorv32.$0\decoded_imm[31:0] [2] -> \U$$2.picorv32.decoded_imm [2].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$7000 to $_DFFE_PP_ for $techmap\U$$2.picorv32.$0\decoded_imm[31:0] [3] -> \U$$2.picorv32.decoded_imm [3].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$7001 to $_DFFE_PP_ for $techmap\U$$2.picorv32.$0\decoded_imm[31:0] [4] -> \U$$2.picorv32.decoded_imm [4].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$7002 to $_DFFE_PP_ for $techmap\U$$2.picorv32.$0\decoded_imm[31:0] [5] -> \U$$2.picorv32.decoded_imm [5].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$7003 to $_DFFE_PP_ for $techmap\U$$2.picorv32.$0\decoded_imm[31:0] [6] -> \U$$2.picorv32.decoded_imm [6].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$7004 to $_DFFE_PP_ for $techmap\U$$2.picorv32.$0\decoded_imm[31:0] [7] -> \U$$2.picorv32.decoded_imm [7].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$7005 to $_DFFE_PP_ for $techmap\U$$2.picorv32.$0\decoded_imm[31:0] [8] -> \U$$2.picorv32.decoded_imm [8].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$7006 to $_DFFE_PP_ for $techmap\U$$2.picorv32.$0\decoded_imm[31:0] [9] -> \U$$2.picorv32.decoded_imm [9].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$7007 to $_DFFE_PP_ for $techmap\U$$2.picorv32.$0\decoded_imm[31:0] [10] -> \U$$2.picorv32.decoded_imm [10].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$7008 to $_DFFE_PP_ for $techmap\U$$2.picorv32.$0\decoded_imm[31:0] [11] -> \U$$2.picorv32.decoded_imm [11].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$7009 to $_DFFE_PP_ for $techmap\U$$2.picorv32.$0\decoded_imm[31:0] [12] -> \U$$2.picorv32.decoded_imm [12].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$7010 to $_DFFE_PP_ for $techmap\U$$2.picorv32.$0\decoded_imm[31:0] [13] -> \U$$2.picorv32.decoded_imm [13].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$7011 to $_DFFE_PP_ for $techmap\U$$2.picorv32.$0\decoded_imm[31:0] [14] -> \U$$2.picorv32.decoded_imm [14].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$7012 to $_DFFE_PP_ for $techmap\U$$2.picorv32.$0\decoded_imm[31:0] [15] -> \U$$2.picorv32.decoded_imm [15].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$7013 to $_DFFE_PP_ for $techmap\U$$2.picorv32.$0\decoded_imm[31:0] [16] -> \U$$2.picorv32.decoded_imm [16].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$7014 to $_DFFE_PP_ for $techmap\U$$2.picorv32.$0\decoded_imm[31:0] [17] -> \U$$2.picorv32.decoded_imm [17].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$7015 to $_DFFE_PP_ for $techmap\U$$2.picorv32.$0\decoded_imm[31:0] [18] -> \U$$2.picorv32.decoded_imm [18].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$7016 to $_DFFE_PP_ for $techmap\U$$2.picorv32.$0\decoded_imm[31:0] [19] -> \U$$2.picorv32.decoded_imm [19].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$7017 to $_DFFE_PP_ for $techmap\U$$2.picorv32.$0\decoded_imm[31:0] [20] -> \U$$2.picorv32.decoded_imm [20].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$7018 to $_DFFE_PP_ for $techmap\U$$2.picorv32.$0\decoded_imm[31:0] [21] -> \U$$2.picorv32.decoded_imm [21].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$7019 to $_DFFE_PP_ for $techmap\U$$2.picorv32.$0\decoded_imm[31:0] [22] -> \U$$2.picorv32.decoded_imm [22].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$7020 to $_DFFE_PP_ for $techmap\U$$2.picorv32.$0\decoded_imm[31:0] [23] -> \U$$2.picorv32.decoded_imm [23].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$7021 to $_DFFE_PP_ for $techmap\U$$2.picorv32.$0\decoded_imm[31:0] [24] -> \U$$2.picorv32.decoded_imm [24].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$7022 to $_DFFE_PP_ for $techmap\U$$2.picorv32.$0\decoded_imm[31:0] [25] -> \U$$2.picorv32.decoded_imm [25].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$7023 to $_DFFE_PP_ for $techmap\U$$2.picorv32.$0\decoded_imm[31:0] [26] -> \U$$2.picorv32.decoded_imm [26].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$7024 to $_DFFE_PP_ for $techmap\U$$2.picorv32.$0\decoded_imm[31:0] [27] -> \U$$2.picorv32.decoded_imm [27].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$7025 to $_DFFE_PP_ for $techmap\U$$2.picorv32.$0\decoded_imm[31:0] [28] -> \U$$2.picorv32.decoded_imm [28].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$7026 to $_DFFE_PP_ for $techmap\U$$2.picorv32.$0\decoded_imm[31:0] [29] -> \U$$2.picorv32.decoded_imm [29].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$7027 to $_DFFE_PP_ for $techmap\U$$2.picorv32.$0\decoded_imm[31:0] [30] -> \U$$2.picorv32.decoded_imm [30].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$7028 to $_DFFE_PP_ for $techmap\U$$2.picorv32.$0\decoded_imm[31:0] [31] -> \U$$2.picorv32.decoded_imm [31].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$7039 to $_DFFE_PP_ for $techmap\U$$2.picorv32.$0\decoded_rd[4:0] [0] -> \U$$2.picorv32.decoded_rd [0].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$7040 to $_DFFE_PP_ for $techmap\U$$2.picorv32.$0\decoded_rd[4:0] [1] -> \U$$2.picorv32.decoded_rd [1].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$7041 to $_DFFE_PP_ for $techmap\U$$2.picorv32.$0\decoded_rd[4:0] [2] -> \U$$2.picorv32.decoded_rd [2].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$7042 to $_DFFE_PP_ for $techmap\U$$2.picorv32.$0\decoded_rd[4:0] [3] -> \U$$2.picorv32.decoded_rd [3].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$7043 to $_DFFE_PP_ for $techmap\U$$2.picorv32.$0\decoded_rd[4:0] [4] -> \U$$2.picorv32.decoded_rd [4].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$7046 to $_DFFE_PP_ for $techmap\U$$2.picorv32.$0\instr_ecall_ebreak[0:0] -> \U$$2.picorv32.instr_ecall_ebreak.
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$7048 to $_DFFE_PP_ for $techmap\U$$2.picorv32.$0\instr_and[0:0] -> \U$$2.picorv32.instr_and.
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$7049 to $_DFFE_PP_ for $techmap\U$$2.picorv32.$0\instr_or[0:0] -> \U$$2.picorv32.instr_or.
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$7050 to $_DFFE_PP_ for $techmap\U$$2.picorv32.$0\instr_sra[0:0] -> \U$$2.picorv32.instr_sra.
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$7051 to $_DFFE_PP_ for $techmap\U$$2.picorv32.$0\instr_srl[0:0] -> \U$$2.picorv32.instr_srl.
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$7052 to $_DFFE_PP_ for $techmap\U$$2.picorv32.$0\instr_xor[0:0] -> \U$$2.picorv32.instr_xor.
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$7053 to $_DFFE_PP_ for $techmap\U$$2.picorv32.$0\instr_sltu[0:0] -> \U$$2.picorv32.instr_sltu.
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$7054 to $_DFFE_PP_ for $techmap\U$$2.picorv32.$0\instr_slt[0:0] -> \U$$2.picorv32.instr_slt.
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$7055 to $_DFFE_PP_ for $techmap\U$$2.picorv32.$0\instr_sll[0:0] -> \U$$2.picorv32.instr_sll.
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$7056 to $_DFFE_PP_ for $techmap\U$$2.picorv32.$0\instr_sub[0:0] -> \U$$2.picorv32.instr_sub.
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$7057 to $_DFFE_PP_ for $techmap\U$$2.picorv32.$0\instr_add[0:0] -> \U$$2.picorv32.instr_add.
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$7058 to $_DFFE_PP_ for $techmap\U$$2.picorv32.$0\instr_srai[0:0] -> \U$$2.picorv32.instr_srai.
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$7059 to $_DFFE_PP_ for $techmap\U$$2.picorv32.$0\instr_srli[0:0] -> \U$$2.picorv32.instr_srli.
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$7060 to $_DFFE_PP_ for $techmap\U$$2.picorv32.$0\instr_slli[0:0] -> \U$$2.picorv32.instr_slli.
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$7061 to $_DFFE_PP_ for $techmap\U$$2.picorv32.$0\instr_andi[0:0] -> \U$$2.picorv32.instr_andi.
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$7062 to $_DFFE_PP_ for $techmap\U$$2.picorv32.$0\instr_ori[0:0] -> \U$$2.picorv32.instr_ori.
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$7063 to $_DFFE_PP_ for $techmap\U$$2.picorv32.$0\instr_xori[0:0] -> \U$$2.picorv32.instr_xori.
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$7064 to $_DFFE_PP_ for $techmap\U$$2.picorv32.$0\instr_sltiu[0:0] -> \U$$2.picorv32.instr_sltiu.
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$7065 to $_DFFE_PP_ for $techmap\U$$2.picorv32.$0\instr_slti[0:0] -> \U$$2.picorv32.instr_slti.
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$7066 to $_DFFE_PP_ for $techmap\U$$2.picorv32.$0\instr_addi[0:0] -> \U$$2.picorv32.instr_addi.
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$7067 to $_DFFE_PP_ for $techmap\U$$2.picorv32.$0\instr_sw[0:0] -> \U$$2.picorv32.instr_sw.
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$7068 to $_DFFE_PP_ for $techmap\U$$2.picorv32.$0\instr_sh[0:0] -> \U$$2.picorv32.instr_sh.
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$7069 to $_DFFE_PP_ for $techmap\U$$2.picorv32.$0\instr_sb[0:0] -> \U$$2.picorv32.instr_sb.
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$7070 to $_DFFE_PP_ for $techmap\U$$2.picorv32.$0\instr_lhu[0:0] -> \U$$2.picorv32.instr_lhu.
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$7071 to $_DFFE_PP_ for $techmap\U$$2.picorv32.$0\instr_lbu[0:0] -> \U$$2.picorv32.instr_lbu.
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$7072 to $_DFFE_PP_ for $techmap\U$$2.picorv32.$0\instr_lw[0:0] -> \U$$2.picorv32.instr_lw.
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$7073 to $_DFFE_PP_ for $techmap\U$$2.picorv32.$0\instr_lh[0:0] -> \U$$2.picorv32.instr_lh.
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$7074 to $_DFFE_PP_ for $techmap\U$$2.picorv32.$0\instr_lb[0:0] -> \U$$2.picorv32.instr_lb.
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$7075 to $_DFFE_PP_ for $techmap\U$$2.picorv32.$0\instr_bgeu[0:0] -> \U$$2.picorv32.instr_bgeu.
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$7076 to $_DFFE_PP_ for $techmap\U$$2.picorv32.$0\instr_bltu[0:0] -> \U$$2.picorv32.instr_bltu.
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$7077 to $_DFFE_PP_ for $techmap\U$$2.picorv32.$0\instr_bge[0:0] -> \U$$2.picorv32.instr_bge.
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$7078 to $_DFFE_PP_ for $techmap\U$$2.picorv32.$0\instr_blt[0:0] -> \U$$2.picorv32.instr_blt.
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$7079 to $_DFFE_PP_ for $techmap\U$$2.picorv32.$0\instr_bne[0:0] -> \U$$2.picorv32.instr_bne.
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$7080 to $_DFFE_PP_ for $techmap\U$$2.picorv32.$0\instr_beq[0:0] -> \U$$2.picorv32.instr_beq.
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$7081 to $_DFFE_PP_ for $techmap\U$$2.picorv32.$0\instr_jalr[0:0] -> \U$$2.picorv32.instr_jalr.
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$7082 to $_DFFE_PP_ for $techmap\U$$2.picorv32.$0\instr_jal[0:0] -> \U$$2.picorv32.instr_jal.
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$7083 to $_DFFE_PP_ for $techmap\U$$2.picorv32.$0\instr_auipc[0:0] -> \U$$2.picorv32.instr_auipc.
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$7084 to $_DFFE_PP_ for $techmap\U$$2.picorv32.$0\instr_lui[0:0] -> \U$$2.picorv32.instr_lui.
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$7085 to $_DFFE_PP_ for $techmap\U$$2.picorv32.$0\pcpi_insn[31:0] [0] -> \U$$2.picorv32.pcpi_insn [0].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$7086 to $_DFFE_PP_ for $techmap\U$$2.picorv32.$0\pcpi_insn[31:0] [1] -> \U$$2.picorv32.pcpi_insn [1].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$7087 to $_DFFE_PP_ for $techmap\U$$2.picorv32.$0\pcpi_insn[31:0] [2] -> \U$$2.picorv32.pcpi_insn [2].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$7088 to $_DFFE_PP_ for $techmap\U$$2.picorv32.$0\pcpi_insn[31:0] [3] -> \U$$2.picorv32.pcpi_insn [3].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$7089 to $_DFFE_PP_ for $techmap\U$$2.picorv32.$0\pcpi_insn[31:0] [4] -> \U$$2.picorv32.pcpi_insn [4].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$7090 to $_DFFE_PP_ for $techmap\U$$2.picorv32.$0\pcpi_insn[31:0] [5] -> \U$$2.picorv32.pcpi_insn [5].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$7091 to $_DFFE_PP_ for $techmap\U$$2.picorv32.$0\pcpi_insn[31:0] [6] -> \U$$2.picorv32.pcpi_insn [6].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$7097 to $_DFFE_PP_ for $techmap\U$$2.picorv32.$0\pcpi_insn[31:0] [12] -> \U$$2.picorv32.pcpi_insn [12].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$7098 to $_DFFE_PP_ for $techmap\U$$2.picorv32.$0\pcpi_insn[31:0] [13] -> \U$$2.picorv32.pcpi_insn [13].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$7099 to $_DFFE_PP_ for $techmap\U$$2.picorv32.$0\pcpi_insn[31:0] [14] -> \U$$2.picorv32.pcpi_insn [14].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$7110 to $_DFFE_PP_ for $techmap\U$$2.picorv32.$0\pcpi_insn[31:0] [25] -> \U$$2.picorv32.pcpi_insn [25].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$7111 to $_DFFE_PP_ for $techmap\U$$2.picorv32.$0\pcpi_insn[31:0] [26] -> \U$$2.picorv32.pcpi_insn [26].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$7112 to $_DFFE_PP_ for $techmap\U$$2.picorv32.$0\pcpi_insn[31:0] [27] -> \U$$2.picorv32.pcpi_insn [27].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$7113 to $_DFFE_PP_ for $techmap\U$$2.picorv32.$0\pcpi_insn[31:0] [28] -> \U$$2.picorv32.pcpi_insn [28].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$7114 to $_DFFE_PP_ for $techmap\U$$2.picorv32.$0\pcpi_insn[31:0] [29] -> \U$$2.picorv32.pcpi_insn [29].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$7115 to $_DFFE_PP_ for $techmap\U$$2.picorv32.$0\pcpi_insn[31:0] [30] -> \U$$2.picorv32.pcpi_insn [30].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$7116 to $_DFFE_PP_ for $techmap\U$$2.picorv32.$0\pcpi_insn[31:0] [31] -> \U$$2.picorv32.pcpi_insn [31].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$7189 to $_DFFE_PP_ for $techmap\U$$2.picorv32.$0\latched_rd[4:0] [0] -> \U$$2.picorv32.latched_rd [0].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$7190 to $_DFFE_PP_ for $techmap\U$$2.picorv32.$0\latched_rd[4:0] [1] -> \U$$2.picorv32.latched_rd [1].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$7191 to $_DFFE_PP_ for $techmap\U$$2.picorv32.$0\latched_rd[4:0] [2] -> \U$$2.picorv32.latched_rd [2].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$7192 to $_DFFE_PP_ for $techmap\U$$2.picorv32.$0\latched_rd[4:0] [3] -> \U$$2.picorv32.latched_rd [3].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$7193 to $_DFFE_PP_ for $techmap\U$$2.picorv32.$0\latched_rd[4:0] [4] -> \U$$2.picorv32.latched_rd [4].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$7194 to $_DFFE_PP_ for $techmap\U$$2.picorv32.$0\latched_is_lb[0:0] -> \U$$2.picorv32.latched_is_lb.
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$7195 to $_DFFE_PP_ for $techmap\U$$2.picorv32.$0\latched_is_lh[0:0] -> \U$$2.picorv32.latched_is_lh.
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$7196 to $_DFFE_PP_ for $techmap\U$$2.picorv32.$0\latched_compr[0:0] -> \U$$2.picorv32.latched_compr.
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$7197 to $_DFFE_PP_ for $techmap\U$$2.picorv32.$0\latched_branch[0:0] -> \U$$2.picorv32.latched_branch.
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$7198 to $_DFFE_PP_ for $techmap\U$$2.picorv32.$0\latched_stalu[0:0] -> \U$$2.picorv32.latched_stalu.
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$7199 to $_DFFE_PP_ for $techmap\U$$2.picorv32.$0\latched_store[0:0] -> \U$$2.picorv32.latched_store.
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$7200 to $_DFFE_PP_ for $auto$rtlil.cc:1906:Mux$5167 -> $auto$memory_bram.cc:960:replace_cell$5165.
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$7206 to $_DFFE_PP_ for $techmap\U$$2.picorv32.$0\mem_do_wdata[0:0] -> \U$$2.picorv32.mem_do_wdata.
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$7207 to $_DFFE_PP_ for $techmap\U$$2.picorv32.$0\mem_do_rdata[0:0] -> \U$$2.picorv32.mem_do_rdata.
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$7208 to $_DFFE_PP_ for $techmap\U$$2.picorv32.$0\mem_do_rinst[0:0] -> \U$$2.picorv32.mem_do_rinst.
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$7209 to $_DFFE_PP_ for $techmap\U$$2.picorv32.$0\mem_do_prefetch[0:0] -> \U$$2.picorv32.mem_do_prefetch.
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$7210 to $_DFFE_PP_ for $techmap\U$$2.picorv32.$0\mem_wordsize[1:0] [0] -> \U$$2.picorv32.mem_wordsize [0].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$7211 to $_DFFE_PP_ for $techmap\U$$2.picorv32.$0\mem_wordsize[1:0] [1] -> \U$$2.picorv32.mem_wordsize [1].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$7214 to $_DFFE_PP_ for $techmap\U$$2.picorv32.$0\reg_sh[4:0] [1] -> \U$$2.picorv32.reg_sh [1].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$7250 to $_DFFE_PP_ for $techmap\U$$2.picorv32.$0\reg_op2[31:0] [0] -> \U$$2.picorv32.reg_op2 [0].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$7251 to $_DFFE_PP_ for $techmap\U$$2.picorv32.$0\reg_op2[31:0] [1] -> \U$$2.picorv32.reg_op2 [1].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$7252 to $_DFFE_PP_ for $techmap\U$$2.picorv32.$0\reg_op2[31:0] [2] -> \U$$2.picorv32.reg_op2 [2].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$7253 to $_DFFE_PP_ for $techmap\U$$2.picorv32.$0\reg_op2[31:0] [3] -> \U$$2.picorv32.reg_op2 [3].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$7254 to $_DFFE_PP_ for $techmap\U$$2.picorv32.$0\reg_op2[31:0] [4] -> \U$$2.picorv32.reg_op2 [4].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$7255 to $_DFFE_PP_ for $techmap\U$$2.picorv32.$0\reg_op2[31:0] [5] -> \U$$2.picorv32.reg_op2 [5].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$7256 to $_DFFE_PP_ for $techmap\U$$2.picorv32.$0\reg_op2[31:0] [6] -> \U$$2.picorv32.reg_op2 [6].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$7257 to $_DFFE_PP_ for $techmap\U$$2.picorv32.$0\reg_op2[31:0] [7] -> \U$$2.picorv32.reg_op2 [7].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$7258 to $_DFFE_PP_ for $techmap\U$$2.picorv32.$0\reg_op2[31:0] [8] -> \U$$2.picorv32.reg_op2 [8].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$7259 to $_DFFE_PP_ for $techmap\U$$2.picorv32.$0\reg_op2[31:0] [9] -> \U$$2.picorv32.reg_op2 [9].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$7260 to $_DFFE_PP_ for $techmap\U$$2.picorv32.$0\reg_op2[31:0] [10] -> \U$$2.picorv32.reg_op2 [10].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$7261 to $_DFFE_PP_ for $techmap\U$$2.picorv32.$0\reg_op2[31:0] [11] -> \U$$2.picorv32.reg_op2 [11].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$7262 to $_DFFE_PP_ for $techmap\U$$2.picorv32.$0\reg_op2[31:0] [12] -> \U$$2.picorv32.reg_op2 [12].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$7263 to $_DFFE_PP_ for $techmap\U$$2.picorv32.$0\reg_op2[31:0] [13] -> \U$$2.picorv32.reg_op2 [13].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$7264 to $_DFFE_PP_ for $techmap\U$$2.picorv32.$0\reg_op2[31:0] [14] -> \U$$2.picorv32.reg_op2 [14].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$7265 to $_DFFE_PP_ for $techmap\U$$2.picorv32.$0\reg_op2[31:0] [15] -> \U$$2.picorv32.reg_op2 [15].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$7266 to $_DFFE_PP_ for $techmap\U$$2.picorv32.$0\reg_op2[31:0] [16] -> \U$$2.picorv32.reg_op2 [16].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$7267 to $_DFFE_PP_ for $techmap\U$$2.picorv32.$0\reg_op2[31:0] [17] -> \U$$2.picorv32.reg_op2 [17].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$7268 to $_DFFE_PP_ for $techmap\U$$2.picorv32.$0\reg_op2[31:0] [18] -> \U$$2.picorv32.reg_op2 [18].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$7269 to $_DFFE_PP_ for $techmap\U$$2.picorv32.$0\reg_op2[31:0] [19] -> \U$$2.picorv32.reg_op2 [19].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$7270 to $_DFFE_PP_ for $techmap\U$$2.picorv32.$0\reg_op2[31:0] [20] -> \U$$2.picorv32.reg_op2 [20].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$7271 to $_DFFE_PP_ for $techmap\U$$2.picorv32.$0\reg_op2[31:0] [21] -> \U$$2.picorv32.reg_op2 [21].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$7272 to $_DFFE_PP_ for $techmap\U$$2.picorv32.$0\reg_op2[31:0] [22] -> \U$$2.picorv32.reg_op2 [22].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$7273 to $_DFFE_PP_ for $techmap\U$$2.picorv32.$0\reg_op2[31:0] [23] -> \U$$2.picorv32.reg_op2 [23].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$7274 to $_DFFE_PP_ for $techmap\U$$2.picorv32.$0\reg_op2[31:0] [24] -> \U$$2.picorv32.reg_op2 [24].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$7275 to $_DFFE_PP_ for $techmap\U$$2.picorv32.$0\reg_op2[31:0] [25] -> \U$$2.picorv32.reg_op2 [25].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$7276 to $_DFFE_PP_ for $techmap\U$$2.picorv32.$0\reg_op2[31:0] [26] -> \U$$2.picorv32.reg_op2 [26].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$7277 to $_DFFE_PP_ for $techmap\U$$2.picorv32.$0\reg_op2[31:0] [27] -> \U$$2.picorv32.reg_op2 [27].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$7278 to $_DFFE_PP_ for $techmap\U$$2.picorv32.$0\reg_op2[31:0] [28] -> \U$$2.picorv32.reg_op2 [28].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$7279 to $_DFFE_PP_ for $techmap\U$$2.picorv32.$0\reg_op2[31:0] [29] -> \U$$2.picorv32.reg_op2 [29].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$7280 to $_DFFE_PP_ for $techmap\U$$2.picorv32.$0\reg_op2[31:0] [30] -> \U$$2.picorv32.reg_op2 [30].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$7281 to $_DFFE_PP_ for $techmap\U$$2.picorv32.$0\reg_op2[31:0] [31] -> \U$$2.picorv32.reg_op2 [31].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$7282 to $_DFFE_PP_ for $techmap\U$$2.picorv32.$0\reg_op1[31:0] [0] -> \U$$2.picorv32.reg_op1 [0].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$7283 to $_DFFE_PP_ for $techmap\U$$2.picorv32.$0\reg_op1[31:0] [1] -> \U$$2.picorv32.reg_op1 [1].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$7284 to $_DFFE_PP_ for $techmap\U$$2.picorv32.$0\reg_op1[31:0] [2] -> \U$$2.picorv32.reg_op1 [2].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$7285 to $_DFFE_PP_ for $techmap\U$$2.picorv32.$0\reg_op1[31:0] [3] -> \U$$2.picorv32.reg_op1 [3].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$7286 to $_DFFE_PP_ for $techmap\U$$2.picorv32.$0\reg_op1[31:0] [4] -> \U$$2.picorv32.reg_op1 [4].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$7287 to $_DFFE_PP_ for $techmap\U$$2.picorv32.$0\reg_op1[31:0] [5] -> \U$$2.picorv32.reg_op1 [5].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$7288 to $_DFFE_PP_ for $techmap\U$$2.picorv32.$0\reg_op1[31:0] [6] -> \U$$2.picorv32.reg_op1 [6].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$7289 to $_DFFE_PP_ for $techmap\U$$2.picorv32.$0\reg_op1[31:0] [7] -> \U$$2.picorv32.reg_op1 [7].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$7290 to $_DFFE_PP_ for $techmap\U$$2.picorv32.$0\reg_op1[31:0] [8] -> \U$$2.picorv32.reg_op1 [8].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$7291 to $_DFFE_PP_ for $techmap\U$$2.picorv32.$0\reg_op1[31:0] [9] -> \U$$2.picorv32.reg_op1 [9].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$7292 to $_DFFE_PP_ for $techmap\U$$2.picorv32.$0\reg_op1[31:0] [10] -> \U$$2.picorv32.reg_op1 [10].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$7293 to $_DFFE_PP_ for $techmap\U$$2.picorv32.$0\reg_op1[31:0] [11] -> \U$$2.picorv32.reg_op1 [11].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$7294 to $_DFFE_PP_ for $techmap\U$$2.picorv32.$0\reg_op1[31:0] [12] -> \U$$2.picorv32.reg_op1 [12].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$7295 to $_DFFE_PP_ for $techmap\U$$2.picorv32.$0\reg_op1[31:0] [13] -> \U$$2.picorv32.reg_op1 [13].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$7296 to $_DFFE_PP_ for $techmap\U$$2.picorv32.$0\reg_op1[31:0] [14] -> \U$$2.picorv32.reg_op1 [14].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$7297 to $_DFFE_PP_ for $techmap\U$$2.picorv32.$0\reg_op1[31:0] [15] -> \U$$2.picorv32.reg_op1 [15].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$7298 to $_DFFE_PP_ for $techmap\U$$2.picorv32.$0\reg_op1[31:0] [16] -> \U$$2.picorv32.reg_op1 [16].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$7299 to $_DFFE_PP_ for $techmap\U$$2.picorv32.$0\reg_op1[31:0] [17] -> \U$$2.picorv32.reg_op1 [17].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$7300 to $_DFFE_PP_ for $techmap\U$$2.picorv32.$0\reg_op1[31:0] [18] -> \U$$2.picorv32.reg_op1 [18].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$7301 to $_DFFE_PP_ for $techmap\U$$2.picorv32.$0\reg_op1[31:0] [19] -> \U$$2.picorv32.reg_op1 [19].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$7302 to $_DFFE_PP_ for $techmap\U$$2.picorv32.$0\reg_op1[31:0] [20] -> \U$$2.picorv32.reg_op1 [20].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$7303 to $_DFFE_PP_ for $techmap\U$$2.picorv32.$0\reg_op1[31:0] [21] -> \U$$2.picorv32.reg_op1 [21].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$7304 to $_DFFE_PP_ for $techmap\U$$2.picorv32.$0\reg_op1[31:0] [22] -> \U$$2.picorv32.reg_op1 [22].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$7305 to $_DFFE_PP_ for $techmap\U$$2.picorv32.$0\reg_op1[31:0] [23] -> \U$$2.picorv32.reg_op1 [23].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$7306 to $_DFFE_PP_ for $techmap\U$$2.picorv32.$0\reg_op1[31:0] [24] -> \U$$2.picorv32.reg_op1 [24].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$7307 to $_DFFE_PP_ for $techmap\U$$2.picorv32.$0\reg_op1[31:0] [25] -> \U$$2.picorv32.reg_op1 [25].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$7308 to $_DFFE_PP_ for $techmap\U$$2.picorv32.$0\reg_op1[31:0] [26] -> \U$$2.picorv32.reg_op1 [26].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$7309 to $_DFFE_PP_ for $techmap\U$$2.picorv32.$0\reg_op1[31:0] [27] -> \U$$2.picorv32.reg_op1 [27].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$7310 to $_DFFE_PP_ for $techmap\U$$2.picorv32.$0\reg_op1[31:0] [28] -> \U$$2.picorv32.reg_op1 [28].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$7311 to $_DFFE_PP_ for $techmap\U$$2.picorv32.$0\reg_op1[31:0] [29] -> \U$$2.picorv32.reg_op1 [29].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$7312 to $_DFFE_PP_ for $techmap\U$$2.picorv32.$0\reg_op1[31:0] [30] -> \U$$2.picorv32.reg_op1 [30].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$7313 to $_DFFE_PP_ for $techmap\U$$2.picorv32.$0\reg_op1[31:0] [31] -> \U$$2.picorv32.reg_op1 [31].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$7315 to $_DFFE_PP_ for $techmap\U$$2.picorv32.$0\reg_next_pc[31:0] [1] -> \U$$2.picorv32.reg_next_pc [1].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$7316 to $_DFFE_PP_ for $techmap\U$$2.picorv32.$0\reg_next_pc[31:0] [2] -> \U$$2.picorv32.reg_next_pc [2].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$7317 to $_DFFE_PP_ for $techmap\U$$2.picorv32.$0\reg_next_pc[31:0] [3] -> \U$$2.picorv32.reg_next_pc [3].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$7318 to $_DFFE_PP_ for $techmap\U$$2.picorv32.$0\reg_next_pc[31:0] [4] -> \U$$2.picorv32.reg_next_pc [4].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$7319 to $_DFFE_PP_ for $techmap\U$$2.picorv32.$0\reg_next_pc[31:0] [5] -> \U$$2.picorv32.reg_next_pc [5].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$7320 to $_DFFE_PP_ for $techmap\U$$2.picorv32.$0\reg_next_pc[31:0] [6] -> \U$$2.picorv32.reg_next_pc [6].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$7321 to $_DFFE_PP_ for $techmap\U$$2.picorv32.$0\reg_next_pc[31:0] [7] -> \U$$2.picorv32.reg_next_pc [7].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$7322 to $_DFFE_PP_ for $techmap\U$$2.picorv32.$0\reg_next_pc[31:0] [8] -> \U$$2.picorv32.reg_next_pc [8].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$7323 to $_DFFE_PP_ for $techmap\U$$2.picorv32.$0\reg_next_pc[31:0] [9] -> \U$$2.picorv32.reg_next_pc [9].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$7324 to $_DFFE_PP_ for $techmap\U$$2.picorv32.$0\reg_next_pc[31:0] [10] -> \U$$2.picorv32.reg_next_pc [10].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$7325 to $_DFFE_PP_ for $techmap\U$$2.picorv32.$0\reg_next_pc[31:0] [11] -> \U$$2.picorv32.reg_next_pc [11].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$7326 to $_DFFE_PP_ for $techmap\U$$2.picorv32.$0\reg_next_pc[31:0] [12] -> \U$$2.picorv32.reg_next_pc [12].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$7327 to $_DFFE_PP_ for $techmap\U$$2.picorv32.$0\reg_next_pc[31:0] [13] -> \U$$2.picorv32.reg_next_pc [13].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$7328 to $_DFFE_PP_ for $techmap\U$$2.picorv32.$0\reg_next_pc[31:0] [14] -> \U$$2.picorv32.reg_next_pc [14].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$7329 to $_DFFE_PP_ for $techmap\U$$2.picorv32.$0\reg_next_pc[31:0] [15] -> \U$$2.picorv32.reg_next_pc [15].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$7330 to $_DFFE_PP_ for $techmap\U$$2.picorv32.$0\reg_next_pc[31:0] [16] -> \U$$2.picorv32.reg_next_pc [16].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$7331 to $_DFFE_PP_ for $techmap\U$$2.picorv32.$0\reg_next_pc[31:0] [17] -> \U$$2.picorv32.reg_next_pc [17].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$7332 to $_DFFE_PP_ for $techmap\U$$2.picorv32.$0\reg_next_pc[31:0] [18] -> \U$$2.picorv32.reg_next_pc [18].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$7333 to $_DFFE_PP_ for $techmap\U$$2.picorv32.$0\reg_next_pc[31:0] [19] -> \U$$2.picorv32.reg_next_pc [19].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$7334 to $_DFFE_PP_ for $techmap\U$$2.picorv32.$0\reg_next_pc[31:0] [20] -> \U$$2.picorv32.reg_next_pc [20].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$7335 to $_DFFE_PP_ for $techmap\U$$2.picorv32.$0\reg_next_pc[31:0] [21] -> \U$$2.picorv32.reg_next_pc [21].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$7336 to $_DFFE_PP_ for $techmap\U$$2.picorv32.$0\reg_next_pc[31:0] [22] -> \U$$2.picorv32.reg_next_pc [22].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$7337 to $_DFFE_PP_ for $techmap\U$$2.picorv32.$0\reg_next_pc[31:0] [23] -> \U$$2.picorv32.reg_next_pc [23].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$7338 to $_DFFE_PP_ for $techmap\U$$2.picorv32.$0\reg_next_pc[31:0] [24] -> \U$$2.picorv32.reg_next_pc [24].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$7339 to $_DFFE_PP_ for $techmap\U$$2.picorv32.$0\reg_next_pc[31:0] [25] -> \U$$2.picorv32.reg_next_pc [25].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$7340 to $_DFFE_PP_ for $techmap\U$$2.picorv32.$0\reg_next_pc[31:0] [26] -> \U$$2.picorv32.reg_next_pc [26].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$7341 to $_DFFE_PP_ for $techmap\U$$2.picorv32.$0\reg_next_pc[31:0] [27] -> \U$$2.picorv32.reg_next_pc [27].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$7342 to $_DFFE_PP_ for $techmap\U$$2.picorv32.$0\reg_next_pc[31:0] [28] -> \U$$2.picorv32.reg_next_pc [28].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$7343 to $_DFFE_PP_ for $techmap\U$$2.picorv32.$0\reg_next_pc[31:0] [29] -> \U$$2.picorv32.reg_next_pc [29].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$7344 to $_DFFE_PP_ for $techmap\U$$2.picorv32.$0\reg_next_pc[31:0] [30] -> \U$$2.picorv32.reg_next_pc [30].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$7345 to $_DFFE_PP_ for $techmap\U$$2.picorv32.$0\reg_next_pc[31:0] [31] -> \U$$2.picorv32.reg_next_pc [31].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$7347 to $_DFFE_PP_ for $techmap\U$$2.picorv32.$0\reg_pc[31:0] [1] -> \U$$2.picorv32.reg_pc [1].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$7348 to $_DFFE_PP_ for $techmap\U$$2.picorv32.$0\reg_pc[31:0] [2] -> \U$$2.picorv32.reg_pc [2].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$7349 to $_DFFE_PP_ for $techmap\U$$2.picorv32.$0\reg_pc[31:0] [3] -> \U$$2.picorv32.reg_pc [3].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$7350 to $_DFFE_PP_ for $techmap\U$$2.picorv32.$0\reg_pc[31:0] [4] -> \U$$2.picorv32.reg_pc [4].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$7351 to $_DFFE_PP_ for $techmap\U$$2.picorv32.$0\reg_pc[31:0] [5] -> \U$$2.picorv32.reg_pc [5].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$7352 to $_DFFE_PP_ for $techmap\U$$2.picorv32.$0\reg_pc[31:0] [6] -> \U$$2.picorv32.reg_pc [6].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$7353 to $_DFFE_PP_ for $techmap\U$$2.picorv32.$0\reg_pc[31:0] [7] -> \U$$2.picorv32.reg_pc [7].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$7354 to $_DFFE_PP_ for $techmap\U$$2.picorv32.$0\reg_pc[31:0] [8] -> \U$$2.picorv32.reg_pc [8].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$7355 to $_DFFE_PP_ for $techmap\U$$2.picorv32.$0\reg_pc[31:0] [9] -> \U$$2.picorv32.reg_pc [9].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$7356 to $_DFFE_PP_ for $techmap\U$$2.picorv32.$0\reg_pc[31:0] [10] -> \U$$2.picorv32.reg_pc [10].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$7357 to $_DFFE_PP_ for $techmap\U$$2.picorv32.$0\reg_pc[31:0] [11] -> \U$$2.picorv32.reg_pc [11].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$7358 to $_DFFE_PP_ for $techmap\U$$2.picorv32.$0\reg_pc[31:0] [12] -> \U$$2.picorv32.reg_pc [12].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$7359 to $_DFFE_PP_ for $techmap\U$$2.picorv32.$0\reg_pc[31:0] [13] -> \U$$2.picorv32.reg_pc [13].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$7360 to $_DFFE_PP_ for $techmap\U$$2.picorv32.$0\reg_pc[31:0] [14] -> \U$$2.picorv32.reg_pc [14].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$7361 to $_DFFE_PP_ for $techmap\U$$2.picorv32.$0\reg_pc[31:0] [15] -> \U$$2.picorv32.reg_pc [15].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$7362 to $_DFFE_PP_ for $techmap\U$$2.picorv32.$0\reg_pc[31:0] [16] -> \U$$2.picorv32.reg_pc [16].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$7363 to $_DFFE_PP_ for $techmap\U$$2.picorv32.$0\reg_pc[31:0] [17] -> \U$$2.picorv32.reg_pc [17].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$7364 to $_DFFE_PP_ for $techmap\U$$2.picorv32.$0\reg_pc[31:0] [18] -> \U$$2.picorv32.reg_pc [18].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$7365 to $_DFFE_PP_ for $techmap\U$$2.picorv32.$0\reg_pc[31:0] [19] -> \U$$2.picorv32.reg_pc [19].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$7366 to $_DFFE_PP_ for $techmap\U$$2.picorv32.$0\reg_pc[31:0] [20] -> \U$$2.picorv32.reg_pc [20].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$7367 to $_DFFE_PP_ for $techmap\U$$2.picorv32.$0\reg_pc[31:0] [21] -> \U$$2.picorv32.reg_pc [21].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$7368 to $_DFFE_PP_ for $techmap\U$$2.picorv32.$0\reg_pc[31:0] [22] -> \U$$2.picorv32.reg_pc [22].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$7369 to $_DFFE_PP_ for $techmap\U$$2.picorv32.$0\reg_pc[31:0] [23] -> \U$$2.picorv32.reg_pc [23].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$7370 to $_DFFE_PP_ for $techmap\U$$2.picorv32.$0\reg_pc[31:0] [24] -> \U$$2.picorv32.reg_pc [24].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$7371 to $_DFFE_PP_ for $techmap\U$$2.picorv32.$0\reg_pc[31:0] [25] -> \U$$2.picorv32.reg_pc [25].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$7372 to $_DFFE_PP_ for $techmap\U$$2.picorv32.$0\reg_pc[31:0] [26] -> \U$$2.picorv32.reg_pc [26].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$7373 to $_DFFE_PP_ for $techmap\U$$2.picorv32.$0\reg_pc[31:0] [27] -> \U$$2.picorv32.reg_pc [27].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$7374 to $_DFFE_PP_ for $techmap\U$$2.picorv32.$0\reg_pc[31:0] [28] -> \U$$2.picorv32.reg_pc [28].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$7375 to $_DFFE_PP_ for $techmap\U$$2.picorv32.$0\reg_pc[31:0] [29] -> \U$$2.picorv32.reg_pc [29].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$7376 to $_DFFE_PP_ for $techmap\U$$2.picorv32.$0\reg_pc[31:0] [30] -> \U$$2.picorv32.reg_pc [30].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$7377 to $_DFFE_PP_ for $techmap\U$$2.picorv32.$0\reg_pc[31:0] [31] -> \U$$2.picorv32.reg_pc [31].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$7378 to $_DFFE_PP_ for $techmap\U$$2.picorv32.$0\pcpi_valid[0:0] -> \U$$2.picorv32.pcpi_valid.
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$8706 to $_DFFE_PP_ for $auto$rtlil.cc:1906:Mux$5141 -> $auto$memory_bram.cc:960:replace_cell$5139.
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$8739 to $_DFFE_PP_ for $auto$rtlil.cc:1906:Mux$5128 -> $auto$memory_bram.cc:960:replace_cell$5126.
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$9293 to $_DFFE_PP_ for $auto$rtlil.cc:1906:Mux$5115 -> $auto$memory_bram.cc:960:replace_cell$5113.

3.34. Executing TECHMAP pass (map to technology primitives).

3.34.1. Executing Verilog-2005 frontend: /usr/local/bin/../share/yosys/ice40/cells_map.v
Parsing Verilog input from `/usr/local/bin/../share/yosys/ice40/cells_map.v' to AST representation.
Generating RTLIL representation for module `\$_DFF_N_'.
Generating RTLIL representation for module `\$_DFF_P_'.
Generating RTLIL representation for module `\$_DFFE_NN_'.
Generating RTLIL representation for module `\$_DFFE_PN_'.
Generating RTLIL representation for module `\$_DFFE_NP_'.
Generating RTLIL representation for module `\$_DFFE_PP_'.
Generating RTLIL representation for module `\$_DFF_NN0_'.
Generating RTLIL representation for module `\$_DFF_NN1_'.
Generating RTLIL representation for module `\$_DFF_PN0_'.
Generating RTLIL representation for module `\$_DFF_PN1_'.
Generating RTLIL representation for module `\$_DFF_NP0_'.
Generating RTLIL representation for module `\$_DFF_NP1_'.
Generating RTLIL representation for module `\$_DFF_PP0_'.
Generating RTLIL representation for module `\$_DFF_PP1_'.
Generating RTLIL representation for module `\$__DFFE_NN0'.
Generating RTLIL representation for module `\$__DFFE_NN1'.
Generating RTLIL representation for module `\$__DFFE_PN0'.
Generating RTLIL representation for module `\$__DFFE_PN1'.
Generating RTLIL representation for module `\$__DFFE_NP0'.
Generating RTLIL representation for module `\$__DFFE_NP1'.
Generating RTLIL representation for module `\$__DFFE_PP0'.
Generating RTLIL representation for module `\$__DFFE_PP1'.
Successfully finished Verilog frontend.

3.34.2. Continuing TECHMAP pass.
Using template \$_DFF_P_ for cells of type $_DFF_P_.
Using template \$_DFFE_PP_ for cells of type $_DFFE_PP_.
No more expansions possible.
<suppressed ~967 debug messages>

3.35. Executing OPT_EXPR pass (perform const folding).
Optimizing module top.
<suppressed ~2078 debug messages>

3.36. Executing SIMPLEMAP pass (map simple cells to gate primitives).

3.37. Executing ICE40_FFINIT pass (implement FF init values).
Handling FF init values in top.
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$5660 (SB_DFFE): \U$$2.phase_step [6] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$5662 (SB_DFFE): \U$$2.phase_step [8] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$5665 (SB_DFFE): \U$$2.phase_step [11] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$5580 (SB_DFFE): \cd_sync.timer [1] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$5581 (SB_DFFE): \cd_sync.timer [2] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$5582 (SB_DFFE): \cd_sync.timer [3] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$5583 (SB_DFFE): \cd_sync.timer [4] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$5584 (SB_DFFE): \cd_sync.timer [5] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$5585 (SB_DFFE): \cd_sync.timer [6] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$5658 (SB_DFFE): \U$$2.phase_step [4] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$5661 (SB_DFFE): \U$$2.phase_step [7] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$5652 (SB_DFFE): \U$$2.led = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$5653 (SB_DFFE): \U$$2.nco_ctrl__enable = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$5657 (SB_DFFE): \U$$2.phase_step [3] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$5655 (SB_DFFE): \U$$2.phase_step [1] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$5651 (SB_DFF): \U$$2.mem_ready = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$5659 (SB_DFFE): \U$$2.phase_step [5] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$5663 (SB_DFFE): \U$$2.phase_step [9] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$5664 (SB_DFFE): \U$$2.phase_step [10] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$5666 (SB_DFFE): \U$$2.phase_step [12] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$5667 (SB_DFFE): \U$$2.phase_step [13] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$5668 (SB_DFFE): \U$$2.phase_step [14] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$5669 (SB_DFFE): \U$$2.phase_step [15] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$5670 (SB_DFFE): \U$$2.phase_step [16] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$5671 (SB_DFFE): \U$$2.phase_step [17] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$5672 (SB_DFFE): \U$$2.phase_step [18] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$5673 (SB_DFFE): \U$$2.phase_step [19] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$5674 (SB_DFFE): \U$$2.phase_step [20] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$5675 (SB_DFFE): \U$$2.phase_step [21] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$5676 (SB_DFFE): \U$$2.phase_step [22] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$5677 (SB_DFFE): \U$$2.phase_step [23] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$5678 (SB_DFFE): \U$$2.phase_step [24] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$5679 (SB_DFFE): \U$$2.phase_step [25] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$5680 (SB_DFFE): \U$$2.phase_step [26] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$5681 (SB_DFFE): \U$$2.phase_step [27] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$5682 (SB_DFFE): \U$$2.phase_step [28] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$5683 (SB_DFFE): \U$$2.phase_step [29] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$5684 (SB_DFFE): \U$$2.phase_step [30] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$5685 (SB_DFFE): \U$$2.phase_step [31] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$6143 (SB_DFF): \U$$0.phase_acc [7] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$6138 (SB_DFF): \U$$0.phase_acc [2] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$6139 (SB_DFF): \U$$0.phase_acc [3] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$6140 (SB_DFF): \U$$0.phase_acc [4] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$6142 (SB_DFF): \U$$0.phase_acc [6] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$6137 (SB_DFF): \U$$0.phase_acc [1] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$6144 (SB_DFF): \U$$0.phase_acc [8] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$5654 (SB_DFFE): \U$$2.phase_step [0] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$6145 (SB_DFF): \U$$0.phase_acc [9] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$6146 (SB_DFF): \U$$0.phase_acc [10] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$6147 (SB_DFF): \U$$0.phase_acc [11] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$6148 (SB_DFF): \U$$0.phase_acc [12] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$6149 (SB_DFF): \U$$0.phase_acc [13] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$6150 (SB_DFF): \U$$0.phase_acc [14] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$6151 (SB_DFF): \U$$0.phase_acc [15] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$6152 (SB_DFF): \U$$0.phase_acc [16] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$6153 (SB_DFF): \U$$0.phase_acc [17] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$6154 (SB_DFF): \U$$0.phase_acc [18] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$6155 (SB_DFF): \U$$0.phase_acc [19] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$6156 (SB_DFF): \U$$0.phase_acc [20] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$6157 (SB_DFF): \U$$0.phase_acc [21] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$6158 (SB_DFF): \U$$0.phase_acc [22] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$6159 (SB_DFF): \U$$0.phase_acc [23] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$6160 (SB_DFF): \U$$0.phase_acc [24] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$6161 (SB_DFF): \U$$0.phase_acc [25] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$6162 (SB_DFF): \U$$0.phase_acc [26] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$6163 (SB_DFF): \U$$0.phase_acc [27] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$6164 (SB_DFF): \U$$0.phase_acc [28] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$6165 (SB_DFF): \U$$0.phase_acc [29] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$6166 (SB_DFF): \U$$0.phase_acc [30] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$6167 (SB_DFF): \U$$0.phase_acc [31] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$6202 (SB_DFF): \U$$1.acc [1] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$6203 (SB_DFF): \U$$1.acc [2] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$6204 (SB_DFF): \U$$1.acc [3] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$6205 (SB_DFF): \U$$1.acc [4] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$6206 (SB_DFF): \U$$1.acc [5] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$6207 (SB_DFF): \U$$1.acc [6] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$6209 (SB_DFF): \U$$1.acc [8] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$6210 (SB_DFF): \U$$1.acc [9] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$6211 (SB_DFF): \U$$1.acc [10] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$6212 (SB_DFF): \U$$1.acc [11] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$6213 (SB_DFF): \U$$1.acc [12] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$6141 (SB_DFF): \U$$0.phase_acc [5] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$6201 (SB_DFF): \U$$1.acc [0] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$6208 (SB_DFF): \U$$1.acc [7] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$6136 (SB_DFF): \U$$0.phase_acc [0] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$5586 (SB_DFFE): \cd_sync.timer [7] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$5579 (SB_DFFE): \cd_sync.timer [0] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$5656 (SB_DFFE): \U$$2.phase_step [2] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$5578 (SB_DFFE): \cd_sync.ready = 0

3.38. Executing ICE40_FFSSR pass (merge synchronous set/reset into FF cells).
Merging set/reset $_MUX_ cells into SB_FFs in top.
  Merging $auto$simplemap.cc:277:simplemap_mux$5801 (A=1'0, B=\U$$2.picorv32.mem_wdata [6], S=\cd_sync.ready) into $auto$simplemap.cc:420:simplemap_dff$5660 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$5803 (A=1'0, B=\U$$2.picorv32.mem_wdata [8], S=\cd_sync.ready) into $auto$simplemap.cc:420:simplemap_dff$5662 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$11230 (A=1'0, B=$auto$simplemap.cc:309:simplemap_lut$6591, S=$techmap\U$$2.picorv32.pcpi_mul.$logic_and$picorv32.v:2222$727_Y) into $auto$simplemap.cc:420:simplemap_dff$10917 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$11222 (A=1'0, B=$techmap\U$$2.picorv32.pcpi_mul.$procmux$4542_Y, S=$techmap\U$$2.picorv32.pcpi_mul.$logic_and$picorv32.v:2222$727_Y) into $auto$simplemap.cc:420:simplemap_dff$10918 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$5806 (A=1'0, B=\U$$2.picorv32.mem_wdata [11], S=\cd_sync.ready) into $auto$simplemap.cc:420:simplemap_dff$5665 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$11709 (A=$auto$wreduce.cc:455:run$4831 [6], B=1'0, S=\U$$2.picorv32.pcpi_mul.mul_waiting) into $auto$simplemap.cc:420:simplemap_dff$10930 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$11710 (A=1'1, B=$techmap\U$$2.picorv32.pcpi_mul.$procmux$4483_Y, S=\cd_sync.ready) into $auto$simplemap.cc:420:simplemap_dff$10923 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$11705 (A=$auto$wreduce.cc:455:run$4831 [2], B=1'1, S=\U$$2.picorv32.pcpi_mul.mul_waiting) into $auto$simplemap.cc:420:simplemap_dff$10926 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$11704 (A=$auto$simplemap.cc:309:simplemap_lut$17472 [2], B=1'1, S=\U$$2.picorv32.pcpi_mul.mul_waiting) into $auto$simplemap.cc:420:simplemap_dff$10925 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$11706 (A=$auto$wreduce.cc:455:run$4831 [3], B=1'1, S=\U$$2.picorv32.pcpi_mul.mul_waiting) into $auto$simplemap.cc:420:simplemap_dff$10927 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$11707 (A=$auto$wreduce.cc:455:run$4831 [4], B=1'1, S=\U$$2.picorv32.pcpi_mul.mul_waiting) into $auto$simplemap.cc:420:simplemap_dff$10928 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$11229 (A=1'0, B=$auto$simplemap.cc:309:simplemap_lut$10654, S=$techmap\U$$2.picorv32.pcpi_mul.$logic_and$picorv32.v:2222$727_Y) into $auto$simplemap.cc:420:simplemap_dff$10920 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$11681 (A=\U$$2.picorv32.pcpi_mul.next_rdt [3], B=1'0, S=\U$$2.picorv32.pcpi_mul.mul_waiting) into $auto$simplemap.cc:420:simplemap_dff$10935 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$11228 (A=1'0, B=$auto$simplemap.cc:309:simplemap_lut$6601, S=$techmap\U$$2.picorv32.pcpi_mul.$logic_and$picorv32.v:2222$727_Y) into $auto$simplemap.cc:420:simplemap_dff$10878 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$11703 (A=$auto$wreduce.cc:455:run$4831 [0], B=1'0, S=\U$$2.picorv32.pcpi_mul.mul_waiting) into $auto$simplemap.cc:420:simplemap_dff$10924 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$11687 (A=\U$$2.picorv32.pcpi_mul.next_rdt [27], B=1'0, S=\U$$2.picorv32.pcpi_mul.mul_waiting) into $auto$simplemap.cc:420:simplemap_dff$10959 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$11688 (A=\U$$2.picorv32.pcpi_mul.next_rdt [31], B=1'0, S=\U$$2.picorv32.pcpi_mul.mul_waiting) into $auto$simplemap.cc:420:simplemap_dff$10963 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$11683 (A=\U$$2.picorv32.pcpi_mul.next_rdt [11], B=1'0, S=\U$$2.picorv32.pcpi_mul.mul_waiting) into $auto$simplemap.cc:420:simplemap_dff$10943 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$11684 (A=\U$$2.picorv32.pcpi_mul.next_rdt [15], B=1'0, S=\U$$2.picorv32.pcpi_mul.mul_waiting) into $auto$simplemap.cc:420:simplemap_dff$10947 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$11685 (A=\U$$2.picorv32.pcpi_mul.next_rdt [19], B=1'0, S=\U$$2.picorv32.pcpi_mul.mul_waiting) into $auto$simplemap.cc:420:simplemap_dff$10951 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$11689 (A=\U$$2.picorv32.pcpi_mul.next_rdt [35], B=1'0, S=\U$$2.picorv32.pcpi_mul.mul_waiting) into $auto$simplemap.cc:420:simplemap_dff$10967 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$11686 (A=\U$$2.picorv32.pcpi_mul.next_rdt [23], B=1'0, S=\U$$2.picorv32.pcpi_mul.mul_waiting) into $auto$simplemap.cc:420:simplemap_dff$10955 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$11690 (A=\U$$2.picorv32.pcpi_mul.next_rdt [39], B=1'0, S=\U$$2.picorv32.pcpi_mul.mul_waiting) into $auto$simplemap.cc:420:simplemap_dff$10971 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$11691 (A=\U$$2.picorv32.pcpi_mul.next_rdt [43], B=1'0, S=\U$$2.picorv32.pcpi_mul.mul_waiting) into $auto$simplemap.cc:420:simplemap_dff$10975 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$11692 (A=\U$$2.picorv32.pcpi_mul.next_rdt [47], B=1'0, S=\U$$2.picorv32.pcpi_mul.mul_waiting) into $auto$simplemap.cc:420:simplemap_dff$10979 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$11693 (A=\U$$2.picorv32.pcpi_mul.next_rdt [51], B=1'0, S=\U$$2.picorv32.pcpi_mul.mul_waiting) into $auto$simplemap.cc:420:simplemap_dff$10983 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$11694 (A=\U$$2.picorv32.pcpi_mul.next_rdt [55], B=1'0, S=\U$$2.picorv32.pcpi_mul.mul_waiting) into $auto$simplemap.cc:420:simplemap_dff$10987 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$11695 (A=\U$$2.picorv32.pcpi_mul.next_rdt [59], B=1'0, S=\U$$2.picorv32.pcpi_mul.mul_waiting) into $auto$simplemap.cc:420:simplemap_dff$10991 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$11553 (A=\U$$2.picorv32.pcpi_mul.next_rd [0], B=1'0, S=\U$$2.picorv32.pcpi_mul.mul_waiting) into $auto$simplemap.cc:420:simplemap_dff$10995 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$11554 (A=\U$$2.picorv32.pcpi_mul.next_rd [1], B=1'0, S=\U$$2.picorv32.pcpi_mul.mul_waiting) into $auto$simplemap.cc:420:simplemap_dff$10996 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$11555 (A=\U$$2.picorv32.pcpi_mul.next_rd [2], B=1'0, S=\U$$2.picorv32.pcpi_mul.mul_waiting) into $auto$simplemap.cc:420:simplemap_dff$10997 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$11556 (A=\U$$2.picorv32.pcpi_mul.next_rd [3], B=1'0, S=\U$$2.picorv32.pcpi_mul.mul_waiting) into $auto$simplemap.cc:420:simplemap_dff$10998 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$11557 (A=\U$$2.picorv32.pcpi_mul.next_rd [4], B=1'0, S=\U$$2.picorv32.pcpi_mul.mul_waiting) into $auto$simplemap.cc:420:simplemap_dff$10999 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$11558 (A=\U$$2.picorv32.pcpi_mul.next_rd [5], B=1'0, S=\U$$2.picorv32.pcpi_mul.mul_waiting) into $auto$simplemap.cc:420:simplemap_dff$11000 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$11559 (A=\U$$2.picorv32.pcpi_mul.next_rd [6], B=1'0, S=\U$$2.picorv32.pcpi_mul.mul_waiting) into $auto$simplemap.cc:420:simplemap_dff$11001 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$11682 (A=\U$$2.picorv32.pcpi_mul.next_rdt [7], B=1'0, S=\U$$2.picorv32.pcpi_mul.mul_waiting) into $auto$simplemap.cc:420:simplemap_dff$10939 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$11560 (A=\U$$2.picorv32.pcpi_mul.next_rd [7], B=1'0, S=\U$$2.picorv32.pcpi_mul.mul_waiting) into $auto$simplemap.cc:420:simplemap_dff$11002 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$11562 (A=\U$$2.picorv32.pcpi_mul.next_rd [9], B=1'0, S=\U$$2.picorv32.pcpi_mul.mul_waiting) into $auto$simplemap.cc:420:simplemap_dff$11004 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$11563 (A=\U$$2.picorv32.pcpi_mul.next_rd [10], B=1'0, S=\U$$2.picorv32.pcpi_mul.mul_waiting) into $auto$simplemap.cc:420:simplemap_dff$11005 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$11564 (A=\U$$2.picorv32.pcpi_mul.next_rd [11], B=1'0, S=\U$$2.picorv32.pcpi_mul.mul_waiting) into $auto$simplemap.cc:420:simplemap_dff$11006 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$11565 (A=\U$$2.picorv32.pcpi_mul.next_rd [12], B=1'0, S=\U$$2.picorv32.pcpi_mul.mul_waiting) into $auto$simplemap.cc:420:simplemap_dff$11007 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$11566 (A=\U$$2.picorv32.pcpi_mul.next_rd [13], B=1'0, S=\U$$2.picorv32.pcpi_mul.mul_waiting) into $auto$simplemap.cc:420:simplemap_dff$11008 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$11567 (A=\U$$2.picorv32.pcpi_mul.next_rd [14], B=1'0, S=\U$$2.picorv32.pcpi_mul.mul_waiting) into $auto$simplemap.cc:420:simplemap_dff$11009 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$11568 (A=\U$$2.picorv32.pcpi_mul.next_rd [15], B=1'0, S=\U$$2.picorv32.pcpi_mul.mul_waiting) into $auto$simplemap.cc:420:simplemap_dff$11010 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$11569 (A=\U$$2.picorv32.pcpi_mul.next_rd [16], B=1'0, S=\U$$2.picorv32.pcpi_mul.mul_waiting) into $auto$simplemap.cc:420:simplemap_dff$11011 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$11570 (A=\U$$2.picorv32.pcpi_mul.next_rd [17], B=1'0, S=\U$$2.picorv32.pcpi_mul.mul_waiting) into $auto$simplemap.cc:420:simplemap_dff$11012 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$11571 (A=\U$$2.picorv32.pcpi_mul.next_rd [18], B=1'0, S=\U$$2.picorv32.pcpi_mul.mul_waiting) into $auto$simplemap.cc:420:simplemap_dff$11013 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$11572 (A=\U$$2.picorv32.pcpi_mul.next_rd [19], B=1'0, S=\U$$2.picorv32.pcpi_mul.mul_waiting) into $auto$simplemap.cc:420:simplemap_dff$11014 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$11573 (A=\U$$2.picorv32.pcpi_mul.next_rd [20], B=1'0, S=\U$$2.picorv32.pcpi_mul.mul_waiting) into $auto$simplemap.cc:420:simplemap_dff$11015 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$11574 (A=\U$$2.picorv32.pcpi_mul.next_rd [21], B=1'0, S=\U$$2.picorv32.pcpi_mul.mul_waiting) into $auto$simplemap.cc:420:simplemap_dff$11016 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$11575 (A=\U$$2.picorv32.pcpi_mul.next_rd [22], B=1'0, S=\U$$2.picorv32.pcpi_mul.mul_waiting) into $auto$simplemap.cc:420:simplemap_dff$11017 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$11576 (A=\U$$2.picorv32.pcpi_mul.next_rd [23], B=1'0, S=\U$$2.picorv32.pcpi_mul.mul_waiting) into $auto$simplemap.cc:420:simplemap_dff$11018 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$11577 (A=\U$$2.picorv32.pcpi_mul.next_rd [24], B=1'0, S=\U$$2.picorv32.pcpi_mul.mul_waiting) into $auto$simplemap.cc:420:simplemap_dff$11019 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$11578 (A=\U$$2.picorv32.pcpi_mul.next_rd [25], B=1'0, S=\U$$2.picorv32.pcpi_mul.mul_waiting) into $auto$simplemap.cc:420:simplemap_dff$11020 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$11579 (A=\U$$2.picorv32.pcpi_mul.next_rd [26], B=1'0, S=\U$$2.picorv32.pcpi_mul.mul_waiting) into $auto$simplemap.cc:420:simplemap_dff$11021 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$11580 (A=\U$$2.picorv32.pcpi_mul.next_rd [27], B=1'0, S=\U$$2.picorv32.pcpi_mul.mul_waiting) into $auto$simplemap.cc:420:simplemap_dff$11022 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$11581 (A=\U$$2.picorv32.pcpi_mul.next_rd [28], B=1'0, S=\U$$2.picorv32.pcpi_mul.mul_waiting) into $auto$simplemap.cc:420:simplemap_dff$11023 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$11582 (A=\U$$2.picorv32.pcpi_mul.next_rd [29], B=1'0, S=\U$$2.picorv32.pcpi_mul.mul_waiting) into $auto$simplemap.cc:420:simplemap_dff$11024 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$11583 (A=\U$$2.picorv32.pcpi_mul.next_rd [30], B=1'0, S=\U$$2.picorv32.pcpi_mul.mul_waiting) into $auto$simplemap.cc:420:simplemap_dff$11025 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$11584 (A=\U$$2.picorv32.pcpi_mul.next_rd [31], B=1'0, S=\U$$2.picorv32.pcpi_mul.mul_waiting) into $auto$simplemap.cc:420:simplemap_dff$11026 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$11585 (A=\U$$2.picorv32.pcpi_mul.next_rd [32], B=1'0, S=\U$$2.picorv32.pcpi_mul.mul_waiting) into $auto$simplemap.cc:420:simplemap_dff$11027 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$11586 (A=\U$$2.picorv32.pcpi_mul.next_rd [33], B=1'0, S=\U$$2.picorv32.pcpi_mul.mul_waiting) into $auto$simplemap.cc:420:simplemap_dff$11028 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$11587 (A=\U$$2.picorv32.pcpi_mul.next_rd [34], B=1'0, S=\U$$2.picorv32.pcpi_mul.mul_waiting) into $auto$simplemap.cc:420:simplemap_dff$11029 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$11588 (A=\U$$2.picorv32.pcpi_mul.next_rd [35], B=1'0, S=\U$$2.picorv32.pcpi_mul.mul_waiting) into $auto$simplemap.cc:420:simplemap_dff$11030 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$11589 (A=\U$$2.picorv32.pcpi_mul.next_rd [36], B=1'0, S=\U$$2.picorv32.pcpi_mul.mul_waiting) into $auto$simplemap.cc:420:simplemap_dff$11031 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$11590 (A=\U$$2.picorv32.pcpi_mul.next_rd [37], B=1'0, S=\U$$2.picorv32.pcpi_mul.mul_waiting) into $auto$simplemap.cc:420:simplemap_dff$11032 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$11591 (A=\U$$2.picorv32.pcpi_mul.next_rd [38], B=1'0, S=\U$$2.picorv32.pcpi_mul.mul_waiting) into $auto$simplemap.cc:420:simplemap_dff$11033 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$11592 (A=\U$$2.picorv32.pcpi_mul.next_rd [39], B=1'0, S=\U$$2.picorv32.pcpi_mul.mul_waiting) into $auto$simplemap.cc:420:simplemap_dff$11034 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$11593 (A=\U$$2.picorv32.pcpi_mul.next_rd [40], B=1'0, S=\U$$2.picorv32.pcpi_mul.mul_waiting) into $auto$simplemap.cc:420:simplemap_dff$11035 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$11594 (A=\U$$2.picorv32.pcpi_mul.next_rd [41], B=1'0, S=\U$$2.picorv32.pcpi_mul.mul_waiting) into $auto$simplemap.cc:420:simplemap_dff$11036 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$11595 (A=\U$$2.picorv32.pcpi_mul.next_rd [42], B=1'0, S=\U$$2.picorv32.pcpi_mul.mul_waiting) into $auto$simplemap.cc:420:simplemap_dff$11037 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$11596 (A=\U$$2.picorv32.pcpi_mul.next_rd [43], B=1'0, S=\U$$2.picorv32.pcpi_mul.mul_waiting) into $auto$simplemap.cc:420:simplemap_dff$11038 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$11597 (A=\U$$2.picorv32.pcpi_mul.next_rd [44], B=1'0, S=\U$$2.picorv32.pcpi_mul.mul_waiting) into $auto$simplemap.cc:420:simplemap_dff$11039 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$11598 (A=\U$$2.picorv32.pcpi_mul.next_rd [45], B=1'0, S=\U$$2.picorv32.pcpi_mul.mul_waiting) into $auto$simplemap.cc:420:simplemap_dff$11040 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$11599 (A=\U$$2.picorv32.pcpi_mul.next_rd [46], B=1'0, S=\U$$2.picorv32.pcpi_mul.mul_waiting) into $auto$simplemap.cc:420:simplemap_dff$11041 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$11600 (A=\U$$2.picorv32.pcpi_mul.next_rd [47], B=1'0, S=\U$$2.picorv32.pcpi_mul.mul_waiting) into $auto$simplemap.cc:420:simplemap_dff$11042 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$11601 (A=\U$$2.picorv32.pcpi_mul.next_rd [48], B=1'0, S=\U$$2.picorv32.pcpi_mul.mul_waiting) into $auto$simplemap.cc:420:simplemap_dff$11043 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$11602 (A=\U$$2.picorv32.pcpi_mul.next_rd [49], B=1'0, S=\U$$2.picorv32.pcpi_mul.mul_waiting) into $auto$simplemap.cc:420:simplemap_dff$11044 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$11603 (A=\U$$2.picorv32.pcpi_mul.next_rd [50], B=1'0, S=\U$$2.picorv32.pcpi_mul.mul_waiting) into $auto$simplemap.cc:420:simplemap_dff$11045 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$11604 (A=\U$$2.picorv32.pcpi_mul.next_rd [51], B=1'0, S=\U$$2.picorv32.pcpi_mul.mul_waiting) into $auto$simplemap.cc:420:simplemap_dff$11046 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$11605 (A=\U$$2.picorv32.pcpi_mul.next_rd [52], B=1'0, S=\U$$2.picorv32.pcpi_mul.mul_waiting) into $auto$simplemap.cc:420:simplemap_dff$11047 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$11606 (A=\U$$2.picorv32.pcpi_mul.next_rd [53], B=1'0, S=\U$$2.picorv32.pcpi_mul.mul_waiting) into $auto$simplemap.cc:420:simplemap_dff$11048 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$11607 (A=\U$$2.picorv32.pcpi_mul.next_rd [54], B=1'0, S=\U$$2.picorv32.pcpi_mul.mul_waiting) into $auto$simplemap.cc:420:simplemap_dff$11049 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$11608 (A=\U$$2.picorv32.pcpi_mul.next_rd [55], B=1'0, S=\U$$2.picorv32.pcpi_mul.mul_waiting) into $auto$simplemap.cc:420:simplemap_dff$11050 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$11609 (A=\U$$2.picorv32.pcpi_mul.next_rd [56], B=1'0, S=\U$$2.picorv32.pcpi_mul.mul_waiting) into $auto$simplemap.cc:420:simplemap_dff$11051 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$11610 (A=\U$$2.picorv32.pcpi_mul.next_rd [57], B=1'0, S=\U$$2.picorv32.pcpi_mul.mul_waiting) into $auto$simplemap.cc:420:simplemap_dff$11052 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$11611 (A=\U$$2.picorv32.pcpi_mul.next_rd [58], B=1'0, S=\U$$2.picorv32.pcpi_mul.mul_waiting) into $auto$simplemap.cc:420:simplemap_dff$11053 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$11612 (A=\U$$2.picorv32.pcpi_mul.next_rd [59], B=1'0, S=\U$$2.picorv32.pcpi_mul.mul_waiting) into $auto$simplemap.cc:420:simplemap_dff$11054 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$11613 (A=\U$$2.picorv32.pcpi_mul.next_rd [60], B=1'0, S=\U$$2.picorv32.pcpi_mul.mul_waiting) into $auto$simplemap.cc:420:simplemap_dff$11055 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$11614 (A=\U$$2.picorv32.pcpi_mul.next_rd [61], B=1'0, S=\U$$2.picorv32.pcpi_mul.mul_waiting) into $auto$simplemap.cc:420:simplemap_dff$11056 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$11615 (A=\U$$2.picorv32.pcpi_mul.next_rd [62], B=1'0, S=\U$$2.picorv32.pcpi_mul.mul_waiting) into $auto$simplemap.cc:420:simplemap_dff$11057 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$11616 (A=\U$$2.picorv32.pcpi_mul.next_rd [63], B=1'0, S=\U$$2.picorv32.pcpi_mul.mul_waiting) into $auto$simplemap.cc:420:simplemap_dff$11058 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$11424 (A=1'0, B=\U$$2.picorv32.reg_op2 [0], S=\U$$2.picorv32.pcpi_mul.mul_waiting) into $auto$simplemap.cc:420:simplemap_dff$11059 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$11561 (A=\U$$2.picorv32.pcpi_mul.next_rd [8], B=1'0, S=\U$$2.picorv32.pcpi_mul.mul_waiting) into $auto$simplemap.cc:420:simplemap_dff$11003 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$11358 (A=1'0, B=$techmap\U$$2.picorv32.pcpi_mul.$procmux$4517_Y [63], S=\U$$2.picorv32.pcpi_mul.mul_waiting) into $auto$simplemap.cc:420:simplemap_dff$11186 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$9276 (A=1'0, B=\U$$2.picorv32.cpu_state [0], S=\cd_sync.ready) into $auto$simplemap.cc:420:simplemap_dff$7379 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$5799 (A=1'0, B=\U$$2.picorv32.mem_wdata [4], S=\cd_sync.ready) into $auto$simplemap.cc:420:simplemap_dff$5658 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$5802 (A=1'0, B=\U$$2.picorv32.mem_wdata [7], S=\cd_sync.ready) into $auto$simplemap.cc:420:simplemap_dff$5661 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$5789 (A=1'0, B=\U$$2.picorv32.mem_wdata [0], S=\cd_sync.ready) into $auto$simplemap.cc:420:simplemap_dff$5652 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$5792 (A=1'0, B=\U$$2.picorv32.mem_wdata [0], S=\cd_sync.ready) into $auto$simplemap.cc:420:simplemap_dff$5653 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$5798 (A=1'0, B=\U$$2.picorv32.mem_wdata [3], S=\cd_sync.ready) into $auto$simplemap.cc:420:simplemap_dff$5657 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$5796 (A=1'0, B=\U$$2.picorv32.mem_wdata [1], S=\cd_sync.ready) into $auto$simplemap.cc:420:simplemap_dff$5655 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$5686 (A=1'0, B=$techmap\U$$2.$procmux$1611_Y, S=\cd_sync.ready) into $auto$simplemap.cc:420:simplemap_dff$5651 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$5800 (A=1'0, B=\U$$2.picorv32.mem_wdata [5], S=\cd_sync.ready) into $auto$simplemap.cc:420:simplemap_dff$5659 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$9452 (A=1'0, B=$techmap\U$$2.picorv32.$procmux$1629_Y [0], S=\cd_sync.ready) into $auto$simplemap.cc:420:simplemap_dff$7315 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$5804 (A=1'0, B=\U$$2.picorv32.mem_wdata [9], S=\cd_sync.ready) into $auto$simplemap.cc:420:simplemap_dff$5663 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$5805 (A=1'0, B=\U$$2.picorv32.mem_wdata [10], S=\cd_sync.ready) into $auto$simplemap.cc:420:simplemap_dff$5664 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$11712 (A=1'0, B=$techmap\U$$2.picorv32.pcpi_mul.$procmux$4475_Y, S=\cd_sync.ready) into $auto$simplemap.cc:420:simplemap_dff$10922 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$5807 (A=1'0, B=\U$$2.picorv32.mem_wdata [12], S=\cd_sync.ready) into $auto$simplemap.cc:420:simplemap_dff$5666 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$5808 (A=1'0, B=\U$$2.picorv32.mem_wdata [13], S=\cd_sync.ready) into $auto$simplemap.cc:420:simplemap_dff$5667 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$5809 (A=1'0, B=\U$$2.picorv32.mem_wdata [14], S=\cd_sync.ready) into $auto$simplemap.cc:420:simplemap_dff$5668 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$5810 (A=1'0, B=\U$$2.picorv32.mem_wdata [15], S=\cd_sync.ready) into $auto$simplemap.cc:420:simplemap_dff$5669 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$5811 (A=1'0, B=\U$$2.picorv32.mem_wdata [16], S=\cd_sync.ready) into $auto$simplemap.cc:420:simplemap_dff$5670 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$5812 (A=1'0, B=\U$$2.picorv32.mem_wdata [17], S=\cd_sync.ready) into $auto$simplemap.cc:420:simplemap_dff$5671 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$5813 (A=1'0, B=\U$$2.picorv32.mem_wdata [18], S=\cd_sync.ready) into $auto$simplemap.cc:420:simplemap_dff$5672 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$5814 (A=1'0, B=\U$$2.picorv32.mem_wdata [19], S=\cd_sync.ready) into $auto$simplemap.cc:420:simplemap_dff$5673 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$5815 (A=1'0, B=\U$$2.picorv32.mem_wdata [20], S=\cd_sync.ready) into $auto$simplemap.cc:420:simplemap_dff$5674 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$5816 (A=1'0, B=\U$$2.picorv32.mem_wdata [21], S=\cd_sync.ready) into $auto$simplemap.cc:420:simplemap_dff$5675 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$5817 (A=1'0, B=\U$$2.picorv32.mem_wdata [22], S=\cd_sync.ready) into $auto$simplemap.cc:420:simplemap_dff$5676 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$5818 (A=1'0, B=\U$$2.picorv32.mem_wdata [23], S=\cd_sync.ready) into $auto$simplemap.cc:420:simplemap_dff$5677 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$5819 (A=1'0, B=\U$$2.picorv32.mem_wdata [24], S=\cd_sync.ready) into $auto$simplemap.cc:420:simplemap_dff$5678 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$5820 (A=1'0, B=\U$$2.picorv32.mem_wdata [25], S=\cd_sync.ready) into $auto$simplemap.cc:420:simplemap_dff$5679 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$5821 (A=1'0, B=\U$$2.picorv32.mem_wdata [26], S=\cd_sync.ready) into $auto$simplemap.cc:420:simplemap_dff$5680 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$5822 (A=1'0, B=\U$$2.picorv32.mem_wdata [27], S=\cd_sync.ready) into $auto$simplemap.cc:420:simplemap_dff$5681 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$5823 (A=1'0, B=\U$$2.picorv32.mem_wdata [28], S=\cd_sync.ready) into $auto$simplemap.cc:420:simplemap_dff$5682 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$5824 (A=1'0, B=\U$$2.picorv32.mem_wdata [29], S=\cd_sync.ready) into $auto$simplemap.cc:420:simplemap_dff$5683 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$5825 (A=1'0, B=\U$$2.picorv32.mem_wdata [30], S=\cd_sync.ready) into $auto$simplemap.cc:420:simplemap_dff$5684 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$5826 (A=1'0, B=\U$$2.picorv32.mem_wdata [31], S=\cd_sync.ready) into $auto$simplemap.cc:420:simplemap_dff$5685 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$6175 (A=1'0, B=$auto$wreduce.cc:455:run$4816 [7], S=\cd_sync.ready) into $auto$simplemap.cc:420:simplemap_dff$6143 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$6170 (A=1'0, B=$auto$wreduce.cc:455:run$4816 [2], S=\cd_sync.ready) into $auto$simplemap.cc:420:simplemap_dff$6138 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$6171 (A=1'0, B=$auto$wreduce.cc:455:run$4816 [3], S=\cd_sync.ready) into $auto$simplemap.cc:420:simplemap_dff$6139 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$6172 (A=1'0, B=$auto$wreduce.cc:455:run$4816 [4], S=\cd_sync.ready) into $auto$simplemap.cc:420:simplemap_dff$6140 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$6174 (A=1'0, B=$auto$wreduce.cc:455:run$4816 [6], S=\cd_sync.ready) into $auto$simplemap.cc:420:simplemap_dff$6142 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$6169 (A=1'0, B=$auto$wreduce.cc:455:run$4816 [1], S=\cd_sync.ready) into $auto$simplemap.cc:420:simplemap_dff$6137 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$6176 (A=1'0, B=$auto$wreduce.cc:455:run$4816 [8], S=\cd_sync.ready) into $auto$simplemap.cc:420:simplemap_dff$6144 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$5795 (A=1'0, B=\U$$2.picorv32.mem_wdata [0], S=\cd_sync.ready) into $auto$simplemap.cc:420:simplemap_dff$5654 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$6177 (A=1'0, B=$auto$wreduce.cc:455:run$4816 [9], S=\cd_sync.ready) into $auto$simplemap.cc:420:simplemap_dff$6145 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$6178 (A=1'0, B=$auto$wreduce.cc:455:run$4816 [10], S=\cd_sync.ready) into $auto$simplemap.cc:420:simplemap_dff$6146 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$6179 (A=1'0, B=$auto$wreduce.cc:455:run$4816 [11], S=\cd_sync.ready) into $auto$simplemap.cc:420:simplemap_dff$6147 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$6180 (A=1'0, B=$auto$wreduce.cc:455:run$4816 [12], S=\cd_sync.ready) into $auto$simplemap.cc:420:simplemap_dff$6148 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$6181 (A=1'0, B=$auto$wreduce.cc:455:run$4816 [13], S=\cd_sync.ready) into $auto$simplemap.cc:420:simplemap_dff$6149 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$6182 (A=1'0, B=$auto$wreduce.cc:455:run$4816 [14], S=\cd_sync.ready) into $auto$simplemap.cc:420:simplemap_dff$6150 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$6183 (A=1'0, B=$auto$wreduce.cc:455:run$4816 [15], S=\cd_sync.ready) into $auto$simplemap.cc:420:simplemap_dff$6151 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$6184 (A=1'0, B=$auto$wreduce.cc:455:run$4816 [16], S=\cd_sync.ready) into $auto$simplemap.cc:420:simplemap_dff$6152 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$6185 (A=1'0, B=$auto$wreduce.cc:455:run$4816 [17], S=\cd_sync.ready) into $auto$simplemap.cc:420:simplemap_dff$6153 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$6186 (A=1'0, B=$auto$wreduce.cc:455:run$4816 [18], S=\cd_sync.ready) into $auto$simplemap.cc:420:simplemap_dff$6154 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$6187 (A=1'0, B=$auto$wreduce.cc:455:run$4816 [19], S=\cd_sync.ready) into $auto$simplemap.cc:420:simplemap_dff$6155 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$6188 (A=1'0, B=$auto$wreduce.cc:455:run$4816 [20], S=\cd_sync.ready) into $auto$simplemap.cc:420:simplemap_dff$6156 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$6189 (A=1'0, B=$auto$wreduce.cc:455:run$4816 [21], S=\cd_sync.ready) into $auto$simplemap.cc:420:simplemap_dff$6157 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$6190 (A=1'0, B=$auto$wreduce.cc:455:run$4816 [22], S=\cd_sync.ready) into $auto$simplemap.cc:420:simplemap_dff$6158 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$6191 (A=1'0, B=$auto$wreduce.cc:455:run$4816 [23], S=\cd_sync.ready) into $auto$simplemap.cc:420:simplemap_dff$6159 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$6192 (A=1'0, B=$auto$wreduce.cc:455:run$4816 [24], S=\cd_sync.ready) into $auto$simplemap.cc:420:simplemap_dff$6160 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$6193 (A=1'0, B=$auto$wreduce.cc:455:run$4816 [25], S=\cd_sync.ready) into $auto$simplemap.cc:420:simplemap_dff$6161 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$6194 (A=1'0, B=$auto$wreduce.cc:455:run$4816 [26], S=\cd_sync.ready) into $auto$simplemap.cc:420:simplemap_dff$6162 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$6195 (A=1'0, B=$auto$wreduce.cc:455:run$4816 [27], S=\cd_sync.ready) into $auto$simplemap.cc:420:simplemap_dff$6163 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$6196 (A=1'0, B=$auto$wreduce.cc:455:run$4816 [28], S=\cd_sync.ready) into $auto$simplemap.cc:420:simplemap_dff$6164 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$6197 (A=1'0, B=$auto$wreduce.cc:455:run$4816 [29], S=\cd_sync.ready) into $auto$simplemap.cc:420:simplemap_dff$6165 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$6198 (A=1'0, B=$auto$wreduce.cc:455:run$4816 [30], S=\cd_sync.ready) into $auto$simplemap.cc:420:simplemap_dff$6166 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$6199 (A=1'0, B=$auto$wreduce.cc:455:run$4816 [31], S=\cd_sync.ready) into $auto$simplemap.cc:420:simplemap_dff$6167 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$6215 (A=1'0, B=$techmap\U$$1.$1 [1], S=\cd_sync.ready) into $auto$simplemap.cc:420:simplemap_dff$6202 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$6216 (A=1'0, B=$techmap\U$$1.$1 [2], S=\cd_sync.ready) into $auto$simplemap.cc:420:simplemap_dff$6203 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$6217 (A=1'0, B=$techmap\U$$1.$1 [3], S=\cd_sync.ready) into $auto$simplemap.cc:420:simplemap_dff$6204 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$6218 (A=1'0, B=$techmap\U$$1.$1 [4], S=\cd_sync.ready) into $auto$simplemap.cc:420:simplemap_dff$6205 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$6219 (A=1'0, B=$techmap\U$$1.$1 [5], S=\cd_sync.ready) into $auto$simplemap.cc:420:simplemap_dff$6206 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$6220 (A=1'0, B=$techmap\U$$1.$1 [6], S=\cd_sync.ready) into $auto$simplemap.cc:420:simplemap_dff$6207 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$6222 (A=1'0, B=$techmap\U$$1.$1 [8], S=\cd_sync.ready) into $auto$simplemap.cc:420:simplemap_dff$6209 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$6223 (A=1'0, B=$techmap\U$$1.$1 [9], S=\cd_sync.ready) into $auto$simplemap.cc:420:simplemap_dff$6210 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$6224 (A=1'0, B=$techmap\U$$1.$1 [10], S=\cd_sync.ready) into $auto$simplemap.cc:420:simplemap_dff$6211 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$6225 (A=1'0, B=$techmap\U$$1.$1 [11], S=\cd_sync.ready) into $auto$simplemap.cc:420:simplemap_dff$6212 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$6226 (A=1'0, B=$techmap\U$$1.$1 [12], S=\cd_sync.ready) into $auto$simplemap.cc:420:simplemap_dff$6213 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$6377 (A=$auto$memory_bram.cc:837:replace_cell$5231 [15], B=1'0, S=$auto$simplemap.cc:256:simplemap_eqne$6366) into $auto$simplemap.cc:420:simplemap_dff$6345 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$6311 (A=$auto$memory_bram.cc:837:replace_cell$5231 [15], B=1'0, S=$auto$simplemap.cc:256:simplemap_eqne$6300) into $auto$simplemap.cc:420:simplemap_dff$6426 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$8707 (A=1'0, B=$techmap\U$$2.picorv32.$ternary$picorv32.v:1316$1358_Y [0], S=$techmap\U$$2.picorv32.$logic_and$picorv32.v:1315$1357_Y) into $auto$simplemap.cc:420:simplemap_dff$6443 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$6173 (A=1'0, B=$auto$wreduce.cc:455:run$4816 [5], S=\cd_sync.ready) into $auto$simplemap.cc:420:simplemap_dff$6141 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$7382 (A=1'0, B=$techmap\U$$2.picorv32.$logic_and$picorv32.v:397$976_Y, S=\cd_sync.ready) into $auto$simplemap.cc:420:simplemap_dff$6795 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$7380 (A=1'0, B=$techmap\U$$2.picorv32.$procmux$4452_Y, S=\cd_sync.ready) into $auto$simplemap.cc:420:simplemap_dff$6796 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$8070 (A=$techmap\U$$2.picorv32.$procmux$4108_Y, B=1'0, S=\U$$2.picorv32.clear_prefetched_high_word) into $auto$simplemap.cc:420:simplemap_dff$6879 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$8042 (A=$techmap$techmap\U$$2.picorv32.$procmux$4126.$reduce_or$/usr/local/bin/../share/yosys/techmap.v:441$8062_Y, B=1'0, S=$techmap\U$$2.picorv32.$logic_or$picorv32.v:566$1022_Y) into $auto$simplemap.cc:420:simplemap_dff$6882 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$8065 (A=\U$$2.picorv32.mem_la_read, B=1'0, S=$techmap\U$$2.picorv32.$logic_or$picorv32.v:566$1022_Y) into $auto$simplemap.cc:420:simplemap_dff$6880 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$8041 (A=$techmap$techmap\U$$2.picorv32.$procmux$4126.$reduce_or$/usr/local/bin/../share/yosys/techmap.v:441$8061_Y, B=1'0, S=$techmap\U$$2.picorv32.$logic_or$picorv32.v:566$1022_Y) into $auto$simplemap.cc:420:simplemap_dff$6881 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$7891 (A=$techmap$techmap\U$$2.picorv32.$procmux$4184.$reduce_or$/usr/local/bin/../share/yosys/techmap.v:441$7885_Y, B=1'0, S=$techmap\U$$2.picorv32.$logic_or$picorv32.v:566$1022_Y) into $auto$simplemap.cc:420:simplemap_dff$6951 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$8498 (A=1'0, B=$techmap\U$$2.picorv32.$procmux$3576_Y, S=\cd_sync.ready) into $auto$simplemap.cc:420:simplemap_dff$6952 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$8513 (A=1'0, B=$techmap\U$$2.picorv32.$procmux$3533_Y, S=\cd_sync.ready) into $auto$simplemap.cc:420:simplemap_dff$6955 (SB_DFFE).
  Merging $auto$simplemap.cc:311:simplemap_lut$6750 (A=1'1, B=$auto$simplemap.cc:309:simplemap_lut$5636 [1], S=\U$$2.picorv32.mem_rdata_latched [1]) into $auto$simplemap.cc:420:simplemap_dff$6964 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$12635 (A=1'0, B=$techmap$techmap\U$$2.picorv32.$procmux$3581.$reduce_or$/usr/local/bin/../share/yosys/techmap.v:441$8467_Y, S=$techmap$techmap\U$$2.picorv32.$procmux$3581.$reduce_or$/usr/local/bin/../share/yosys/techmap.v:445$8459_Y) into $auto$simplemap.cc:420:simplemap_dff$6998 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$12636 (A=1'0, B=$techmap$techmap\U$$2.picorv32.$procmux$3581.$reduce_or$/usr/local/bin/../share/yosys/techmap.v:441$8468_Y, S=$techmap$techmap\U$$2.picorv32.$procmux$3581.$reduce_or$/usr/local/bin/../share/yosys/techmap.v:445$8459_Y) into $auto$simplemap.cc:420:simplemap_dff$6999 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$12637 (A=1'0, B=$techmap$techmap\U$$2.picorv32.$procmux$3581.$reduce_or$/usr/local/bin/../share/yosys/techmap.v:441$8469_Y, S=$techmap$techmap\U$$2.picorv32.$procmux$3581.$reduce_or$/usr/local/bin/../share/yosys/techmap.v:445$8459_Y) into $auto$simplemap.cc:420:simplemap_dff$7000 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$12638 (A=1'0, B=$techmap$techmap\U$$2.picorv32.$procmux$3581.$reduce_or$/usr/local/bin/../share/yosys/techmap.v:441$8470_Y, S=$techmap$techmap\U$$2.picorv32.$procmux$3581.$reduce_or$/usr/local/bin/../share/yosys/techmap.v:445$8459_Y) into $auto$simplemap.cc:420:simplemap_dff$7001 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$12639 (A=1'0, B=$techmap$techmap\U$$2.picorv32.$procmux$3581.$reduce_or$/usr/local/bin/../share/yosys/techmap.v:441$8471_Y, S=$techmap$techmap\U$$2.picorv32.$procmux$3581.$reduce_or$/usr/local/bin/../share/yosys/techmap.v:445$8459_Y) into $auto$simplemap.cc:420:simplemap_dff$7002 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$12640 (A=1'0, B=$techmap$techmap\U$$2.picorv32.$procmux$3581.$reduce_or$/usr/local/bin/../share/yosys/techmap.v:441$8472_Y, S=$techmap$techmap\U$$2.picorv32.$procmux$3581.$reduce_or$/usr/local/bin/../share/yosys/techmap.v:445$8459_Y) into $auto$simplemap.cc:420:simplemap_dff$7003 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$12641 (A=1'0, B=$techmap$techmap\U$$2.picorv32.$procmux$3581.$reduce_or$/usr/local/bin/../share/yosys/techmap.v:441$8473_Y, S=$techmap$techmap\U$$2.picorv32.$procmux$3581.$reduce_or$/usr/local/bin/../share/yosys/techmap.v:445$8459_Y) into $auto$simplemap.cc:420:simplemap_dff$7004 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$12643 (A=1'0, B=$techmap$techmap\U$$2.picorv32.$procmux$3581.$reduce_or$/usr/local/bin/../share/yosys/techmap.v:441$8475_Y, S=$techmap$techmap\U$$2.picorv32.$procmux$3581.$reduce_or$/usr/local/bin/../share/yosys/techmap.v:445$8459_Y) into $auto$simplemap.cc:420:simplemap_dff$7006 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$12644 (A=1'0, B=$techmap$techmap\U$$2.picorv32.$procmux$3581.$reduce_or$/usr/local/bin/../share/yosys/techmap.v:441$8476_Y, S=$techmap$techmap\U$$2.picorv32.$procmux$3581.$reduce_or$/usr/local/bin/../share/yosys/techmap.v:445$8459_Y) into $auto$simplemap.cc:420:simplemap_dff$7007 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$12645 (A=1'0, B=$techmap$techmap\U$$2.picorv32.$procmux$3581.$reduce_or$/usr/local/bin/../share/yosys/techmap.v:441$8477_Y, S=$techmap$techmap\U$$2.picorv32.$procmux$3581.$reduce_or$/usr/local/bin/../share/yosys/techmap.v:445$8459_Y) into $auto$simplemap.cc:420:simplemap_dff$7008 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$12646 (A=1'0, B=$techmap$techmap\U$$2.picorv32.$procmux$3581.$reduce_or$/usr/local/bin/../share/yosys/techmap.v:441$8478_Y, S=$techmap$techmap\U$$2.picorv32.$procmux$3581.$reduce_or$/usr/local/bin/../share/yosys/techmap.v:445$8459_Y) into $auto$simplemap.cc:420:simplemap_dff$7009 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$12647 (A=1'0, B=$techmap$techmap\U$$2.picorv32.$procmux$3581.$reduce_or$/usr/local/bin/../share/yosys/techmap.v:441$8479_Y, S=$techmap$techmap\U$$2.picorv32.$procmux$3581.$reduce_or$/usr/local/bin/../share/yosys/techmap.v:445$8459_Y) into $auto$simplemap.cc:420:simplemap_dff$7010 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$12648 (A=1'0, B=$techmap$techmap\U$$2.picorv32.$procmux$3581.$reduce_or$/usr/local/bin/../share/yosys/techmap.v:441$8480_Y, S=$techmap$techmap\U$$2.picorv32.$procmux$3581.$reduce_or$/usr/local/bin/../share/yosys/techmap.v:445$8459_Y) into $auto$simplemap.cc:420:simplemap_dff$7011 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$12649 (A=1'0, B=$techmap$techmap\U$$2.picorv32.$procmux$3581.$reduce_or$/usr/local/bin/../share/yosys/techmap.v:441$8481_Y, S=$techmap$techmap\U$$2.picorv32.$procmux$3581.$reduce_or$/usr/local/bin/../share/yosys/techmap.v:445$8459_Y) into $auto$simplemap.cc:420:simplemap_dff$7012 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$12650 (A=1'0, B=$techmap$techmap\U$$2.picorv32.$procmux$3581.$reduce_or$/usr/local/bin/../share/yosys/techmap.v:441$8482_Y, S=$techmap$techmap\U$$2.picorv32.$procmux$3581.$reduce_or$/usr/local/bin/../share/yosys/techmap.v:445$8459_Y) into $auto$simplemap.cc:420:simplemap_dff$7013 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$12651 (A=1'0, B=$techmap$techmap\U$$2.picorv32.$procmux$3581.$reduce_or$/usr/local/bin/../share/yosys/techmap.v:441$8483_Y, S=$techmap$techmap\U$$2.picorv32.$procmux$3581.$reduce_or$/usr/local/bin/../share/yosys/techmap.v:445$8459_Y) into $auto$simplemap.cc:420:simplemap_dff$7014 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$12652 (A=1'0, B=$techmap$techmap\U$$2.picorv32.$procmux$3581.$reduce_or$/usr/local/bin/../share/yosys/techmap.v:441$8484_Y, S=$techmap$techmap\U$$2.picorv32.$procmux$3581.$reduce_or$/usr/local/bin/../share/yosys/techmap.v:445$8459_Y) into $auto$simplemap.cc:420:simplemap_dff$7015 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$12653 (A=1'0, B=$techmap$techmap\U$$2.picorv32.$procmux$3581.$reduce_or$/usr/local/bin/../share/yosys/techmap.v:441$8485_Y, S=$techmap$techmap\U$$2.picorv32.$procmux$3581.$reduce_or$/usr/local/bin/../share/yosys/techmap.v:445$8459_Y) into $auto$simplemap.cc:420:simplemap_dff$7016 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$12654 (A=1'0, B=$techmap$techmap\U$$2.picorv32.$procmux$3581.$reduce_or$/usr/local/bin/../share/yosys/techmap.v:441$8486_Y, S=$techmap$techmap\U$$2.picorv32.$procmux$3581.$reduce_or$/usr/local/bin/../share/yosys/techmap.v:445$8459_Y) into $auto$simplemap.cc:420:simplemap_dff$7017 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$12655 (A=1'0, B=$techmap$techmap\U$$2.picorv32.$procmux$3581.$reduce_or$/usr/local/bin/../share/yosys/techmap.v:441$8487_Y, S=$techmap$techmap\U$$2.picorv32.$procmux$3581.$reduce_or$/usr/local/bin/../share/yosys/techmap.v:445$8459_Y) into $auto$simplemap.cc:420:simplemap_dff$7018 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$12656 (A=1'0, B=$techmap$techmap\U$$2.picorv32.$procmux$3581.$reduce_or$/usr/local/bin/../share/yosys/techmap.v:441$8488_Y, S=$techmap$techmap\U$$2.picorv32.$procmux$3581.$reduce_or$/usr/local/bin/../share/yosys/techmap.v:445$8459_Y) into $auto$simplemap.cc:420:simplemap_dff$7019 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$12657 (A=1'0, B=$techmap$techmap\U$$2.picorv32.$procmux$3581.$reduce_or$/usr/local/bin/../share/yosys/techmap.v:441$8489_Y, S=$techmap$techmap\U$$2.picorv32.$procmux$3581.$reduce_or$/usr/local/bin/../share/yosys/techmap.v:445$8459_Y) into $auto$simplemap.cc:420:simplemap_dff$7020 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$12658 (A=1'0, B=$techmap$techmap\U$$2.picorv32.$procmux$3581.$reduce_or$/usr/local/bin/../share/yosys/techmap.v:441$8490_Y, S=$techmap$techmap\U$$2.picorv32.$procmux$3581.$reduce_or$/usr/local/bin/../share/yosys/techmap.v:445$8459_Y) into $auto$simplemap.cc:420:simplemap_dff$7021 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$12659 (A=1'0, B=$techmap$techmap\U$$2.picorv32.$procmux$3581.$reduce_or$/usr/local/bin/../share/yosys/techmap.v:441$8491_Y, S=$techmap$techmap\U$$2.picorv32.$procmux$3581.$reduce_or$/usr/local/bin/../share/yosys/techmap.v:445$8459_Y) into $auto$simplemap.cc:420:simplemap_dff$7022 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$12660 (A=1'0, B=$techmap$techmap\U$$2.picorv32.$procmux$3581.$reduce_or$/usr/local/bin/../share/yosys/techmap.v:441$8492_Y, S=$techmap$techmap\U$$2.picorv32.$procmux$3581.$reduce_or$/usr/local/bin/../share/yosys/techmap.v:445$8459_Y) into $auto$simplemap.cc:420:simplemap_dff$7023 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$12661 (A=1'0, B=$techmap$techmap\U$$2.picorv32.$procmux$3581.$reduce_or$/usr/local/bin/../share/yosys/techmap.v:441$8493_Y, S=$techmap$techmap\U$$2.picorv32.$procmux$3581.$reduce_or$/usr/local/bin/../share/yosys/techmap.v:445$8459_Y) into $auto$simplemap.cc:420:simplemap_dff$7024 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$12662 (A=1'0, B=$techmap$techmap\U$$2.picorv32.$procmux$3581.$reduce_or$/usr/local/bin/../share/yosys/techmap.v:441$8494_Y, S=$techmap$techmap\U$$2.picorv32.$procmux$3581.$reduce_or$/usr/local/bin/../share/yosys/techmap.v:445$8459_Y) into $auto$simplemap.cc:420:simplemap_dff$7025 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$12663 (A=1'0, B=$techmap$techmap\U$$2.picorv32.$procmux$3581.$reduce_or$/usr/local/bin/../share/yosys/techmap.v:441$8495_Y, S=$techmap$techmap\U$$2.picorv32.$procmux$3581.$reduce_or$/usr/local/bin/../share/yosys/techmap.v:445$8459_Y) into $auto$simplemap.cc:420:simplemap_dff$7026 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$12664 (A=1'0, B=$techmap$techmap\U$$2.picorv32.$procmux$3581.$reduce_or$/usr/local/bin/../share/yosys/techmap.v:441$8496_Y, S=$techmap$techmap\U$$2.picorv32.$procmux$3581.$reduce_or$/usr/local/bin/../share/yosys/techmap.v:445$8459_Y) into $auto$simplemap.cc:420:simplemap_dff$7027 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$12665 (A=1'0, B=$techmap$techmap\U$$2.picorv32.$procmux$3581.$reduce_or$/usr/local/bin/../share/yosys/techmap.v:441$8497_Y, S=$techmap$techmap\U$$2.picorv32.$procmux$3581.$reduce_or$/usr/local/bin/../share/yosys/techmap.v:445$8459_Y) into $auto$simplemap.cc:420:simplemap_dff$7028 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$12642 (A=1'0, B=$techmap$techmap\U$$2.picorv32.$procmux$3581.$reduce_or$/usr/local/bin/../share/yosys/techmap.v:441$8474_Y, S=$techmap$techmap\U$$2.picorv32.$procmux$3581.$reduce_or$/usr/local/bin/../share/yosys/techmap.v:445$8459_Y) into $auto$simplemap.cc:420:simplemap_dff$7005 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$8279 (A=1'0, B=$techmap\U$$2.picorv32.$logic_and$picorv32.v:1068$1195_Y, S=\cd_sync.ready) into $auto$simplemap.cc:420:simplemap_dff$7055 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$8293 (A=1'0, B=$techmap\U$$2.picorv32.$logic_and$picorv32.v:1075$1223_Y, S=\cd_sync.ready) into $auto$simplemap.cc:420:simplemap_dff$7048 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$8291 (A=1'0, B=$techmap\U$$2.picorv32.$logic_and$picorv32.v:1074$1219_Y, S=\cd_sync.ready) into $auto$simplemap.cc:420:simplemap_dff$7049 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$8289 (A=1'0, B=$techmap\U$$2.picorv32.$logic_and$picorv32.v:1073$1215_Y, S=\cd_sync.ready) into $auto$simplemap.cc:420:simplemap_dff$7050 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$8287 (A=1'0, B=$techmap\U$$2.picorv32.$logic_and$picorv32.v:1072$1211_Y, S=\cd_sync.ready) into $auto$simplemap.cc:420:simplemap_dff$7051 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$8285 (A=1'0, B=$techmap\U$$2.picorv32.$logic_and$picorv32.v:1071$1207_Y, S=\cd_sync.ready) into $auto$simplemap.cc:420:simplemap_dff$7052 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$8283 (A=1'0, B=$techmap\U$$2.picorv32.$logic_and$picorv32.v:1070$1203_Y, S=\cd_sync.ready) into $auto$simplemap.cc:420:simplemap_dff$7053 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$8266 (A=1'0, B=$techmap\U$$2.picorv32.$logic_and$picorv32.v:1058$1167_Y, S=\cd_sync.ready) into $auto$simplemap.cc:420:simplemap_dff$7063 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$8277 (A=1'0, B=$techmap\U$$2.picorv32.$logic_and$picorv32.v:1067$1191_Y, S=\cd_sync.ready) into $auto$simplemap.cc:420:simplemap_dff$7056 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$8275 (A=1'0, B=$techmap\U$$2.picorv32.$logic_and$picorv32.v:1066$1187_Y, S=\cd_sync.ready) into $auto$simplemap.cc:420:simplemap_dff$7057 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$8270 (A=1'0, B=$techmap\U$$2.picorv32.$logic_and$picorv32.v:1060$1171_Y, S=\cd_sync.ready) into $auto$simplemap.cc:420:simplemap_dff$7061 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$8281 (A=1'0, B=$techmap\U$$2.picorv32.$logic_and$picorv32.v:1069$1199_Y, S=\cd_sync.ready) into $auto$simplemap.cc:420:simplemap_dff$7054 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$8264 (A=1'0, B=$techmap\U$$2.picorv32.$logic_and$picorv32.v:1057$1165_Y, S=\cd_sync.ready) into $auto$simplemap.cc:420:simplemap_dff$7064 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$8262 (A=1'0, B=$techmap\U$$2.picorv32.$logic_and$picorv32.v:1056$1163_Y, S=\cd_sync.ready) into $auto$simplemap.cc:420:simplemap_dff$7065 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$8260 (A=1'0, B=$techmap\U$$2.picorv32.$logic_and$picorv32.v:1055$1161_Y, S=\cd_sync.ready) into $auto$simplemap.cc:420:simplemap_dff$7066 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$8268 (A=1'0, B=$techmap\U$$2.picorv32.$logic_and$picorv32.v:1059$1169_Y, S=\cd_sync.ready) into $auto$simplemap.cc:420:simplemap_dff$7062 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$8242 (A=1'0, B=$techmap\U$$2.picorv32.$logic_and$picorv32.v:1039$1135_Y, S=\cd_sync.ready) into $auto$simplemap.cc:420:simplemap_dff$7079 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$8250 (A=1'0, B=$techmap\U$$2.picorv32.$logic_and$picorv32.v:1043$1143_Y, S=\cd_sync.ready) into $auto$simplemap.cc:420:simplemap_dff$7075 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$8248 (A=1'0, B=$techmap\U$$2.picorv32.$logic_and$picorv32.v:1042$1141_Y, S=\cd_sync.ready) into $auto$simplemap.cc:420:simplemap_dff$7076 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$8246 (A=1'0, B=$techmap\U$$2.picorv32.$logic_and$picorv32.v:1041$1139_Y, S=\cd_sync.ready) into $auto$simplemap.cc:420:simplemap_dff$7077 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$8240 (A=1'0, B=$techmap\U$$2.picorv32.$logic_and$picorv32.v:1038$1133_Y, S=\cd_sync.ready) into $auto$simplemap.cc:420:simplemap_dff$7080 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$8244 (A=1'0, B=$techmap\U$$2.picorv32.$logic_and$picorv32.v:1040$1137_Y, S=\cd_sync.ready) into $auto$simplemap.cc:420:simplemap_dff$7078 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$8704 (A=$techmap\U$$2.picorv32.$1\clear_prefetched_high_word[0:0], B=1'1, S=$techmap\U$$2.picorv32.$logic_or$picorv32.v:1294$1351_Y) into $auto$simplemap.cc:420:simplemap_dff$7117 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$9332 (A=1'0, B=$techmap\U$$2.picorv32.$procmux$2310_Y, S=\cd_sync.ready) into $auto$simplemap.cc:420:simplemap_dff$7120 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$9249 (A=1'0, B=$techmap$techmap\U$$2.picorv32.$procmux$2556.$reduce_or$/usr/local/bin/../share/yosys/techmap.v:441$7869_Y, S=\cd_sync.ready) into $auto$simplemap.cc:420:simplemap_dff$7197 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$9258 (A=1'0, B=$techmap$techmap\U$$2.picorv32.$procmux$2485.$and$/usr/local/bin/../share/yosys/techmap.v:434$7867_Y, S=\cd_sync.ready) into $auto$simplemap.cc:420:simplemap_dff$7194 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$9255 (A=1'0, B=$techmap$techmap\U$$2.picorv32.$procmux$2498.$and$/usr/local/bin/../share/yosys/techmap.v:434$7867_Y, S=\cd_sync.ready) into $auto$simplemap.cc:420:simplemap_dff$7195 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$9246 (A=1'0, B=$techmap$techmap\U$$2.picorv32.$procmux$2592.$and$/usr/local/bin/../share/yosys/techmap.v:434$7867_Y, S=\cd_sync.ready) into $auto$simplemap.cc:420:simplemap_dff$7198 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$9241 (A=1'0, B=$techmap$techmap\U$$2.picorv32.$procmux$2599.$reduce_or$/usr/local/bin/../share/yosys/techmap.v:441$8646_Y, S=\cd_sync.ready) into $auto$simplemap.cc:420:simplemap_dff$7199 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$9345 (A=1'0, B=$techmap\U$$2.picorv32.$procmux$2226_Y, S=\cd_sync.ready) into $auto$simplemap.cc:420:simplemap_dff$7203 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$9350 (A=1'0, B=$techmap\U$$2.picorv32.$2\set_mem_do_wdata[0:0], S=\cd_sync.ready) into $auto$simplemap.cc:420:simplemap_dff$7206 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$9349 (A=1'0, B=$techmap\U$$2.picorv32.$2\set_mem_do_rdata[0:0], S=\cd_sync.ready) into $auto$simplemap.cc:420:simplemap_dff$7207 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$9154 (A=$techmap\U$$2.picorv32.$procmux$2947_Y, B=1'1, S=$techmap\U$$2.picorv32.$0\set_mem_do_rinst[0:0]) into $auto$simplemap.cc:420:simplemap_dff$7208 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$9149 (A=$techmap\U$$2.picorv32.$logic_and$picorv32.v:1568$1440_Y, B=1'0, S=$techmap\U$$2.picorv32.$logic_or$picorv32.v:1944$1555_Y) into $auto$simplemap.cc:420:simplemap_dff$7209 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$6214 (A=1'0, B=$techmap\U$$1.$1 [0], S=\cd_sync.ready) into $auto$simplemap.cc:420:simplemap_dff$6201 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$6221 (A=1'0, B=$techmap\U$$1.$1 [7], S=\cd_sync.ready) into $auto$simplemap.cc:420:simplemap_dff$6208 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$6168 (A=1'0, B=$auto$wreduce.cc:455:run$4816 [0], S=\cd_sync.ready) into $auto$simplemap.cc:420:simplemap_dff$6136 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$5797 (A=1'0, B=\U$$2.picorv32.mem_wdata [2], S=\cd_sync.ready) into $auto$simplemap.cc:420:simplemap_dff$5656 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$9453 (A=1'0, B=$techmap\U$$2.picorv32.$procmux$1629_Y [1], S=\cd_sync.ready) into $auto$simplemap.cc:420:simplemap_dff$7316 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$9454 (A=1'0, B=$techmap\U$$2.picorv32.$procmux$1629_Y [2], S=\cd_sync.ready) into $auto$simplemap.cc:420:simplemap_dff$7317 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$9455 (A=1'0, B=$techmap\U$$2.picorv32.$procmux$1629_Y [3], S=\cd_sync.ready) into $auto$simplemap.cc:420:simplemap_dff$7318 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$9456 (A=1'0, B=$techmap\U$$2.picorv32.$procmux$1629_Y [4], S=\cd_sync.ready) into $auto$simplemap.cc:420:simplemap_dff$7319 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$9457 (A=1'0, B=$techmap\U$$2.picorv32.$procmux$1629_Y [5], S=\cd_sync.ready) into $auto$simplemap.cc:420:simplemap_dff$7320 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$9458 (A=1'0, B=$techmap\U$$2.picorv32.$procmux$1629_Y [6], S=\cd_sync.ready) into $auto$simplemap.cc:420:simplemap_dff$7321 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$9460 (A=1'0, B=$techmap\U$$2.picorv32.$procmux$1629_Y [8], S=\cd_sync.ready) into $auto$simplemap.cc:420:simplemap_dff$7323 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$9461 (A=1'1, B=$techmap\U$$2.picorv32.$procmux$1629_Y [9], S=\cd_sync.ready) into $auto$simplemap.cc:420:simplemap_dff$7324 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$9462 (A=1'0, B=$techmap\U$$2.picorv32.$procmux$1629_Y [10], S=\cd_sync.ready) into $auto$simplemap.cc:420:simplemap_dff$7325 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$9463 (A=1'0, B=$techmap\U$$2.picorv32.$procmux$1629_Y [11], S=\cd_sync.ready) into $auto$simplemap.cc:420:simplemap_dff$7326 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$9464 (A=1'0, B=$techmap\U$$2.picorv32.$procmux$1629_Y [12], S=\cd_sync.ready) into $auto$simplemap.cc:420:simplemap_dff$7327 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$9465 (A=1'0, B=$techmap\U$$2.picorv32.$procmux$1629_Y [13], S=\cd_sync.ready) into $auto$simplemap.cc:420:simplemap_dff$7328 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$9466 (A=1'0, B=$techmap\U$$2.picorv32.$procmux$1629_Y [14], S=\cd_sync.ready) into $auto$simplemap.cc:420:simplemap_dff$7329 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$9467 (A=1'0, B=$techmap\U$$2.picorv32.$procmux$1629_Y [15], S=\cd_sync.ready) into $auto$simplemap.cc:420:simplemap_dff$7330 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$9468 (A=1'0, B=$techmap\U$$2.picorv32.$procmux$1629_Y [16], S=\cd_sync.ready) into $auto$simplemap.cc:420:simplemap_dff$7331 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$9469 (A=1'0, B=$techmap\U$$2.picorv32.$procmux$1629_Y [17], S=\cd_sync.ready) into $auto$simplemap.cc:420:simplemap_dff$7332 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$9470 (A=1'0, B=$techmap\U$$2.picorv32.$procmux$1629_Y [18], S=\cd_sync.ready) into $auto$simplemap.cc:420:simplemap_dff$7333 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$9471 (A=1'0, B=$techmap\U$$2.picorv32.$procmux$1629_Y [19], S=\cd_sync.ready) into $auto$simplemap.cc:420:simplemap_dff$7334 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$9472 (A=1'0, B=$techmap\U$$2.picorv32.$procmux$1629_Y [20], S=\cd_sync.ready) into $auto$simplemap.cc:420:simplemap_dff$7335 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$9473 (A=1'0, B=$techmap\U$$2.picorv32.$procmux$1629_Y [21], S=\cd_sync.ready) into $auto$simplemap.cc:420:simplemap_dff$7336 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$9474 (A=1'0, B=$techmap\U$$2.picorv32.$procmux$1629_Y [22], S=\cd_sync.ready) into $auto$simplemap.cc:420:simplemap_dff$7337 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$9475 (A=1'0, B=$techmap\U$$2.picorv32.$procmux$1629_Y [23], S=\cd_sync.ready) into $auto$simplemap.cc:420:simplemap_dff$7338 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$9476 (A=1'0, B=$techmap\U$$2.picorv32.$procmux$1629_Y [24], S=\cd_sync.ready) into $auto$simplemap.cc:420:simplemap_dff$7339 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$9477 (A=1'0, B=$techmap\U$$2.picorv32.$procmux$1629_Y [25], S=\cd_sync.ready) into $auto$simplemap.cc:420:simplemap_dff$7340 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$9478 (A=1'0, B=$techmap\U$$2.picorv32.$procmux$1629_Y [26], S=\cd_sync.ready) into $auto$simplemap.cc:420:simplemap_dff$7341 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$9479 (A=1'0, B=$techmap\U$$2.picorv32.$procmux$1629_Y [27], S=\cd_sync.ready) into $auto$simplemap.cc:420:simplemap_dff$7342 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$9480 (A=1'0, B=$techmap\U$$2.picorv32.$procmux$1629_Y [28], S=\cd_sync.ready) into $auto$simplemap.cc:420:simplemap_dff$7343 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$9481 (A=1'0, B=$techmap\U$$2.picorv32.$procmux$1629_Y [29], S=\cd_sync.ready) into $auto$simplemap.cc:420:simplemap_dff$7344 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$9482 (A=1'0, B=$techmap\U$$2.picorv32.$procmux$1629_Y [30], S=\cd_sync.ready) into $auto$simplemap.cc:420:simplemap_dff$7345 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$8744 (A=1'0, B=$auto$alumacc.cc:474:replace_alu$4921.AA [1], S=\cd_sync.ready) into $auto$simplemap.cc:420:simplemap_dff$7347 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$8745 (A=1'0, B=$auto$alumacc.cc:474:replace_alu$4921.AA [2], S=\cd_sync.ready) into $auto$simplemap.cc:420:simplemap_dff$7348 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$8746 (A=1'0, B=$auto$alumacc.cc:474:replace_alu$4921.AA [3], S=\cd_sync.ready) into $auto$simplemap.cc:420:simplemap_dff$7349 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$8747 (A=1'0, B=$auto$alumacc.cc:474:replace_alu$4921.AA [4], S=\cd_sync.ready) into $auto$simplemap.cc:420:simplemap_dff$7350 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$8748 (A=1'0, B=$auto$alumacc.cc:474:replace_alu$4921.AA [5], S=\cd_sync.ready) into $auto$simplemap.cc:420:simplemap_dff$7351 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$8749 (A=1'0, B=$auto$alumacc.cc:474:replace_alu$4921.AA [6], S=\cd_sync.ready) into $auto$simplemap.cc:420:simplemap_dff$7352 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$8750 (A=1'0, B=$auto$alumacc.cc:474:replace_alu$4921.AA [7], S=\cd_sync.ready) into $auto$simplemap.cc:420:simplemap_dff$7353 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$8752 (A=1'0, B=$auto$alumacc.cc:474:replace_alu$4921.AA [9], S=\cd_sync.ready) into $auto$simplemap.cc:420:simplemap_dff$7355 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$9459 (A=1'0, B=$techmap\U$$2.picorv32.$procmux$1629_Y [7], S=\cd_sync.ready) into $auto$simplemap.cc:420:simplemap_dff$7322 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$8753 (A=1'1, B=$auto$alumacc.cc:474:replace_alu$4921.AA [10], S=\cd_sync.ready) into $auto$simplemap.cc:420:simplemap_dff$7356 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$8754 (A=1'0, B=$auto$alumacc.cc:474:replace_alu$4921.AA [11], S=\cd_sync.ready) into $auto$simplemap.cc:420:simplemap_dff$7357 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$8755 (A=1'0, B=$auto$alumacc.cc:474:replace_alu$4921.AA [12], S=\cd_sync.ready) into $auto$simplemap.cc:420:simplemap_dff$7358 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$8756 (A=1'0, B=$auto$alumacc.cc:474:replace_alu$4921.AA [13], S=\cd_sync.ready) into $auto$simplemap.cc:420:simplemap_dff$7359 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$8757 (A=1'0, B=$auto$alumacc.cc:474:replace_alu$4921.AA [14], S=\cd_sync.ready) into $auto$simplemap.cc:420:simplemap_dff$7360 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$8758 (A=1'0, B=$auto$alumacc.cc:474:replace_alu$4921.AA [15], S=\cd_sync.ready) into $auto$simplemap.cc:420:simplemap_dff$7361 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$8759 (A=1'0, B=$auto$alumacc.cc:474:replace_alu$4921.AA [16], S=\cd_sync.ready) into $auto$simplemap.cc:420:simplemap_dff$7362 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$8760 (A=1'0, B=$auto$alumacc.cc:474:replace_alu$4921.AA [17], S=\cd_sync.ready) into $auto$simplemap.cc:420:simplemap_dff$7363 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$8761 (A=1'0, B=$auto$alumacc.cc:474:replace_alu$4921.AA [18], S=\cd_sync.ready) into $auto$simplemap.cc:420:simplemap_dff$7364 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$8762 (A=1'0, B=$auto$alumacc.cc:474:replace_alu$4921.AA [19], S=\cd_sync.ready) into $auto$simplemap.cc:420:simplemap_dff$7365 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$8763 (A=1'0, B=$auto$alumacc.cc:474:replace_alu$4921.AA [20], S=\cd_sync.ready) into $auto$simplemap.cc:420:simplemap_dff$7366 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$8764 (A=1'0, B=$auto$alumacc.cc:474:replace_alu$4921.AA [21], S=\cd_sync.ready) into $auto$simplemap.cc:420:simplemap_dff$7367 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$8765 (A=1'0, B=$auto$alumacc.cc:474:replace_alu$4921.AA [22], S=\cd_sync.ready) into $auto$simplemap.cc:420:simplemap_dff$7368 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$8766 (A=1'0, B=$auto$alumacc.cc:474:replace_alu$4921.AA [23], S=\cd_sync.ready) into $auto$simplemap.cc:420:simplemap_dff$7369 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$8767 (A=1'0, B=$auto$alumacc.cc:474:replace_alu$4921.AA [24], S=\cd_sync.ready) into $auto$simplemap.cc:420:simplemap_dff$7370 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$8768 (A=1'0, B=$auto$alumacc.cc:474:replace_alu$4921.AA [25], S=\cd_sync.ready) into $auto$simplemap.cc:420:simplemap_dff$7371 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$8769 (A=1'0, B=$auto$alumacc.cc:474:replace_alu$4921.AA [26], S=\cd_sync.ready) into $auto$simplemap.cc:420:simplemap_dff$7372 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$8770 (A=1'0, B=$auto$alumacc.cc:474:replace_alu$4921.AA [27], S=\cd_sync.ready) into $auto$simplemap.cc:420:simplemap_dff$7373 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$8771 (A=1'0, B=$auto$alumacc.cc:474:replace_alu$4921.AA [28], S=\cd_sync.ready) into $auto$simplemap.cc:420:simplemap_dff$7374 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$8772 (A=1'0, B=$auto$alumacc.cc:474:replace_alu$4921.AA [29], S=\cd_sync.ready) into $auto$simplemap.cc:420:simplemap_dff$7375 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$8773 (A=1'0, B=$auto$alumacc.cc:474:replace_alu$4921.AA [30], S=\cd_sync.ready) into $auto$simplemap.cc:420:simplemap_dff$7376 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$8774 (A=1'0, B=$auto$alumacc.cc:474:replace_alu$4921.AA [31], S=\cd_sync.ready) into $auto$simplemap.cc:420:simplemap_dff$7377 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$8740 (A=1'0, B=$techmap\U$$2.picorv32.$procmux$3228_Y, S=\cd_sync.ready) into $auto$simplemap.cc:420:simplemap_dff$7378 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$8751 (A=1'0, B=$auto$alumacc.cc:474:replace_alu$4921.AA [8], S=\cd_sync.ready) into $auto$simplemap.cc:420:simplemap_dff$7354 (SB_DFFE).

3.39. Executing ICE40_OPT pass (performing simple optimizations).

3.39.1. Running ICE40 specific optimizations.

3.39.2. Executing OPT_EXPR pass (perform const folding).
Optimizing module top.
<suppressed ~540 debug messages>

3.39.3. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\top'.
<suppressed ~4650 debug messages>
Removed a total of 1550 cells.

3.39.4. Executing OPT_RMDFF pass (remove dff with constant values).

3.39.5. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \top..
Removed 308 unused cells and 6900 unused wires.
<suppressed ~315 debug messages>

3.39.6. Rerunning OPT passes. (Removed registers in this run.)

3.39.7. Running ICE40 specific optimizations.

3.39.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module top.

3.39.9. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\top'.
Removed a total of 0 cells.

3.39.10. Executing OPT_RMDFF pass (remove dff with constant values).

3.39.11. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \top..

3.39.12. Finished OPT passes. (There is nothing left to do.)

3.40. Executing TECHMAP pass (map to technology primitives).

3.40.1. Executing Verilog-2005 frontend: /usr/local/bin/../share/yosys/ice40/latches_map.v
Parsing Verilog input from `/usr/local/bin/../share/yosys/ice40/latches_map.v' to AST representation.
Generating RTLIL representation for module `\$_DLATCH_N_'.
Generating RTLIL representation for module `\$_DLATCH_P_'.
Successfully finished Verilog frontend.

3.40.2. Continuing TECHMAP pass.
No more expansions possible.

3.41. Executing ABC pass (technology mapping using ABC).

3.41.1. Extracting gate netlist of module `\top' to `<abc-temp-dir>/input.blif'..
Extracted 5199 gates and 6592 wires to a netlist network with 1391 inputs and 1041 outputs.

3.41.1.1. Executing ABC.
Running ABC command: <yosys-exe-dir>/yosys-abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_lut <abc-temp-dir>/lutdefs.txt 
ABC: + strash 
ABC: + ifraig 
ABC: + scorr 
ABC: Warning: The network is combinational (run "fraig" or "fraig_sweep").
ABC: + dc2 
ABC: + dretime 
ABC: + retime 
ABC: + strash 
ABC: + dch -f 
ABC: + if 
ABC: + mfs2 
ABC: + lutpack -S 1 
ABC: + dress 
ABC: Total number of equiv classes                =    1471.
ABC: Participating nodes from both networks       =    3151.
ABC: Participating nodes from the first network   =    1475. (  68.57 % of nodes)
ABC: Participating nodes from the second network  =    1676. (  77.92 % of nodes)
ABC: Node pairs (any polarity)                    =    1475. (  68.57 % of names can be moved)
ABC: Node pairs (same polarity)                   =    1246. (  57.93 % of names can be moved)
ABC: Total runtime =     0.12 sec
ABC: + write_blif <abc-temp-dir>/output.blif 

3.41.1.2. Re-integrating ABC results.
ABC RESULTS:              $lut cells:     4300
ABC RESULTS:        internal signals:     4160
ABC RESULTS:           input signals:     1391
ABC RESULTS:          output signals:     1041
Removing temp directory.
Removed 0 unused cells and 3044 unused wires.

3.42. Executing TECHMAP pass (map to technology primitives).

3.42.1. Executing Verilog-2005 frontend: /usr/local/bin/../share/yosys/ice40/cells_map.v
Parsing Verilog input from `/usr/local/bin/../share/yosys/ice40/cells_map.v' to AST representation.
Generating RTLIL representation for module `\$_DFF_N_'.
Generating RTLIL representation for module `\$_DFF_P_'.
Generating RTLIL representation for module `\$_DFFE_NN_'.
Generating RTLIL representation for module `\$_DFFE_PN_'.
Generating RTLIL representation for module `\$_DFFE_NP_'.
Generating RTLIL representation for module `\$_DFFE_PP_'.
Generating RTLIL representation for module `\$_DFF_NN0_'.
Generating RTLIL representation for module `\$_DFF_NN1_'.
Generating RTLIL representation for module `\$_DFF_PN0_'.
Generating RTLIL representation for module `\$_DFF_PN1_'.
Generating RTLIL representation for module `\$_DFF_NP0_'.
Generating RTLIL representation for module `\$_DFF_NP1_'.
Generating RTLIL representation for module `\$_DFF_PP0_'.
Generating RTLIL representation for module `\$_DFF_PP1_'.
Generating RTLIL representation for module `\$__DFFE_NN0'.
Generating RTLIL representation for module `\$__DFFE_NN1'.
Generating RTLIL representation for module `\$__DFFE_PN0'.
Generating RTLIL representation for module `\$__DFFE_PN1'.
Generating RTLIL representation for module `\$__DFFE_NP0'.
Generating RTLIL representation for module `\$__DFFE_NP1'.
Generating RTLIL representation for module `\$__DFFE_PP0'.
Generating RTLIL representation for module `\$__DFFE_PP1'.
Generating RTLIL representation for module `\$lut'.
Successfully finished Verilog frontend.

3.42.2. Continuing TECHMAP pass.
Using template $paramod\$lut\WIDTH=4\LUT=16'0000000000000001 for cells of type $lut.
Using template $paramod\$lut\WIDTH=3\LUT=8'00000001 for cells of type $lut.
Using template $paramod\$lut\WIDTH=3\LUT=8'00010000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=2\LUT=4'0100 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1100101000000000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=3\LUT=8'01000000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=2\LUT=4'1000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=2\LUT=4'0001 for cells of type $lut.
Using template $paramod\$lut\WIDTH=2\LUT=4'1011 for cells of type $lut.
Using template $paramod\$lut\WIDTH=2\LUT=4'1110 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0101001100110011 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1111100010001000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0000101100000000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=3\LUT=8'00000111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0000011101110111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0111000000000000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0000000100000000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1000000000000000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0111111111111111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0001111111111111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=3\LUT=8'00001101 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1111100000000000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0001000000000000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=3\LUT=8'01110000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0111000001110111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0000000011111110 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0001000100001111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0000000011110001 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1110111011110000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0100111100000000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1011000010111011 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0000000001001111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1111111011111111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=1\LUT=2'01 for cells of type $lut.
Using template $paramod\$lut\WIDTH=3\LUT=8'10001111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0100000000000000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=3\LUT=8'11010000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1011000000000000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=3\LUT=8'11111000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1111000100000000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0000000011111000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1100000000001010 for cells of type $lut.
Using template $paramod\$lut\WIDTH=3\LUT=8'11110001 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1100010100000000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1110001111111111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0000101110111011 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1111111111100000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0111000011111111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=2\LUT=4'0110 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1000110011001111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=3\LUT=8'10110000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0000011100000000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=3\LUT=8'11000101 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0000000011110100 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1101110000000011 for cells of type $lut.
Using template $paramod\$lut\WIDTH=3\LUT=8'11111110 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0001000000000001 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0000111111101110 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0101110011111111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=3\LUT=8'00001110 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0000000000011111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1000111100000000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1000100011110000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0000000000000111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=3\LUT=8'00110101 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1110111100000000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=3\LUT=8'11101111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=3\LUT=8'11001010 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1111001011111111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1100101010101100 for cells of type $lut.
Using template $paramod\$lut\WIDTH=3\LUT=8'10111111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1000011101111000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1111100011111111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1110100010001000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=3\LUT=8'00111010 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0000000011010111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1011101111110000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0000000011101111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=3\LUT=8'01001111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=3\LUT=8'00010100 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1010001111111111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=3\LUT=8'10000000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=3\LUT=8'10101100 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1111010000000000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1111111111110010 for cells of type $lut.
Using template $paramod\$lut\WIDTH=3\LUT=8'11100000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=3\LUT=8'10100011 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0001111100000000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0000000111111111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0000111110111011 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1111111111111000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=2\LUT=4'0111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0011101011111111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1010110000000000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1111111111110100 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1010110011111111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1110000011111111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1000111110001000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1011000011111111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1011111100000000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1001000000001001 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0000000010111111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1111111000000000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0111111100000000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0000101111111111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0000111000000000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0000110100000000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0000000000001101 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1010001101011100 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1111010000001011 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0011010111111111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=3\LUT=8'01010011 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0101110011001100 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1110000011101110 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0000000000001011 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0100111111110000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0101110010100011 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1111100000000111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0100000100000000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1011111011111111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0000101000110000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0000111100010001 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0100000000000001 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1111000001110111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1111010001000100 for cells of type $lut.
Using template $paramod\$lut\WIDTH=3\LUT=8'01111111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1111111110110000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=3\LUT=8'10011111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1111010000001111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0000011111111111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1111111110000000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1111000100010001 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0000000001111111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=3\LUT=8'01111100 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1010110011001010 for cells of type $lut.
Using template $paramod\$lut\WIDTH=3\LUT=8'10010110 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0000110000001010 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0011101000000000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1111111111110001 for cells of type $lut.
Using template $paramod\$lut\WIDTH=3\LUT=8'10110100 for cells of type $lut.
Using template $paramod\$lut\WIDTH=3\LUT=8'11110100 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0100010001001111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1100110011001010 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0011110001010101 for cells of type $lut.
Using template $paramod\$lut\WIDTH=3\LUT=8'00001011 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1000100010001111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1110000000000000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0000011100110000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0000101100110000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1010110011001100 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0100111101000100 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0000001100001010 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0011001100111010 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0011000000111011 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1101000000000000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=3\LUT=8'00011111 for cells of type $lut.
No more expansions possible.
<suppressed ~3865 debug messages>
Removed 0 unused cells and 4298 unused wires.

3.43. Executing HIERARCHY pass (managing design hierarchy).

3.43.1. Analyzing design hierarchy..
Top module:  \top

3.43.2. Analyzing design hierarchy..
Top module:  \top
Removed 0 unused modules.

3.44. Printing statistics.

=== top ===

   Number of wires:               2735
   Number of wire bits:           5555
   Number of public wires:         241
   Number of public wire bits:    2509
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:               3916
     SB_CARRY                      405
     SB_DFF                        185
     SB_DFFE                       467
     SB_DFFESR                     245
     SB_DFFESS                       8
     SB_DFFSR                       60
     SB_DFFSS                        2
     SB_IO                           3
     SB_LUT4                      2524
     SB_RAM40_4K                    17

3.45. Executing CHECK pass (checking for obvious problems).
checking module top..
found and reported 0 problems.

4. Executing JSON backend.

End of script. Logfile hash: 1b36411ab3, CPU: user 13.53s system 0.17s
Yosys 0.9 (git sha1 UNKNOWN, clang 12.0.0 -fPIC -Os)
Time spent: 25% 20x opt_merge (3 sec), 23% 24x opt_clean (3 sec), ...
